{"version":3,"sources":["theme/themes.js","components/wrappers/darkThemeProvider.js","data/constants.js","data/reducers/drawingReducer.js","data/reducers/applicationReducer.js","data/reducers/styleReducer.js","data/reducers/index.js","components/styleComponents/Layout.js","components/Elements/Navigation/NavigationStyles.js","data/actions/applicationActions/applicationActions.js","components/styleComponents/ButtonStyles.js","components/Elements/Navigation/AppSettings.js","components/sheetElements/line/LineSVG.js","components/styleComponents/Select/SelectStyle.js","components/styleComponents/Select/Select.js","components/styleComponents/Inputs.js","components/Elements/Navigation/StyleSettings.js","data/actions/styleActions/styleActions.js","components/Elements/Navigation/DrawingOptions.js","data/actions/drawingActions/drawingActions.js","components/Elements/Navigation/PageSettings.js","components/Elements/Navigation/Navigation.js","components/Elements/Logo/LogoStyles.js","components/Elements/Logo/Logo.js","components/Elements/Workspace/WrokspaceStyles.js","hooks/useMousePosition.js","components/drawElements/polyLine/PolyLine.js","components/drawElements/line/Line.js","components/sheetElements/polyLine/PolyLineSVG.js","components/Elements/Workspace/Sheet.js","components/sheetElements/circle/CircleSVG.js","components/drawElements/circle/Circle.js","components/sheetElements/rect/RectSVG.js","components/drawElements/rect/Rect.js","components/drawElements/curve/CurveStyles.js","components/sheetElements/curve/CurveSVG.js","components/drawElements/curve/Curve.js","components/sheetElements/text/TextSVG.js","components/drawElements/text/Text.js","components/drawElements/pencil/Pencil.js","components/drawElements/pencil/PencilStyles.js","components/sheetElements/image/ImageSVG.js","components/drawElements/image/Image.js","components/drawElements/image/ImageInputStyles.js","components/drawElements/image/ImageInput.js","components/Elements/Workspace/BorderIndicator.js","components/Elements/Workspace/Workspace.js","App.js","data/store.js","reportWebVitals.js","index.js"],"names":["darkTheme","background","normal","normalHover","dark","darkHover","border","color","icon","hover","font","paper","lightTheme","DarkThemeProvider","children","darkThemeEnabled","useSelector","state","application","theme","LINE_ADD","CIRCLE_ADD","RECT_ADD","CURVE_ADD","TEXT_ADD","IMAGE_ADD","LINE_DELETE","CIRCLE_DELETE","RECT_DELETE","CURVE_DELETE","TEXT_DELETE","IMAGE_DELETE","LOAD_DATA","THEME_TOGGLE","SET_SHEET_WIDTH","SET_SHEET_HEIGHT","SET_SHEET_OFFSET_Y","SET_SHEET_OFFSET_X","SET_DRAWING","TOGGLE_INDICATOR","TOGGLE_ORIENTATION","SET_FONT_SIZE","SET_COLOR","SET_PATTERN","SET_LINE_WIDTH","SET_FILL","startElements","lines","circles","rects","curves","texts","images","elements","action","type","payload","filter","line","id","circle","rect","curve","text","image","startState","drawing","indicator","sheetOffsetX","window","innerWidth","innerHeight","sheetOffsetY","sheetWidth","sheetHeight","sheetVertical","fontSize","fill","pattern","lineWidth","style","rootReducer","combineReducers","Wrapper","styled","div","NavigationWrapper","section","Dragger","Minimizer","button","ButtonsWrapper","StyleInfo","UploadFileInfo","Information","span","setDrawing","element","ParentButton","NormalButton","SetDarkButton","SetLightButton","ConnectedAppSettings","connect","themeToggle","resetMinimized","useState","information","setInformation","handleThemeChange","onClick","faCloud","faSun","faMoon","position","className","faInfo","LineSVG","linePattern","firstPointX","firstPointY","secondPointX","secondPointY","lineStyle","useMemo","stroke","strokeWidth","strokeDasharray","x1","y1","x2","y2","Options","OptionItem","svg","props","left","Select","options","optionsVisible","setOptionsVisible","opt","map","onSelect","ParentInput","input","ColorInput","NumberInput","FileInput","ConnectedStyleSettings","setFontSize","size","setColor","setFill","setPattern","setLineWidth","width","setC","setFz","setP","setLw","setF","fillFocus","setFillFocus","colorFocus","setColorFocus","patternOptions","handlePatternSelect","lineWidthOptions","handleLineWidthSelect","onChange","e","target","value","min","max","placeholder","faBorderStyle","faSlidersH","ConnectedDrawingOptions","faMousePointer","faTrash","faGripLines","faDrawPolygon","faBezierCurve","faUnderline","faSquare","faCircle","faPencilAlt","faImage","addLine","addCircle","addRect","addCurve","addText","addImage","ConnectedPageSettings","offsetX","offsetY","drawings","setIndicator","setSheetOffsetY","offset","setSheetOffsetX","setSheetWidth","setSheetHeight","height","toggleOrientation","loadData","data","upload","setUpload","faRulerCombined","faSync","faDownload","date","Date","save","JSON","stringify","toLocaleDateString","faUpload","event","file","files","reader","FileReader","addEventListener","result","json","parse","readAsText","accept","faFileCode","faPrint","prtContent","document","getElementById","WinPrint","open","write","title","innerHTML","close","focus","print","dragElement","elem","pos1","pos2","pos3","pos4","dragMouseDown","preventDefault","opacity","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","top","offsetTop","offsetLeft","onmousedown","Navigation","minimized","setMinimized","toggleMinimized","name","menu","transition","stateCopy","index","parseInt","slice","classList","toggle","setTimeout","useEffect","navigation1","navigation2","navigation3","navigation4","faCompress","faDraftingCompass","faCog","faFileImage","faPalette","StyledLogo","ConnectedLogo","SheetStyles","cursorOverall","cursorHover","WorkspaceWrapper","BorderIndicatorElementsWrapper","VerticalBorderIndicatorElement","HorizontalBorderIndicatorElement","IndicatorHorizontal","IndicatorVertical","useMousePosition","x","y","setPosition","setFromEvent","removeEventListener","ConnectedPolyLine","polyLines","cursorPosition","pointsValue","useRef","pointsPosition","setPointsPosition","current","push","stopDrawing","code","length","forEach","point","styles","linesToDraw","ConnectedLine","finish","lineToDraw","PolyLineSVG","points","Sheet","CircleSVG","centerX","centerY","radius","fillColor","circleStyle","cx","cy","r","ConnectedCircle","Math","sqrt","abs","circleToDraw","RectSVG","positionX","positionY","radiusX","radiusY","rectStyle","rx","ry","ConnectedRect","rectToDraw","StyledCurve","CurveSVG","d","curveStyle","ConnectedCurve","curveD","container","cType","dPoint","drag","DrawSVG","l1","setAttributeNS","p1","c1","c2","l2","p2","textContent","Drag","stopPropagation","t","et","m","pageX","pageY","handleCurve","c","getElementsByTagName","i","getAttributeNS","ontouchstart","ontouchmove","ontouchend","Init","TextSVG","pointX","pointY","writing","fontWeight","fontStyle","ConnectedText","textToWrite","setTextState","pointPosition","setPointPosition","handleKeyInput","escapeFunction","key","setText","textToDraw","ConnectedPencil","canvas","ctx","getContext","coord","reposition","start","draw","stop","beginPath","lineCap","strokeStyle","moveTo","lineTo","finishDrawing","Canvas","ImageSVG","href","ConnectedImage","querySelector","imageToDraw","ImageInputStyled","ImageInput","htmlFor","ConnectedBorderIndicator","smallerArrayNumbers","largerArrayNumbers","verticalBorderIndicators","horizontalBorderIndicators","indicatorTop","indicatorleft","number","ConnectedWorkspace","deleteLine","deleteImage","deleteText","deleteCircle","deleteRect","deleteCurve","handleOnClick","console","log","onDelete","Object","entries","polyLine","pan","disabled","App","store","createStore","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iNAAaA,EAAY,CACrBC,WAAY,CACRC,OAAQ,gBACRC,YAAa,gBACbC,KAAM,gBACNC,UAAW,iBAEfC,OAAQ,CACJJ,OAAQ,kBACRC,YAAa,kBACbC,KAAM,mBACNC,UAAW,mBAEfE,MAAO,CACHL,OAAQ,kBACRE,KAAM,kBAEVI,KAAM,CACFN,OAAQ,gBACRO,MAAO,cAEXC,KAAM,CACFR,OAAQ,mBACRE,KAAM,oBAEVO,MAAO,CACHT,OAAQ,mBACRO,MAAO,mBAIFG,EAAa,CACtBX,WAAY,CACRC,OAAQ,qBACRC,YAAa,qBACbC,KAAM,qBACNC,UAAW,sBAEfC,OAAQ,CACJJ,OAAQ,oBACRC,YAAa,mBACbC,KAAM,mBACNC,UAAW,oBAEfE,MAAO,CACHL,OAAQ,oBACRE,KAAM,oBAEVI,KAAM,CACFN,OAAQ,gBACRO,MAAO,iBAEXC,KAAM,CACFR,OAAQ,gBACRE,KAAM,oBAEVO,MAAO,CACHT,OAAQ,mBACRO,MAAO,qB,OC5CAI,EATW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAmBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYlB,aAClE,OACI,cAAC,IAAD,CAAemB,MAAOJ,EAAmBf,EAAYY,EAArD,SACKE,K,uBCTAM,EAAW,WACXC,EAAa,aACbC,EAAW,WACXC,EAAY,YACZC,EAAW,WACXC,EAAY,YACZC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAe,eACfC,EAAc,cACdC,EAAe,eACfC,EAAY,YAEZC,EAAe,eACfC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAc,cACdC,EAAmB,mBACnBC,EAAqB,qBAErBC,EAAgB,gBAChBC,EAAY,YACZC,EAAc,cACdC,EAAiB,iBACjBC,EAAW,WChBlBC,EAAgB,CAClBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,MAAO,GACPC,OAAQ,IA0FGC,EAvFE,WAAmC,IAAlCpC,EAAiC,uDAA1B6B,EAAeQ,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKnC,EACD,OAAO,2BACAH,GADP,IAEI8B,MAAM,CACFO,EAAOE,SADN,mBAEEvC,EAAM8B,UAGrB,KAAK1B,EACD,OAAO,2BACAJ,GADP,IAEI+B,QAAQ,CACJM,EAAOE,SADJ,mBAEAvC,EAAM+B,YAGrB,KAAK1B,EACD,OAAO,2BACAL,GADP,IAEIgC,MAAM,CACFK,EAAOE,SADN,mBAEEvC,EAAMgC,UAGrB,KAAK1B,EACD,OAAO,2BACAN,GADP,IAEIiC,OAAO,CACHI,EAAOE,SADL,mBAECvC,EAAMiC,WAGrB,KAAK1B,EACD,OAAO,2BACAP,GADP,IAEIkC,MAAM,CACFG,EAAOE,SADN,mBAEEvC,EAAMkC,UAGrB,KAAK1B,EACD,OAAO,2BACAR,GADP,IAEImC,OAAO,CACHE,EAAOE,SADL,mBAECvC,EAAMmC,WAGrB,KAAK1B,EACD,OAAO,2BACAT,GADP,IAEI8B,MAAO9B,EAAM8B,MAAMU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,aAE7D,KAAK7B,EACD,OAAO,2BACAV,GADP,IAEI+B,QAAS/B,EAAM+B,QAAQS,QAAO,SAAAG,GAAM,OAAIA,EAAOD,KAAOL,EAAOE,aAErE,KAAK5B,EACD,OAAO,2BACAX,GADP,IAEIgC,MAAOhC,EAAMgC,MAAMQ,QAAO,SAAAI,GAAI,OAAIA,EAAKF,KAAOL,EAAOE,aAE7D,KAAK3B,EACD,OAAO,2BACAZ,GADP,IAEIiC,OAAQjC,EAAMiC,OAAOO,QAAO,SAAAK,GAAK,OAAIA,EAAMH,KAAOL,EAAOE,aAEjE,KAAK1B,EACD,OAAO,2BACAb,GADP,IAEIkC,MAAOlC,EAAMkC,MAAMM,QAAO,SAAAM,GAAI,OAAIA,EAAKJ,KAAOL,EAAOE,aAE7D,KAAKzB,EACD,OAAO,2BACAd,GADP,IAEImC,OAAQnC,EAAMmC,OAAOK,QAAO,SAAAO,GAAK,OAAIA,EAAML,KAAOL,EAAOE,aAEjE,KAAKxB,EACD,OAAOsB,EAAOE,QAClB,QACI,OAAOvC,IC7FbgD,EAAa,CACfC,QAAS,GACTlE,WAAW,EACXmE,WAAW,EACXC,cAAeC,OAAOC,YAAYD,OAAOE,YAAY,IAAI,WAAW,EACpEC,aAAc,GACdC,YAAaJ,OAAOE,YAAY,IAAI,UACpCG,YAAcL,OAAOE,YAAY,GACjCI,eAAe,GA0DJzD,EAvDK,WAAgC,IAA/BD,EAA8B,uDAAvBgD,EAAYX,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKjB,EACD,OAAO,2BACArB,GADP,IAEIiD,QAASZ,EAAOE,UAGxB,KAAKvB,EACD,OAAO,2BACAhB,GADP,IAEIjB,WAAYiB,EAAMjB,YAG1B,KAAKkC,EACD,OAAO,2BACAjB,GADP,IAEIwD,WAAYnB,EAAOE,UAG3B,KAAKrB,EACD,OAAO,2BACAlB,GADP,IAEIyD,YAAapB,EAAOE,UAG5B,KAAKpB,EACD,OAAO,2BACAnB,GADP,IAEIuD,aAAclB,EAAOE,UAG7B,KAAKnB,EACD,OAAO,2BACApB,GADP,IAEImD,aAAcd,EAAOE,UAG7B,KAAKjB,EACD,OAAO,2BACAtB,GADP,IAEIkD,UAAWb,EAAOE,UAG1B,KAAKhB,EACD,OAAO,2BACAvB,GADP,IAEI0D,eAAgB1D,EAAM0D,gBAG9B,QACI,OAAO1D,ICtEbgD,EAAa,CACfW,SAAU,GACVrE,MAAO,UACPsE,KAAM,cACNC,QAAS,GACTC,UAAW,GAmCAC,EAhCD,WAAgC,IAA/B/D,EAA8B,uDAAvBgD,EAAYX,EAAW,uCACzC,OAAQA,EAAOC,MACX,KAAKd,EACD,OAAO,2BACAxB,GADP,IAEI2D,SAAUtB,EAAOE,UAEzB,KAAKd,EACD,OAAO,2BACAzB,GADP,IAEIV,MAAO+C,EAAOE,UAEtB,KAAKX,EACD,OAAO,2BACA5B,GADP,IAEI4D,KAAMvB,EAAOE,UAErB,KAAKb,EACD,OAAO,2BACA1B,GADP,IAEI6D,QAASxB,EAAOE,UAExB,KAAKZ,EACD,OAAO,2BACA3B,GADP,IAEI8D,UAAWzB,EAAOE,UAE1B,QACI,OAAOvC,IC3BJgE,EANKC,YAAgB,CAChC7B,WACAnC,cACA8D,U,6DCNSG,GAAUC,IAAOC,IAAV,0IAKE,qBAAElE,MAAiBlB,WAAWC,U,QCLvCoF,GAAoBF,IAAOG,QAAV,81DAMR,qBAAEpE,MAAiBlB,WAAWG,QAC9B,qBAAEe,MAAiBb,OAAOJ,UAgDtB,qBAAEiB,MAAiBlB,WAAWI,aAoBzC,qBAAEc,MAAiBZ,MAAML,UAEZ,qBAAEiB,MAAiBlB,WAAWI,aACzC,qBAAEc,MAAiBZ,MAAMH,QAe7BoF,GAAUJ,IAAOC,IAAV,sMAOE,qBAAElE,MAAiBZ,MAAML,UAKlCuF,GAAYL,IAAOM,OAAV,8cAQA,qBAAEvE,MAAiBb,OAAOJ,UACrC,qBAAEiB,MAAiBX,KAAKN,UAIX,qBAAEiB,MAAiBb,OAAOD,aACrC,qBAAEc,MAAiBX,KAAKC,SAcxBkF,GAAiBP,IAAOC,IAAV,wFAMdO,GAAYR,IAAOC,IAAV,ipBAGA,qBAAElE,MAAiBlB,WAAWC,UACzC,qBAAEiB,MAAiBT,KAAKR,UAKb,qBAAEiB,MAAiBb,OAAOJ,UAaxB,qBAAEiB,MAAiBlB,WAAWE,eAU5B,qBAAEgB,MAAiBlB,WAAWE,eAK3C0F,GAAiBT,IAAOC,IAAV,mHAKhB,qBAAElE,MAAiBZ,MAAML,UAGvB4F,GAAcV,IAAOW,KAAV,oMAMb,qBAAE5E,MAAiBT,KAAKN,Q,gBCtLtB4F,GAAa,SAAAC,GACtB,MAAM,CACF1C,KAAMjB,EACNkB,QAASyC,ICXXC,GAAed,IAAOM,OAAV,6HAQLS,GAAef,IAAOM,OAAV,yjBAEd,qBAAEvE,MAAiBZ,MAAML,UAMd,qBAAEiB,MAAiBb,OAAOJ,UAOxB,qBAAEiB,MAAiBb,OAAOH,eAIrC,qBAAEgB,MAAiBb,OAAOH,eAMf,qBAAEgB,MAAiBb,OAAOH,eAEnC,qBAAEgB,MAAiBb,OAAOH,eAO5BiG,GAAgBhB,YAAOc,GAAPd,CAAH,u3BAEb,qBAAEjE,MAAiBZ,MAAML,UAMd,qBAAEiB,MAAiBb,OAAOJ,UAgCrCmG,GAAiBjB,YAAOgB,GAAPhB,CAAH,2kB,SCzCZkB,GAPcC,aAAQ,SAAAtF,GAAK,MAAK,CACvCjB,UAAWiB,EAAMC,YAAYlB,aACjC,CACIwG,YFtBmB,WACvB,MAAM,CACFjD,KAAMtB,KEiBesE,EA3BT,SAAC,GAA8C,IAA7CvG,EAA4C,EAA5CA,UAAWwG,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAC1C,EAAsCC,oBAAS,GAA/C,oBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAoB,WACtBL,IACAC,EAAe,EAAC,GAAM,GAAM,GAAM,KAGtC,OACI,eAACd,GAAD,WACK3F,EACG,eAACqG,GAAD,CAAgBS,QAASD,EAAzB,UAA4C,cAAC,KAAD,CAAiBrG,KAAMuG,OAAW,cAAC,KAAD,CAAiBvG,KAAMwG,UACrG,eAACZ,GAAD,CAAeU,QAASD,EAAxB,UAA2C,cAAC,KAAD,CAAiBrG,KAAMuG,OAAW,cAAC,KAAD,CAAiBvG,KAAMyG,UAExG,sBAAKjC,MAAO,CAACkC,SAAU,YAAvB,UACI,cAACf,GAAD,CAAcgB,UAAWR,EAAc,WAAa,GAApD,SACI,cAAC,KAAD,CAAiBnG,KAAM4G,KAAQN,QAAS,kBAAMF,GAAgBD,IAAcQ,UAAW,gBAE1FR,EACG,cAACb,GAAD,6FAGE,cCCPuB,GA7BC,SAAC,GAQa,IARZ1D,EAQW,EARXA,GAQW,IAPbpD,aAOa,MAPN,MAOM,MANb+G,mBAMa,MANC,KAMD,MALbvC,iBAKa,MALD,EAKC,MAJbwC,mBAIa,MAJC,EAID,MAHbC,mBAGa,MAHC,EAGD,MAFbC,oBAEa,MAFE,EAEF,MADbC,oBACa,MADE,EACF,EAAbZ,EAAa,EAAbA,QAENa,EAAYC,mBAAQ,iBAAO,CAC7BC,OAAQtH,EACRuH,YAAa/C,EACbgD,gBAAiBT,KACjB,CAAC/G,EAAOwE,EAAWuC,IAEvB,OACI,sBACI3D,GAAIA,EACJqE,GAAIT,EACJU,GAAIT,EACJU,GAAIT,EACJU,GAAIT,EACJ1C,MAAO2C,EACPb,QAASA,KCxBRsB,GAAUhD,IAAOC,IAAV,gFAMPgD,GAAajD,IAAOkD,IAAV,yhBAIC,qBAAEnH,MAAiBR,MAAMT,UAEhC,SAAAqI,GAAK,OAAIA,EAAMC,KAAO,oBAAsB,mBACrC,qBAAErH,MAAiBb,OAAOJ,UAGxB,qBAAEiB,MAAiBR,MAAMF,SAGhC,SAAA8H,GAAK,OAAIA,EAAMC,KAAO,sBAAwB,qBAG9C,SAAAD,GAAK,OAAIA,EAAMC,KAAO,yBAA2B,wBAGjD,SAAAD,GAAK,OAAIA,EAAMC,KAAO,yBAA2B,wBAGjD,SAAAD,GAAK,OAAIA,EAAMC,KAAO,yBAA2B,wBCArDC,GA1BA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAAmC,IAA1BF,YAA0B,SAAd1H,EAAc,EAAdA,SAClC,EAA4C4F,oBAAS,GAArD,oBAAOiC,EAAP,KAAuBC,EAAvB,KAIMC,EAAMH,EAAQI,KAAI,SAAAD,GAAG,OACvB,cAACR,GAAD,CAAYvB,QAAS+B,EAAIE,SAAUP,KAAMA,EAAzC,SACI,8BACKK,EAAInF,QAFuCmF,EAAIE,aAM5D,OACI,mCACI,eAAC5C,GAAD,CAAcW,QAZA,WAClB8B,GAAmBD,IAWf,UACK7H,EACA6H,EACG,cAACP,GAAD,UACKS,IAEH,WCtBhBG,GAAc5D,IAAO6D,MAAV,gVAGN,qBAAE9H,MAAiBZ,MAAML,UAMd,qBAAEiB,MAAiBb,OAAOJ,UAMxB,qBAAEiB,MAAiBb,OAAOH,eAIrC+I,GAAa9D,YAAO4D,GAAP5D,CAAH,sDAIV+D,GAAc/D,YAAO4D,GAAP5D,CAAH,2FAOXgE,GAAYhE,YAAO4D,GAAP5D,CAAH,iJAMA,qBAAEjE,MAAiBlB,WAAWG,QC4ErCiJ,GAhBgB9C,aAAQ,SAAAtF,GAAK,MAAK,CACzCV,MAAOU,EAAM+D,MAAMzE,MACnBsE,KAAM5D,EAAM+D,MAAMH,KAClBD,SAAU3D,EAAM+D,MAAMJ,SACtBE,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACIuE,YCpGmB,SAAAC,GACvB,MAAM,CACFhG,KAAMd,EACNe,QAAS+F,IDkGTC,SC9FgB,SAAAjJ,GACpB,MAAM,CACFgD,KAAMb,EACNc,QAASjD,ID4FTkJ,QCxFe,SAAA5E,GACnB,MAAM,CACFtB,KAAMV,EACNW,QAASqB,IDsFT6E,WClFkB,SAAA5E,GACtB,MAAM,CACFvB,KAAMZ,EACNa,QAASsB,IDgFT6E,aC5EoB,SAAAC,GACxB,MAAM,CACFrG,KAAMX,EACNY,QAASoG,KD6DcrD,EAlFT,SAAC,GAC+D,IAD9DhG,EAC6D,EAD7DA,MAAOqE,EACsD,EADtDA,SAAUE,EAC4C,EAD5CA,QAASC,EACmC,EADnCA,UAAWF,EACwB,EADxBA,KACtCyE,EAA8D,EAA9DA,YAAaE,EAAiD,EAAjDA,SAAUE,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,aAAcF,EAAa,EAAbA,QAEpE,EAAiB/C,mBAASnG,GAAjBsJ,EAAT,qBACA,EAAkBnD,mBAAS9B,GAAlBkF,EAAT,qBACA,EAAiBpD,mBAAS5B,GAAjBiF,EAAT,qBACA,EAAkBrD,mBAAS3B,GAAlBiF,EAAT,qBACA,EAAiBtD,mBAAS7B,GAAjBoF,EAAT,qBACA,EAAkCvD,oBAAS,GAA3C,oBAAOwD,EAAP,KAAkBC,EAAlB,KACA,EAAoCzD,oBAAS,GAA7C,oBAAO0D,EAAP,KAAmBC,EAAnB,KAEMC,EAAiB,CACnB,CAAE5G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,GAAIvC,UAAWA,EAAWwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IACrHqB,SAAU,kBAAMwB,EAAoB,MAC5C,CAAE7G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,IAAKvC,UAAWA,EAAWwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IACtHqB,SAAU,kBAAMwB,EAAoB,OAC5C,CAAE7G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,KAAMvC,UAAWA,EAAWwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IACvHqB,SAAU,kBAAMwB,EAAoB,QAC5C,CAAE7G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,KAAMvC,UAAWA,EAAWwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IACvHqB,SAAU,kBAAMwB,EAAoB,SAG1CC,EAAmB,CACrB,CAAE9G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,GAAIvC,UAAW,EAAGwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IAC7GqB,SAAU,kBAAM0B,EAAsB,KAC9C,CAAE/G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,GAAIvC,UAAW,EAAGwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IAC7GqB,SAAU,kBAAM0B,EAAsB,KAC9C,CAAE/G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,GAAIvC,UAAW,EAAGwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IAC7GqB,SAAU,kBAAM0B,EAAsB,KAC9C,CAAE/G,KAAM,cAAC,GAAD,CACAnD,MAAOA,EAAO+G,YAAa,GAAIvC,UAAW,GAAIwC,YAAa,EAAGC,YAAa,EAAGC,aAAc,GAAIC,aAAc,IAC9GqB,SAAU,kBAAM0B,EAAsB,OAE5CF,EAAsB,SAACzF,GACzBiF,EAAKjF,GACL4E,EAAW5E,IAET2F,EAAwB,SAAC3F,GAC3BkF,EAAMlF,GACN6E,EAAa7E,IAiBjB,OACI,eAACa,GAAD,WACI,cAACuD,GAAD,CAAY3F,KAAK,QAAQmH,SAjBP,SAACC,GACvBd,EAAKc,EAAEC,OAAOC,OACdrB,EAASmB,EAAEC,OAAOC,OAClBR,GAAc,IAc4CQ,MAAOtK,EAAOuG,QAAS,WAAOuD,GAAeD,MAC9FA,EAAa,cAACxE,GAAD,CAAWuB,UAAW,aAAcL,QAAS,WAAOuD,GAAc,IAAlE,wBAAoG,KACjHD,EAAa,cAACxE,GAAD,CAAWuB,UAAW,cAAeL,QAAS,WAAO0C,EAAS,eAAgBa,GAAc,IAA5F,yBAA+H,KACjJ,cAAClB,GAAD,CAAa5F,KAAK,SAASuH,IAAK,EAAGC,IAAK,GAAIC,YAAa,IAAKN,SAVzC,SAACC,GAC1Bb,EAAMa,EAAEC,OAAOC,OACfvB,EAAYqB,EAAEC,OAAOC,UASjB,cAAC,GAAD,CAAQnC,QAAS4B,EAAgB9B,MAAM,EAAvC,SACI,cAAC,KAAD,CAAiBhI,KAAMyK,KAAe9D,UAAW,gBAErD,cAAC,GAAD,CAAQuB,QAAS8B,EAAjB,SACI,cAAC,KAAD,CAAiBhK,KAAM0K,KAAY/D,UAAW,gBAElD,cAAC+B,GAAD,CAAY3F,KAAK,QAAQmH,SAtBR,SAACC,GACtBV,EAAKU,EAAEC,OAAOC,OACdpB,EAAQkB,EAAEC,OAAOC,OACjBV,GAAa,IAmB4CU,MAAOhG,EAAMiC,QAAS,WAAOqD,GAAcD,MAC3FA,EAAY,cAACtE,GAAD,CAAWuB,UAAW,aAAcL,QAAS,WAAOqD,GAAa,IAAjE,wBAAmG,KAC/GD,EAAY,cAACtE,GAAD,CAAWuB,UAAW,cAAeL,QAAS,WAAO2C,EAAQ,eAAgBU,GAAa,IAA1F,yBAA6H,WE5B3IgB,GATiB5E,aAAQ,SAAAtF,GAAK,MAAK,CAC1CiD,QAASjD,EAAMC,YAAYgD,WAE/B,CAEI8B,eALwBO,EArCT,SAAC,GAA2B,IAA1BP,EAAyB,EAAzBA,WAAY9B,EAAa,EAAbA,QACjC,OACI,eAACyB,GAAD,WACI,cAACQ,GAAD,CAAcgB,UAAuB,WAAZjD,EAAuB,WAAa,KAA7D,SACI,cAAC,KAAD,CAAiB1D,KAAM4K,KAAgBtE,QAAS,kBAAMd,EAAW,WAAWmB,UAAW,gBAE3F,cAAChB,GAAD,CAAcgB,UAAuB,WAAZjD,EAAuB,WAAa,KAA7D,SACI,cAAC,KAAD,CAAiB1D,KAAM6K,KAASvE,QAAS,kBAAMd,EAAW,WAAWmB,UAAW,gBAEpF,cAAChB,GAAD,CAAcgB,UAAuB,SAAZjD,EAAqB,WAAa,KAA3D,SACI,cAAC,KAAD,CAAiB1D,KAAM8K,KAAaxE,QAAS,kBAAMd,EAAW,SAASmB,UAAW,gBAEtF,cAAChB,GAAD,CAAcgB,UAAuB,aAAZjD,EAAyB,WAAa,KAA/D,SACI,cAAC,KAAD,CAAiB1D,KAAM+K,KAAezE,QAAS,kBAAMd,EAAW,aAAamB,UAAW,gBAE5F,cAAChB,GAAD,CAAcgB,UAAuB,UAAZjD,EAAsB,WAAa,KAA5D,SACI,cAAC,KAAD,CAAiB1D,KAAMgL,KAAe1E,QAAS,kBAAMd,EAAW,UAAUmB,UAAW,gBAEzF,cAAChB,GAAD,CAAcgB,UAAuB,SAAZjD,EAAqB,WAAa,KAA3D,SACI,cAAC,KAAD,CAAiB1D,KAAMiL,KAAa3E,QAAS,kBAAMd,EAAW,SAASmB,UAAW,gBAEtF,cAAChB,GAAD,CAAcgB,UAAuB,SAAZjD,EAAqB,WAAa,KAA3D,SACI,cAAC,KAAD,CAAiB1D,KAAMkL,KAAU5E,QAAS,kBAAMd,EAAW,SAASmB,UAAW,gBAEnF,cAAChB,GAAD,CAAcgB,UAAuB,WAAZjD,EAAuB,WAAa,KAA7D,SACI,cAAC,KAAD,CAAiB1D,KAAMmL,KAAU7E,QAAS,kBAAMd,EAAW,WAAWmB,UAAW,gBAErF,cAAChB,GAAD,CAAcgB,UAAuB,WAAZjD,EAAuB,WAAa,KAA7D,SACI,cAAC,KAAD,CAAiB1D,KAAMoL,KAAa9E,QAAS,kBAAMd,EAAW,WAAWmB,UAAW,gBAExF,cAAChB,GAAD,CAAcgB,UAAuB,UAAZjD,EAAsB,WAAa,KAA5D,SACI,cAAC,KAAD,CAAiB1D,KAAMqL,KAAS/E,QAAS,kBAAMd,EAAW,UAAUmB,UAAW,sB,SC5ClF2E,GAAU,SAAApI,GACnB,MAAM,CACFH,KAAMnC,EACNoC,QAASE,IAIJqI,GAAY,SAAAnI,GACrB,MAAM,CACFL,KAAMlC,EACNmC,QAASI,IAIJoI,GAAU,SAAAnI,GACnB,MAAM,CACFN,KAAMjC,EACNkC,QAASK,IAIJoI,GAAW,SAAAnI,GACpB,MAAM,CACFP,KAAMhC,EACNiC,QAASM,IAIJoI,GAAU,SAAAnI,GACnB,MAAM,CACFR,KAAM/B,EACNgC,QAASO,IAIJoI,GAAW,SAAAnI,GACpB,MAAM,CACFT,KAAM9B,EACN+B,QAASQ,IC8FFoI,GA1Be7F,aAAQ,SAAAtF,GAAK,MAAK,CACxCoL,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BP,UAAWlD,EAAMC,YAAYiD,UAC7BQ,cAAe1D,EAAMC,YAAYyD,cACjC4H,SAAUtL,EAAMoC,YAEpB,CACImJ,aXvEoB,SAACrI,GACzB,MAAM,CACFZ,KAAMhB,EACNiB,QAASW,IWqETsI,gBXtFuB,SAAAC,GAC3B,MAAM,CACFnJ,KAAMnB,EACNoB,QAASkJ,IWoFTC,gBXhFuB,SAAAD,GAC3B,MAAM,CACFnJ,KAAMlB,EACNmB,QAASkJ,IW8ETE,cXtGqB,SAAAhD,GACzB,MAAM,CACFrG,KAAMrB,EACNsB,QAASoG,IWoGTiD,eXhGsB,SAAAC,GAC1B,MAAM,CACFvJ,KAAMpB,EACNqB,QAASsJ,IW8FTC,kBXrEyB,WAC7B,MAAM,CACFxJ,KAAMf,IWoENuJ,aACAC,WACAF,WACAG,YACAC,WACAC,YACAa,SD5CgB,SAAAC,GACpB,MAAM,CACF1J,KAAMvB,EACNwB,QAASyJ,KCmBa1G,EAxFT,SAAC,GAGK,IAHJiG,EAGG,EAHHA,aAAcrI,EAGX,EAHWA,UACjB4I,EAEM,EAFNA,kBAAmBpI,EAEb,EAFaA,cAAeiI,EAE5B,EAF4BA,cAAeC,EAE3C,EAF2CA,eAAgBR,EAE3D,EAF2DA,QAASC,EAEpE,EAFoEA,QAASG,EAE7E,EAF6EA,gBAAiBE,EAE9F,EAF8FA,gBAAiBlI,EAE/G,EAF+GA,WAAYC,EAE3H,EAF2HA,YACjI6H,EACM,EADNA,SAAUS,EACJ,EADIA,SAG1B,EAA4BtG,oBAAS,GAArC,oBAAOwG,EAAP,KAAeC,EAAf,KAyDA,OACI,eAACxH,GAAD,WACI,cAACQ,GAAD,CAAcgB,UAAWhD,EAAY,WAAa,KAAlD,SACI,cAAC,KAAD,CAAiB3D,KAAM4M,KAAiBtG,QAAS,kBAAM0F,GAAcrI,IAAYgD,UAAW,gBAEhG,cAAChB,GAAD,UACI,cAAC,KAAD,CAAiB3F,KAAM6M,KAAQvG,QA7DjB,WAClBnC,GACAoI,IACAH,GAAevI,OAAOE,YAAY,IAAI,WACtCsI,EAAexI,OAAOE,YAAY,IAClCkI,EAAgB,IAEhBE,GAAiBtI,OAAOC,YAAYD,OAAOE,YAAY,IAAI,WAAW,KAGtEwI,KACK1I,OAAOC,WAAW,IAAI,UAAYD,OAAOE,aAC1CoI,GAAiBtI,OAAOC,WAAqC,WAAvBD,OAAOE,YAAY,KAAe,GACxEqI,EAAsC,WAAvBvI,OAAOE,YAAY,KAClCsI,EAAgBxI,OAAOE,YAAY,IACnCkI,EAAgB,MAGhBE,EAAgB,IAChBC,EAAevI,OAAOC,WAAW,IACjCuI,GAAgBxI,OAAOC,WAAW,IAAI,WACtCmI,GAAiBpI,OAAOE,aAAeF,OAAOC,WAAW,IAAI,WAAW,MAwCb6C,UAAW,gBAE1E,cAAChB,GAAD,UACI,cAAC,KAAD,CAAiB3F,KAAM8M,KAAYxG,QA1BxB,WACnB,IAAMyG,EAAO,IAAIC,KACjBC,gBAAKC,KAAKC,UAAUpB,GAAW,SAASgB,EAAKK,qBAAqB,UAwBEzG,UAAW,gBAE3E,sBAAKnC,MAAO,CAACkC,SAAU,YAAvB,UACI,cAACf,GAAD,UACI,cAAC,KAAD,CAAiB3F,KAAMqN,KAAU/G,QAAS,WAAOqG,GAAWD,IAAU/F,UAAW,gBAEpF+F,GAAU,cAAC9D,GAAD,CAAWsB,SA3BT,SAACoD,GACtB,IAAMC,EAAOD,EAAMlD,OAAOoD,MAAM,GAC5BC,EAAS,IAAIC,WACjBD,EAAOE,iBAAiB,QAAQ,SAASxD,GACrC,IAAI5G,EAAO4G,EAAEC,OAAOwD,OACdC,EAAOX,KAAKY,MAAMvK,GACxBiJ,EAASqB,MAEbJ,EAAOM,WAAWR,GAClBZ,GAAU,IAkBgD5J,KAAK,OAAOiL,OAAO,UACpEtB,GAAU,cAACrH,GAAD,UAAgB,cAAC,KAAD,CAAiBrF,KAAMiO,KAAY3H,QAAS,kBAAM0F,GAAcrI,IAAYgD,UAAW,mBAEtH,cAAChB,GAAD,UACI,cAAC,KAAD,CAAiB3F,KAAMkO,KAAS5H,QAhDnB,WACrB,IAAM6H,EAAaC,SAASC,eAAe,SACrCC,EAAWzK,OAAO0K,KAAK,GAAI,QAAhB,eAAiC1C,EAAjC,gBAAgDC,EAAhD,kBAAiE7H,EAAjE,mBAAsFC,EAAtF,qCACjBoK,EAASF,SAASI,MAAM,sBAAwBJ,SAASK,MAAS,YAClEH,EAASF,SAASI,MAAM,kBACxBF,EAASF,SAASI,MAAML,EAAWO,WACnCJ,EAASF,SAASI,MAAM,kBACxBF,EAASF,SAASO,QAClBL,EAASM,QACTN,EAASO,SAuC0DlI,UAAW,sBC/FtF,SAASmI,GAAYC,GACjB,IAAIC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAIzC,SAASC,EAAcjF,IACnBA,EAAIA,GAAKtG,OAAOyJ,OACd+B,iBACFN,EAAKvK,MAAM8K,QAAU,MAErBJ,EAAO/E,EAAEoF,QACTJ,EAAOhF,EAAEqF,QACTpB,SAASqB,UAAYC,EAErBtB,SAASuB,YAAcC,EAG3B,SAASA,EAAYzF,IACjBA,EAAIA,GAAKtG,OAAOyJ,OACd+B,iBAEFL,EAAOE,EAAO/E,EAAEoF,QAChBN,EAAOE,EAAOhF,EAAEqF,QAChBN,EAAO/E,EAAEoF,QACTJ,EAAOhF,EAAEqF,QAETT,EAAKvK,MAAMqL,IAAOd,EAAKe,UAAYb,EAAQ,KAC3CF,EAAKvK,MAAMwD,KAAQ+G,EAAKgB,WAAaf,EAAQ,KAGjD,SAASU,IACLX,EAAKvK,MAAM8K,QAAU,IACrBlB,SAASqB,UAAY,KACrBrB,SAASuB,YAAc,KA/BvBvB,SAASC,eAAeU,EAAK5L,GAAK,WAAYiL,SAASC,eAAeU,EAAK5L,GAAK,WAAW6M,YAAcZ,EACxGL,EAAKiB,YAAcZ,EAkC5B,I,iCAgFea,GAhFI,WACf,MAAkC/J,mBAAS,EAAC,GAAM,GAAM,GAAM,IAA9D,oBAAOgK,EAAP,KAAkBC,EAAlB,KAEMC,EAAkB,SAACC,GACrB,IAAMC,EAAOlC,SAASC,eAAegC,GACrCC,EAAK9L,MAAM+L,WAAa,MACxB,IAAMC,EAAS,YAAON,GAChBO,EAAQC,SAASL,EAAKM,OAAO,IAAM,EACzCH,EAAUC,IAAUP,EAAUO,GAC9BN,EAAaK,GACbF,EAAKM,UAAUC,OAAO,aACtBC,YAAW,WAAYR,EAAK9L,MAAM+L,WAAa,OAAS,MAsB5D,OAnBAQ,qBAAU,WACN,IAAMC,EAAc5C,SAASC,eAAe,eACtC4C,EAAc7C,SAASC,eAAe,eACtC6C,EAAc9C,SAASC,eAAe,eACtC8C,EAAc/C,SAASC,eAAe,eAC5CS,GAAYkC,GACZlC,GAAYmC,GACZnC,GAAYoC,GACZpC,GAAYqC,GACZH,EAAYJ,UAAUC,OAAO,aAC7BI,EAAYL,UAAUC,OAAO,aAC7BK,EAAYN,UAAUC,OAAO,aAC7BM,EAAYP,UAAUC,OAAO,aAC7BC,YAAW,kBAAMV,EAAgB,iBAAgB,KACjDU,YAAW,kBAAMV,EAAgB,iBAAgB,KACjDU,YAAW,kBAAMV,EAAgB,iBAAgB,KACjDU,YAAW,kBAAMV,EAAgB,iBAAgB,OACnD,IAGE,gCAEI,eAACtL,GAAD,CAAmB3B,GAAI,cAAeyN,UAAW,YAAjD,UACI,cAAC3L,GAAD,CAAWqB,QAAS,kBAAM8J,EAAgB,gBAA1C,SACKF,EAAU,GACP,cAAC,KAAD,CAAiBlQ,KAAMoR,OACvB,cAAC,KAAD,CAAiBpR,KAAMqR,SAE/B,cAACrM,GAAD,CAAS7B,GAAG,uBACZ,cAAC,GAAD,OAGJ,eAAC2B,GAAD,CAAmB3B,GAAI,cAAeyN,UAAW,YAAjD,UACI,cAAC3L,GAAD,CAAWqB,QAAS,kBAAM8J,EAAgB,gBAA1C,SACKF,EAAU,GACP,cAAC,KAAD,CAAiBlQ,KAAMoR,OACvB,cAAC,KAAD,CAAiBpR,KAAMsR,SAE/B,cAACtM,GAAD,CAAS7B,GAAG,uBACZ,cAAC,GAAD,CAAa8C,eAAgBkK,OAGjC,eAACrL,GAAD,CAAmB3B,GAAI,cAAeyN,UAAW,YAAjD,UACI,cAAC3L,GAAD,CAAWqB,QAAS,kBAAM8J,EAAgB,gBAA1C,SACKF,EAAU,GACP,cAAC,KAAD,CAAiBlQ,KAAMoR,OACvB,cAAC,KAAD,CAAiBpR,KAAMuR,SAE/B,cAACvM,GAAD,CAAS7B,GAAG,uBACZ,cAAC,GAAD,OAGJ,eAAC2B,GAAD,CAAmB3B,GAAI,cAAeyN,UAAW,YAAjD,UACI,cAAC3L,GAAD,CAAWqB,QAAS,kBAAM8J,EAAgB,gBAA1C,SACKF,EAAU,GACP,cAAC,KAAD,CAAiBlQ,KAAMoR,OACvB,cAAC,KAAD,CAAiBpR,KAAMwR,SAE/B,cAACxM,GAAD,CAAS7B,GAAG,uBACZ,cAAC,GAAD,WCtHHsO,GAAa7M,IAAOC,IAAV,mXAMR,SAAAkD,GAAK,OAAKA,EAAMqB,MAAO,EAAI,GAAK,GAAMrB,EAAMqB,MAAO,KACvD,SAAArB,GAAK,OAAIA,EAAMqB,SAEb,qBAAEzI,MAAiBZ,MAAML,UAKzB,qBAAEiB,MAAiBZ,MAAMH,QCEvB8R,GALO3L,aAAQ,SAAAtF,GAAK,MAAK,CAChC2I,MAAO3I,EAAMC,YAAYkD,gBAC1B,KAFemC,EATT,SAAC,GAAa,IAAZqD,EAAW,EAAXA,MACX,OACI,eAACqI,GAAD,CAAYrI,MAAOA,EAAM,GAAzB,UACI,sCACA,6CCNCuI,GAAc/M,IAAOC,IAAV,mMACZ,SAAAkD,GAAK,OAAIA,EAAM7D,eAChB,SAAA6D,GAAK,OAAIA,EAAM9D,cAEd,SAAA8D,GAAK,OAAIA,EAAM6J,iBAGX,SAAA7J,GAAK,OAAIA,EAAM8J,eACd,SAAA9J,GAAK,MAA0B,YAAtBA,EAAM8J,YAA4B,GAAM,KAKrDC,GAAmBlN,IAAOC,IAAV,kJAElB,SAAAkD,GAAK,OAAIA,EAAM9D,cACd,SAAA8D,GAAK,OAAIA,EAAM7D,eACL,qBAAEvD,MAAiBR,MAAMT,UACtC,SAAAqI,GAAK,OAAIA,EAAM+D,WACd,SAAA/D,GAAK,OAAIA,EAAM8D,WAGZkG,GAAiCnN,IAAOC,IAAV,2jBAIlC,SAAAkD,GAAK,OAAIA,EAAM+D,WACd,SAAA/D,GAAK,OAAIA,EAAM8D,WACd,SAAA9D,GAAK,OAAIA,EAAMqB,SACd,SAAArB,GAAK,OAAIA,EAAMuE,UAEL,qBAAE3L,MAAiBR,MAAMF,SACpC,qBAAEU,MAAiBT,KAAKN,QAQxB,SAAAmI,GAAK,OAAIA,EAAM+D,WAUd,SAAA/D,GAAK,OAAIA,EAAM8D,WAKdmG,GAAiCpN,IAAOC,IAAV,+MAEhC,SAAAkD,GAAK,OAAIA,EAAMqB,SACd,SAAArB,GAAK,OAAIA,EAAMuE,UACD,qBAAE3L,MAAiBT,KAAKN,QAOrCqS,GAAmCrN,YAAOoN,GAAPpN,CAAH,2NAEjB,qBAAEjE,MAAiBT,KAAKN,QAMtB,qBAAEe,MAAiBT,KAAKN,QAIzCsS,GAAsBtN,IAAOC,IAAV,0JAGtB,SAAAkD,GAAK,OAAIA,EAAMC,QAOZmK,GAAoBvN,YAAOsN,GAAPtN,CAAH,0FACrB,SAAAmD,GAAK,OAAIA,EAAM8H,O,SCzFXuC,GAAmB,SAACvG,EAAQC,GACrC,MAAgC5F,mBAAS,CAAEmM,EAAG,EAAGC,EAAG,IAApD,oBAAO5L,EAAP,KAAiB6L,EAAjB,KAWA,OATAxB,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GAAD,OAAOoI,EAAY,CAAEF,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,KAG7E,OAFAjI,OAAO8J,iBAAiB,YAAa6E,GAE9B,WACH3O,OAAO4O,oBAAoB,YAAaD,MAE7C,CAAC3G,EAASC,IAENpF,GCuFIgM,GAhBW3M,aAAQ,SAAAtF,GAAK,MAAK,CACxCkS,UAAWlS,EAAMoC,SAAS8P,UAC1B9G,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BnE,MAAOU,EAAM+D,MAAMzE,MACnBuE,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAEvB,CACI+G,WACA9F,eAZkBO,EA9ET,SAAC,GAAgH,IAA/G5C,EAA8G,EAA9GA,GAAIpD,EAA0G,EAA1GA,MAAOuE,EAAmG,EAAnGA,QAASC,EAA0F,EAA1FA,UAAW+G,EAA+E,EAA/EA,QAASO,EAAsE,EAAtEA,QAASC,EAA6D,EAA7DA,QAAS7H,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,YAAasB,EAA2B,EAA3BA,WAC5FoN,GADuH,EAAfD,UACvFP,GAAiBvG,EAAQC,IAC1C+G,EAAcC,iBAAO,IAC3B,EAA4C5M,mBAAS,IAArD,oBAAO6M,EAAP,KAAuBC,EAAvB,KAEAjC,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GAGlB,OAFIA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IACpHkH,EAAkB,YAAIH,EAAYI,WAEvCE,EAAc,SAAdA,EAAehJ,GAiBjB,GAAe,WAAXA,EAAEiJ,KAAmB,OAfrBvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GACnCN,EAAYI,QAAQI,OAAS,GAC5BR,EAAYI,QAAQK,SAAQ,SAACC,EAAO9C,GAChC,GAAIoC,EAAYI,QAAQxC,EAAM,GAAG,CAC7B,IAAOvN,EAAiB,GAAXsQ,EAAe,CAACzT,QAAOuE,UAASC,aAC7CrB,EAAI,OAAa,CAAC2P,EAAYI,QAAQxC,GAAOoC,EAAYI,QAAQxC,EAAM,IACvEvN,EAAI,OAAasQ,EACjBtQ,EAAI,GAAS,UAAUwN,SAASvN,EAAGwN,MAAM,IAAIF,GAC7CnF,EAAQpI,YAIpBsC,EAAW,KAOnB,OAHA3B,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAWwF,GAE5B,WACHtP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GACtC3N,EAAW,OAEhB,CAACrC,EAAIqC,EAAY8F,EAASvL,EAAOwE,EAAWsH,EAASvH,EAASJ,EAAaD,EAAY6H,IAE1F,IAAM2H,EAAcV,EAAezK,KAAI,SAACiL,EAAO9C,GAC3C,OAAmC,IAA/BoC,EAAYI,QAAQI,QAAgB5C,IAAUsC,EAAeM,OAAS,EAElE,cAAC,GAAD,CAEItM,YAAawM,EAAMlB,EACnBrL,YAAauM,EAAMjB,EACnBrL,aAAc2L,EAAeP,EAC7BnL,aAAc0L,EAAeN,EAC7BvS,MAAOA,EACP+G,YAAaxC,EACbC,UAAWA,GAPNkM,GAYb,cAAC,GAAD,CAEI1J,YAAawM,EAAMlB,EACnBrL,YAAauM,EAAMjB,EACnBrL,aAAc8L,EAAetC,EAAQ,GAAG4B,EACxCnL,aAAc6L,EAAetC,EAAQ,GAAG6B,EACxCvS,MAAOA,EACP+G,YAAaxC,EACbC,UAAWA,GAPNkM,MAYjB,OACIoC,EAAYI,QAAQI,OAAS,EAErBI,EAEA,QCgBDC,GAjBO3N,aAAQ,SAAAtF,GAAK,MAAK,CAChCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/B3B,MAAO9B,EAAMoC,SAASN,MACtBxC,MAAOU,EAAM+D,MAAMzE,MACnBuE,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACI+G,WACA9F,eAbcO,EAzET,SAAC,GAAqH,IAApH5C,EAAmH,EAAnHA,GAAIpD,EAA+G,EAA/GA,MAAOuE,EAAwG,EAAxGA,QAASC,EAA+F,EAA/FA,UAAWhC,EAAoF,EAApFA,MAAO+I,EAA6E,EAA7EA,QAASO,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,QAAS7H,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,YAAaR,EAAyB,EAAzBA,QAAS8B,EAAgB,EAAhBA,WACxGoN,EAAiBR,GAAiBvG,EAAQC,GAC1C+G,EAAcC,iBAAO,IAC3B,EAA4C5M,mBAAS,IAArD,oBAAO6M,EAAP,KAAuBC,EAAvB,KAEAjC,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GACdA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IAK3H,OAAmC,IAA/B+G,EAAYI,QAAQI,QAHpBL,EAAkB,YAAIH,EAAYI,eAClCE,KAGGH,EAAkB,YAAIH,EAAYI,WAEvCE,EAAc,SAAdA,EAAehJ,GAgBjB,OAAIA,GAAgB,WAAXA,EAAEiJ,MAdPvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,QACtC3N,EAAW,KAEA,WACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GACtC,IAAOjQ,EAAiB,GAAXsQ,EAAe,CAACzT,QAAOuE,UAASC,aAC7CrB,EAAI,OAAa2P,EAAYI,QAC7B/P,EAAI,OAAasQ,EACjBtQ,EAAI,GAASC,EACbmI,EAAQpI,GACRsC,EAAW,IAGRmO,IAKX,OAHA9P,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAWwF,GAE5B,WACH3N,EAAW,IACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,MAE3C,CAAChQ,EAAIqC,EAAY8F,EAASvL,EAAOwE,EAAWhC,EAAM8Q,OAAQxH,EAASvH,EAASJ,EAAaD,EAAY6H,IAExG,IAAI8H,EAAa,KAuBjB,MAtBgB,KAAZlQ,EAAgBkQ,EAAa,KACE,IAA1Bb,EAAeM,OAAcO,EAClC,cAAC,GAAD,CACI7M,YAAegM,EAAe,GAAGV,EACjCrL,YAAe+L,EAAe,GAAGT,EACjCrL,aAAgB8L,EAAe,GAAGV,EAClCnL,aAAgB6L,EAAe,GAAGT,EAClCvS,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,IAEc,IAA1BwO,EAAeM,SAAcO,EAClC,cAAC,GAAD,CACI7M,YAAegM,EAAe,GAAGV,EACjCrL,YAAe+L,EAAe,GAAGT,EACjCrL,aAAgB2L,EAAeP,EAC/BnL,aAAgB0L,EAAeN,EAC/BvS,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,KAIjBqP,KCzCOC,GAhCK,SAAC,GAKS,IALR1Q,EAKO,EALPA,GAKO,IAJbpD,aAIa,MAJN,MAIM,MAHb+G,mBAGa,MAHC,KAGD,MAFbvC,iBAEa,MAFD,EAEC,EADbuP,EACa,EADbA,OACAxN,EAAa,EAAbA,QAsBZ,OApBuBwN,EAAOxL,KAAI,SAACiL,EAAO9C,GACtC,OAAIqD,EAAOrD,EAAM,GAET,cAAC,GAAD,CAEItN,GAAIA,EAAG,KAAKsN,EACZ1J,YAAewM,EAAMlB,EACrBrL,YAAeuM,EAAMjB,EACrBrL,aAAgB6M,EAAOrD,EAAM,GAAG4B,EAChCnL,aAAgB4M,EAAOrD,EAAM,GAAG6B,EAChCvS,MAAQA,EACR+G,YAAeA,EACfvC,UAAaA,EACb+B,QAAW,kBAAMA,EAAQnD,EAAG,KAAKsN,KAT5BA,GAaV,SCYAsD,GApCD,SAAC,GAAkD,IAAjD9P,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,YAAaR,EAAuB,EAAvBA,QAASpD,EAAc,EAAdA,SAC1CsR,EAAgB,UAChBC,EAAc,UAClB,OAAQnO,GACJ,IAAK,SACDmO,EAAc,UACd,MACJ,IAAK,OACDD,EAAgB,OAChB,MACJ,IAAK,SACDC,EAAc,cACd,MACJ,IAAK,GACDD,EAAgB,UAChB,MACJ,QACIA,EAAgB,YAChBC,EAAc,YAEtB,OACI,cAACF,GAAD,CACI1N,WAAYA,EACZC,YAAaA,EACb2N,YAAaA,EACbD,cAAeA,EAJnB,SAKI,qBACIxI,MAAOnF,EACPqI,OAAQpI,EACRM,MAAO,CAACkC,SAAU,SAHtB,SAIKpG,OCFF0T,GA7BG,SAAC,GAQkB,IARjB7Q,EAQgB,EARhBA,GAQgB,IAPbpD,aAOa,MAPN,MAOM,MANb+G,mBAMa,MANC,KAMD,MALbvC,iBAKa,MALD,EAKC,MAJb0P,eAIa,MAJH,EAIG,MAHbC,eAGa,MAHH,EAGG,MAFbC,cAEa,MAFJ,EAEI,MADbC,iBACa,MADD,cACC,EAAb9N,EAAa,EAAbA,QAEb+N,EAAcjN,mBAAQ,iBAAO,CAC/BC,OAAQtH,EACRuH,YAAa/C,EACbgD,gBAAiBT,EACjBzC,KAAM+P,KACN,CAACrU,EAAOwE,EAAWuC,EAAasN,IAEpC,OACI,wBACIjR,GAAIA,EACJmR,GAAIL,EACJM,GAAIL,EACJM,EAAGL,EACH3P,MAAO6P,EACP/N,QAASA,KC6ENmO,GAlBS1O,aAAQ,SAAAtF,GAAK,MAAK,CAClCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/B1B,QAAS/B,EAAMoC,SAASL,QACxBzC,MAAOU,EAAM+D,MAAMzE,MACnBqU,UAAW3T,EAAM+D,MAAMH,KACvBC,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACIgH,aACA/F,eAdgBO,EA9ET,SAAC,GAAoI,IAAnI5C,EAAkI,EAAlIA,GAAIpD,EAA8H,EAA9HA,MAAOuE,EAAuH,EAAvHA,QAASC,EAA8G,EAA9GA,UAAW6P,EAAmG,EAAnGA,UAAW5R,EAAwF,EAAxFA,QAAS+I,EAA+E,EAA/EA,UAAWM,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,QAAS7H,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,YAAaR,EAAyB,EAAzBA,QAAS8B,EAAgB,EAAhBA,WACzHoN,EAAiBR,GAAiBvG,EAAQC,GAC1C+G,EAAcC,iBAAO,IAC3B,EAA4C5M,mBAAS,IAArD,oBAAO6M,EAAP,KAAuBC,EAAvB,KAEAjC,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GACdA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IAK3H,OAAmC,IAA/B+G,EAAYI,QAAQI,QAHpBL,EAAkB,YAAIH,EAAYI,eAClCE,KAGGH,EAAkB,YAAIH,EAAYI,WAEvCE,EAAc,SAAdA,EAAehJ,GAiBjB,OAAIA,GAAgB,WAAXA,EAAEiJ,MAfPvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,QACtC3N,EAAW,KAEA,WACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GACtC,IAAO/P,EAAmB,GAAXoQ,EAAe,CAACzT,QAAOuE,UAAS8P,YAAW7P,aAC1DnB,EAAM,MAAYyP,EAAYI,QAAQ,GACtC7P,EAAM,OAAasR,KAAKC,KAAKD,KAAKE,IAALF,KAAA,IAAU7B,EAAYI,QAAQ,GAAGZ,EAAEQ,EAAYI,QAAQ,GAAGZ,EAAI,IAAGqC,KAAKE,IAALF,KAAA,IAAU7B,EAAYI,QAAQ,GAAGX,EAAEO,EAAYI,QAAQ,GAAGX,EAAI,KAC5JlP,EAAM,OAAaoQ,EACnBpQ,EAAM,GAASD,EACfoI,EAAUnI,GACVoC,EAAW,IAGRmO,IAKX,OAHA9P,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAWwF,GAE5B,WACH3N,EAAW,IACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,MAE3C,CAAChQ,EAAIqC,EAAY+F,EAAWxL,EAAOqU,EAAW7P,EAAW/B,EAAQ6Q,OAAQxH,EAASvH,EAASJ,EAAaD,EAAY6H,IAEvH,IAAI+I,EAAe,KA2BnB,MA1BgB,KAAZnR,EAAgBmR,EAAe,KACA,IAA1B9B,EAAeM,OACpBwB,EACI,cAAC,GAAD,CACIZ,QAAWlB,EAAe,GAAGV,EAC7B6B,QAAWnB,EAAe,GAAGT,EAC7B6B,OAAUO,KAAKC,KAAKD,KAAKE,IAALF,KAAA,IAAU3B,EAAe,GAAGV,EAAEU,EAAe,GAAGV,EAAI,IAAGqC,KAAKE,IAALF,KAAA,IAAU3B,EAAe,GAAGT,EAAES,EAAe,GAAGT,EAAI,KAC/HvS,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,EACb6P,UAAaA,IAGU,IAA1BrB,EAAeM,SACpBwB,EACI,cAAC,GAAD,CACIZ,QAAWlB,EAAe,GAAGV,EAC7B6B,QAAWnB,EAAe,GAAGT,EAC7B6B,OAAUO,KAAKC,KAAKD,KAAKE,IAALF,KAAA,IAAU9B,EAAeP,EAAEU,EAAe,GAAGV,EAAI,IAAGqC,KAAKE,IAALF,KAAA,IAAU9B,EAAeN,EAAES,EAAe,GAAGT,EAAI,KACzHvS,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,EACb6P,UAAaA,KAKrBS,KC5COC,GAnCC,SAAC,GAWa,IAXZ3R,EAWW,EAXXA,GAWW,IAVbpD,aAUa,MAVN,MAUM,MATb+G,mBASa,MATC,KASD,MARbvC,iBAQa,MARD,EAQC,MAPbwQ,iBAOa,MAPD,EAOC,MANbC,iBAMa,MAND,EAMC,MALbC,eAKa,MALJ,EAKI,MAJbC,eAIa,MAJH,EAIG,MAHb9L,aAGa,MAHN,EAGM,MAFbkD,cAEa,MAFL,EAEK,MADb8H,iBACa,MADD,cACC,EAAb9N,EAAa,EAAbA,QAEN6O,EAAY/N,mBAAQ,iBAAO,CAC7BC,OAAQtH,EACRuH,YAAa/C,EACbgD,gBAAiBT,EACjBzC,KAAM+P,KACN,CAACrU,EAAOwE,EAAWuC,EAAasN,IAEpC,OACI,sBACIjR,GAAIA,EACJkP,EAAG0C,EACHzC,EAAG0C,EACHI,GAAIH,EACJI,GAAIH,EACJ9L,MAAOA,EACPkD,OAAQA,EACR9H,MAAO2Q,EACP7O,QAASA,KC0ENgP,GAlBOvP,aAAQ,SAAAtF,GAAK,MAAK,CAChCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BzB,MAAOhC,EAAMoC,SAASJ,MACtB1C,MAAOU,EAAM+D,MAAMzE,MACnBqU,UAAW3T,EAAM+D,MAAMH,KACvBC,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACIiH,WACAhG,eAdcO,EAjFT,SAAC,GAAgI,IAA/H5C,EAA8H,EAA9HA,GAAIpD,EAA0H,EAA1HA,MAAOuE,EAAmH,EAAnHA,QAASC,EAA0G,EAA1GA,UAAW6P,EAA+F,EAA/FA,UAAW3R,EAAoF,EAApFA,MAAO+I,EAA6E,EAA7EA,QAASK,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,QAAS7H,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,YAAaR,EAAyB,EAAzBA,QAAS8B,EAAgB,EAAhBA,WACnHoN,EAAiBR,GAAiBvG,EAAQC,GAC1C+G,EAAcC,iBAAO,IAC3B,EAA4C5M,mBAAS,IAArD,oBAAO6M,EAAP,KAAuBC,EAAvB,KAEAjC,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GACdA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IAK3H,OAAmC,IAA/B+G,EAAYI,QAAQI,QAHpBL,EAAkB,YAAIH,EAAYI,eAClCE,KAGGH,EAAkB,YAAIH,EAAYI,WAEvCE,EAAc,SAAdA,EAAehJ,GAkBjB,OAAIA,GAAgB,WAAXA,EAAEiJ,MAhBPvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,QACtC3N,EAAW,KAEA,WACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GACtC,IAAO9P,EAAiB,GAAXmQ,EAAe,CAACzT,QAAOuE,UAAS8P,YAAW7P,aACxDlB,EAAI,MAAY,CAACgP,EAAGqC,KAAKpK,IAAIuI,EAAYI,QAAQ,GAAGZ,EAAEQ,EAAYI,QAAQ,GAAGZ,GAAIC,EAAEoC,KAAKpK,IAAIuI,EAAYI,QAAQ,GAAGX,EAAEO,EAAYI,QAAQ,GAAGX,IAC5IjP,EAAI,MAAYqR,KAAKE,IAAI/B,EAAYI,QAAQ,GAAGZ,EAAIQ,EAAYI,QAAQ,GAAGZ,GAC3EhP,EAAI,OAAaqR,KAAKE,IAAI/B,EAAYI,QAAQ,GAAGX,EAAIO,EAAYI,QAAQ,GAAGX,GAC5EjP,EAAI,OAAamQ,EACjBnQ,EAAI,GAASF,EACbqI,EAAQnI,GACRmC,EAAW,IAGRmO,IAKX,OAHA9P,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAWwF,GAE5B,WACH3N,EAAW,IACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,MAE3C,CAAChQ,EAAIqC,EAAYgG,EAASzL,EAAOqU,EAAW7P,EAAW9B,EAAM4Q,OAAQxH,EAASvH,EAASJ,EAAaD,EAAY6H,IAEnH,IAAIyJ,EAAa,KA6BjB,MA5BgB,KAAZ7R,EAAgB6R,EAAa,KACE,IAA1BxC,EAAeM,OACpBkC,EACI,cAAC,GAAD,CACIR,UAAaL,KAAKpK,IAAIyI,EAAe,GAAGV,EAAEU,EAAe,GAAGV,GAC5D2C,UAAaN,KAAKpK,IAAIyI,EAAe,GAAGT,EAAES,EAAe,GAAGT,GAC5DlJ,MAASsL,KAAKE,IAAI7B,EAAe,GAAGV,EAAIU,EAAe,GAAGV,GAC1D/F,OAAUoI,KAAKE,IAAI7B,EAAe,GAAGT,EAAIS,EAAe,GAAGT,GAC3DvS,MAASA,EACT+G,YAAexC,EACfC,UAAaA,EACb6P,UAAaA,IAGU,IAA1BrB,EAAeM,SACpBkC,EACI,cAAC,GAAD,CACIR,UAAaL,KAAKpK,IAAIyI,EAAe,GAAGV,EAAGO,EAAeP,GAC1D2C,UAAaN,KAAKpK,IAAIyI,EAAe,GAAGT,EAAGM,EAAeN,GAC1DlJ,MAASsL,KAAKE,IAAIhC,EAAeP,EAAIU,EAAe,GAAGV,GACvD/F,OAAUoI,KAAKE,IAAIhC,EAAeN,EAAIS,EAAe,GAAGT,GACxDvS,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,EACb6P,UAAaA,KAKrBmB,KCjFKC,GAAc5Q,YAAO+M,GAAP/M,CAAH,grCACV,SAAAmD,GAAK,OAAIA,EAAM7D,eAChB,SAAA6D,GAAK,OAAIA,EAAM9D,cAIA,SAAA8D,GAAK,OAA0B,EAArBA,EAAM7D,eA4B7B,SAAA6D,GAAK,OAAIA,EAAM9D,cACd,SAAA8D,GAAK,OAAIA,EAAM7D,eCXhBuR,GAzBE,SAAC,GAMY,IANXtS,EAMU,EANVA,GAMU,IALbpD,aAKa,MALN,MAKM,MAJb+G,mBAIa,MAJC,KAID,MAHbvC,iBAGa,MAHD,EAGC,MAFbmR,SAEa,MAFX,oCAEW,MADbtB,iBACa,MADD,cACC,EAAb9N,EAAa,EAAbA,QAENqP,EAAavO,mBAAQ,iBAAO,CAC9BC,OAAQtH,EACRuH,YAAa/C,EACbgD,gBAAiBT,EACjBzC,KAAM+P,KACN,CAACrU,EAAOwE,EAAWuC,EAAasN,IAEpC,OACI,sBACIjR,GAAIA,EACJqB,MAAOmR,EACPD,EAAGA,EACHpP,QAASA,KCsJNsP,GAhBQ7P,aAAQ,SAAAtF,GAAK,MAAK,CACjCiD,QAASjD,EAAMC,YAAYgD,QAC3BO,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BxB,OAAQjC,EAAMoC,SAASH,OACvB3C,MAAOU,EAAM+D,MAAMzE,MACnBqU,UAAW3T,EAAM+D,MAAMH,KACvBC,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACIkH,YACAjG,eAZeO,EArJT,SAAC,GAAuG,IAAtG5C,EAAqG,EAArGA,GAAIpD,EAAiG,EAAjGA,MAAOuE,EAA0F,EAA1FA,QAASC,EAAiF,EAAjFA,UAAW6P,EAAsE,EAAtEA,UAAW1R,EAA2D,EAA3DA,OAAQ+I,EAAmD,EAAnDA,SAAUxH,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAasB,EAAgB,EAAhBA,WAC3FqQ,EAAS/C,iBAAO,qCAwHtB,OAtHA/B,qBAAU,WACN,IAAI+E,EAAWhO,EAAKiO,EAAO3C,EAAwD4C,EAAlDzC,EAAQ,GAAIrQ,EAAO,GAAImB,GAAO,EAAO4R,EAAO,KAoB7E,SAASC,IACLhT,EAAKiT,GAAGC,eAAe,KAAM,KAAM7C,EAAM8C,GAAGhE,GAC5CnP,EAAKiT,GAAGC,eAAe,KAAM,KAAM7C,EAAM8C,GAAG/D,GAC5CpP,EAAKiT,GAAGC,eAAe,KAAM,KAAM7C,EAAM+C,GAAGjE,GAC5CnP,EAAKiT,GAAGC,eAAe,KAAM,KAAM7C,EAAM+C,GAAGhE,GAE5C,IAAMiE,EAAMhD,EAAMgD,GAAK,KAAO,KAC9BrT,EAAKsT,GAAGJ,eAAe,KAAM,KAAM7C,EAAMkD,GAAGpE,GAC5CnP,EAAKsT,GAAGJ,eAAe,KAAM,KAAM7C,EAAMkD,GAAGnE,GAC5CpP,EAAKsT,GAAGJ,eAAe,KAAM,KAAM7C,EAAMgD,GAAIlE,GAC7CnP,EAAKsT,GAAGJ,eAAe,KAAM,KAAM7C,EAAMgD,GAAIjE,GAE7C,IAAMoD,EACF,IAAInC,EAAM8C,GAAGhE,EAAE,IAAIkB,EAAM8C,GAAG/D,EAAE,IAAIyD,EAClCxC,EAAM+C,GAAGjE,EAAE,IAAIkB,EAAM+C,GAAGhE,EAAE,KACzBiB,EAAMgD,GAAKhD,EAAMgD,GAAGlE,EAAE,IAAIkB,EAAMgD,GAAGjE,EAAE,IAAM,IAC5CiB,EAAMkD,GAAGpE,EAAE,IAAIkB,EAAMkD,GAAGnE,GACvBjO,EAAO,KAAO,IACnBnB,EAAKI,MAAM8S,eAAe,KAAM,IAAKV,GACrCG,EAAO5C,QAAUyC,EAEbtC,IACAA,EAAKsD,YAAc,YAAYhB,EAAE,QAIzC,SAASiB,EAAKxM,GAEVA,EAAEyM,kBACF,IA6BctJ,EA7BVuJ,EAAI1M,EAAEC,OAAQjH,EAAK0T,EAAE1T,GAAI2T,EAAK3M,EAAEpH,KAAMgU,GA6B5BzJ,EA7ByCnD,EA8BhD,CACHkI,EAAGqC,KAAKnK,IAAI,EAAG+C,EAAM0J,OACrB1E,EAAGoC,KAAKnK,IAAI,EAAG+C,EAAM2J,SA9BpBhB,GAAe,cAAPa,GAA6B,UAAP3T,IAC/BkB,GAAQA,EACRwS,EAAET,eAAe,KAAM,QAAU/R,EAAO,OAAS,IACjD6R,KAGCD,GAA6B,oBAAd1C,EAAMpQ,IAA+B,cAAP2T,GAA6B,eAAPA,IACpEb,EAAOY,EACPb,EAASe,IAGTd,GAAgB,cAAPa,GAA6B,cAAPA,IAC/B3T,EAAK8S,EAAK9S,GACVoQ,EAAMpQ,GAAIkP,GAAK0E,EAAE1E,EAAI2D,EAAO3D,EAC5BkB,EAAMpQ,GAAImP,GAAKyE,EAAEzE,EAAI0D,EAAO1D,EAC5B0D,EAASe,EACTd,EAAKG,eAAe,KAAM,KAAM7C,EAAMpQ,GAAIkP,GAC1C4D,EAAKG,eAAe,KAAM,KAAM7C,EAAMpQ,GAAImP,GAC1C4D,MAGAD,GAAgB,YAAPa,GAA2B,aAAPA,IAC7Bb,EAAO,MAYf,SAASiB,KACLpB,EAAY1H,SAASC,eAAe,gBAEhC0H,EAAQD,EAAUnP,UAClBmB,EAAMsG,SAASC,eAAe,OAvFtC,WAEI,IADA,IAAM8I,EAAIrP,EAAIsP,qBAAqB,UAC1BC,EAAI,EAAGA,EAAIF,EAAE9D,OAAQgE,IAC1B9D,EAAM4D,EAAEE,GAAGC,eAAe,KAAK,OAAS,CACpCjF,EAAG3B,SAASyG,EAAEE,GAAGC,eAAe,KAAK,MAAM,IAC3ChF,EAAG5B,SAASyG,EAAEE,GAAGC,eAAe,KAAK,MAAM,KAInDpU,EAAKiT,GAAKrO,EAAIuG,eAAe,MAC7BnL,EAAKsT,GAAK1O,EAAIuG,eAAe,MAC7BnL,EAAKI,MAAQwE,EAAIuG,eAAe,SAChC+E,EAAOhF,SAASC,eAAe,QAC/BvG,EAAIkI,YAAclI,EAAI6H,YAAc7H,EAAI2H,UAAYkH,EACpD7O,EAAIyP,aAAezP,EAAI0P,YAAc1P,EAAI2P,WAAad,EACtDT,IAyEIwB,IAIR,IAAMvE,EAAc,SAAdA,EAAehJ,GAWjB,GAAIA,GAAgB,WAAXA,EAAEiJ,KAAmB,OAVf,WACXvP,OAAO4O,oBAAoB,UAAWU,GACtCtP,OAAO4O,oBAAoB,YAAayE,GACxC,IAAO5T,EAAkB,GAAXkQ,EAAe,CAACzT,QAAOuE,UAAS8P,YAAW7P,aACzDjB,EAAK,EAAQuS,EAAO5C,QACpB3P,EAAK,OAAakQ,EAClBlQ,EAAK,GAASH,EACdsI,EAASnI,GACTkC,EAAW,IAEsBmO,IAKzC,OAHA9P,OAAO8J,iBAAiB,UAAWwF,GACnC/E,SAAST,iBAAiB,YAAauJ,GAEhC,WACH1R,EAAW,IACX3B,OAAO4O,oBAAoB,UAAWU,GACtC/E,SAASqE,oBAAoB,YAAayE,MAE/C,CAAC/T,EAAIqC,EAAYiG,EAAU1L,EAAOqU,EAAW7P,EAAW7B,EAAO2Q,OAAQ/O,IAGtE,cAACkR,GAAD,CACIvR,WAAYA,EACZC,YAAaA,EAFjB,SAGI,qBAAKf,GAAG,YAAYwD,UAAU,IAA9B,SACI,sBAAKxD,GAAG,MAAR,UACI,cAAC,GAAD,CAAUA,GAAG,QACHpD,MAAQA,EACR+G,YAAexC,EACfC,UAAaA,EACb6P,UAAaA,EACbsB,EAAE,sCACZ,oBAAGvS,GAAG,OAAN,UACI,wBAAQA,GAAG,KAAKmR,GAAG,MAAMC,GAAG,MAAMC,EAAE,OACpC,wBAAQrR,GAAG,KAAKmR,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAEpC,wBAAQrR,GAAG,KAAKmR,GAAG,MAAMC,GAAG,MAAMC,EAAE,MACpC,wBAAQrR,GAAG,KAAKmR,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAEpC,sBAAMrR,GAAG,KAAKqE,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAC5C,sBAAMxE,GAAG,KAAKqE,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,qBC7GrDgQ,GArCC,SAAC,GASa,IATZxU,EASW,EATXA,GASW,IARbpD,aAQa,MARN,MAQM,MAPbwE,iBAOa,MAPD,EAOC,MANbqT,cAMa,MANJ,EAMI,MALbxT,gBAKa,MALF,GAKE,MAJbyT,cAIa,MAJJ,EAII,MAHb3X,YAGa,MAHN,cAGM,MAFbqD,YAEa,MAFN,OAEM,EAAb+C,GAAa,EADbwR,QACa,EAAbxR,SAERyR,EAAa,GACjB,OAAQxT,GACJ,KAAK,EAAGwT,EAAa,SAAU,MAC/B,KAAK,EAAGA,EAAa,UAAW,MAChC,KAAK,GAAIA,EAAa,OAAQ,MAC9B,QAASA,EAAa,SAG1B,IAAMC,EAAY5Q,mBAAQ,iBAAO,CAC7BlH,KAAM6X,EAAa,IAAM3T,EAAW,MAAQlE,EAC5CmE,KAAMtE,KACN,CAACA,EAAOgY,EAAY7X,EAAMkE,IAE9B,OACI,sBACIjB,GAAIA,EACJkP,EAAGuF,EACHtF,EAAGuF,EACHrT,MAAOwT,EACP1R,QAASA,EALb,SAOK/C,KCsEE0U,GAjBOlS,aAAQ,SAAAtF,GAAK,MAAK,CAChCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BvB,MAAOlC,EAAMoC,SAASF,MACtB5C,MAAOU,EAAM+D,MAAMzE,MACnBwE,UAAW9D,EAAM+D,MAAMD,UACvBH,SAAU3D,EAAM+D,MAAMJ,YAE1B,CACIsH,WACAlG,eAbcO,EAhFT,SAAC,GAAsH,IAArH5C,EAAoH,EAApHA,GAAIpD,EAAgH,EAAhHA,MAAOqE,EAAyG,EAAzGA,SAAUG,EAA+F,EAA/FA,UAAW5B,EAAoF,EAApFA,MAAO+I,EAA6E,EAA7EA,QAASG,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,QAAS7H,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,YAAaR,EAAyB,EAAzBA,QAAS8B,EAAgB,EAAhBA,WACzGqN,EAAcC,iBAAO,IACrBoF,EAAcpF,iBAAO,IAC3B,EAAyB5M,mBAAS,IAAzBiS,EAAT,qBACA,EAA0CjS,mBAAS,IAAnD,oBAAOkS,EAAP,KAAsBC,EAAtB,KACMzF,EAAiBR,GAAiBvG,EAAQC,GAEhDiF,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GACdA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IAO3H,OAAmC,IAA/B+G,EAAYI,QAAQI,OAND,WACnBgF,EAAiB,CAACxF,EAAYI,QAAQ,KACtC,IAAM9I,EAAI,CACVA,KAAS,UACTmO,EAAenO,GAE0BoO,GACtCF,EAAiB,YAAIxF,EAAYI,WAEtCqF,EAAiB,SAAjBA,EAAkBnO,GAmBpB,OAAKA,GAAgB,WAAXA,EAAEiJ,MAAiC,UAAXjJ,EAAEiJ,KAlBrB,WACXvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAW6F,GACtC,IAAO/U,EAAiB,GAAXiQ,EAAe,CAACzT,QAAOqE,WAAUG,aAC9ChB,EAAI,MAAYsP,EAAYI,QAC5B1P,EAAI,OAAaiQ,EACjBjQ,EAAI,GAASJ,EACbI,EAAI,KAAW2U,EAAYjF,QAC3BvH,EAAQnI,GACRiC,EAAW,IAS8CmO,GACpDxJ,GAAKA,EAAEiJ,KARA,SAACjJ,GACb,IAAI5G,EAAO,GACiBA,EAAb,cAAX4G,EAAEiJ,KAA6B8E,EAAYjF,QAAQtC,MAAM,GAAG,GACnDuH,EAAYjF,QAAU9I,EAAEqO,IACrCN,EAAYjF,QAAU1P,EACtB4U,EAAa5U,GAGYkV,CAAQtO,QAAhC,GAKT,OAHAtG,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAW2K,GAE5B,WACH9S,EAAW,IACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAW6F,MAE3C,CAACnV,EAAIqC,EAAYkG,EAAS3L,EAAOwE,EAAWH,EAAUzB,EAAM0Q,OAAQxH,EAAS3H,EAAaD,EAAY6H,IAEzG,IAAI4M,EAAa,KAuBjB,MAtBgB,KAAZhV,EAAgBgV,EAAa,KACC,IAAzBN,EAAc/E,OAAcqF,EACjC,cAAC,GAAD,CACId,OAAUQ,EAAc,GAAG/F,EAC3BwF,OAAUO,EAAc,GAAG9F,EAC3BlO,SAAYA,EACZb,KAAQ2U,EAAYjF,QACpBlT,MAAQA,EACRwE,UAAaA,EACbuT,SAAW,IAEe,IAAzBM,EAAc/E,SAAcqF,EACjC,cAAC,GAAD,CACId,OAAUhF,EAAeP,EACzBwF,OAAUjF,EAAeN,EACzBlO,SAAYA,EACZb,KAAQ2U,EAAYjF,QACpBlT,MAAQA,EACRwE,UAAaA,EACbuT,SAAW,KAIfY,KCXOC,GAjBS5S,aAAQ,SAAAtF,GAAK,MAAK,CAClCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/B3B,MAAO9B,EAAMoC,SAASN,MACtBxC,MAAOU,EAAM+D,MAAMzE,MACnBuE,QAAS7D,EAAM+D,MAAMF,QACrBC,UAAW9D,EAAM+D,MAAMD,aAE3B,CACI+G,WACA9F,eAbgBO,EAlDT,SAAC,GAA+E,IAA9EhG,EAA6E,EAA7EA,MAAOwE,EAAsE,EAAtEA,UAAWsH,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,QAAS7H,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,YAAasB,EAAgB,EAAhBA,WACtEoT,EAASxK,SAASC,eAAe,UACjCwK,EAAMD,EAAOE,WAAW,MACxBC,EAAQ,CAAE1G,EAAG,EAAGC,EAAG,GAMnB,SAAS0G,EAAW1L,GAChByL,EAAM1G,EAAI/E,EAAMiC,QAAUqJ,EAAO7I,WAAalE,EAC9CkN,EAAMzG,EAAIhF,EAAMkC,QAAUoJ,EAAO9I,UAAY5L,EAAc4H,EAE/D,SAASmN,EAAM3L,GACXc,SAAST,iBAAiB,YAAauL,GACvCF,EAAW1L,GAEf,SAAS6L,IACL/K,SAASqE,oBAAoB,YAAayG,GAE9C,SAASA,EAAK5L,GACVuL,EAAIO,YACJP,EAAItU,UAAYA,EAChBsU,EAAIQ,QAAU,QACdR,EAAIS,YAAcvZ,EAClB8Y,EAAIU,OAAOR,EAAM1G,EAAG0G,EAAMzG,GAC1B0G,EAAW1L,GACXuL,EAAIW,OAAOT,EAAM1G,EAAG0G,EAAMzG,GAC1BuG,EAAIxR,SAvBZ0J,qBAAU,WAmCF8H,EAAID,OAAOxP,MAAQnF,EACnB4U,EAAID,OAAOtM,OAASpI,IAlC1B,IAwCF,OAJIkK,SAAST,iBAAiB,YAAasL,GACvC7K,SAAST,iBAAiB,UAAWwL,GACrCtV,OAAO8J,iBAAiB,WAfF,SAAhB8L,EAAiBtP,GAOnB,GAAIA,GAAgB,WAAXA,EAAEiJ,KAAmB,OAL1BhF,SAASqE,oBAAoB,YAAawG,GAC1C7K,SAASqE,oBAAoB,UAAW0G,GACxCtV,OAAO4O,oBAAoB,UAAWgH,QACtCjU,EAAW,OAYhB,QClDEkU,GAAS9U,IAAOgU,OAAV,uQACP,SAAA7Q,GAAK,OAAIA,EAAM7D,eAChB,SAAA6D,GAAK,OAAIA,EAAM9D,cACA,SAAA8D,GAAK,OAAwB,EAApBA,EAAM7D,eAE5B,SAAA6D,GAAK,MAAsB,WAAlBA,EAAMrE,QAAuB,GAAK,KCgBzCiW,GArBE,SAAC,GAMY,IANXxW,EAMU,EANVA,GAMU,IALb4R,iBAKa,MALD,EAKC,MAJbC,iBAIa,MAJD,EAIC,MAHb5L,aAGa,MAHN,IAGM,MAFbkD,cAEa,MAFL,GAEK,MADbsN,YACa,MADP,0FACO,EAAbtT,EAAa,EAAbA,QAEZ,OACI,uBACInD,GAAIA,EACJyW,KAAMA,EACNvH,EAAG0C,EACHzC,EAAG0C,EACH5L,MAAOA,EACPkD,OAAQA,EACRhG,QAASA,KC+ENuT,GAbQ9T,aAAQ,SAAAtF,GAAK,MAAK,CACjCiD,QAASjD,EAAMC,YAAYgD,QAC3BmI,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,eAEnC,CACIsB,cACAmG,aATe5F,EA7ET,SAAC,GAAoF,IAAnF5C,EAAkF,EAAlFA,GAAI0I,EAA8E,EAA9EA,QAASC,EAAqE,EAArEA,QAAS7H,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,YAAaR,EAAmC,EAAnCA,QAAS8B,EAA0B,EAA1BA,WAAYmG,EAAc,EAAdA,SAC1EiH,EAAiBR,GAAiBvG,EAAQC,GAC1C+G,EAAcC,iBAAO,IAC3B,EAA4C5M,mBAAS,IAArD,oBAAO6M,EAAP,KAAuBC,EAAvB,KAEAjC,qBAAU,WACN,IAAMyB,EAAe,SAACrI,GACdA,EAAEoF,QAAU1D,EAAU5H,GAAckG,EAAEoF,QAAU1D,GAChD1B,EAAEqF,QAAU1D,EAAU5H,GAAeiG,EAAEqF,QAAU1D,GAAS+G,EAAYI,QAAQC,KAAK,CAACb,EAAGlI,EAAEoF,QAAQ1D,EAASyG,EAAGnI,EAAEqF,QAAQ1D,IAK3H,OAAmC,IAA/B+G,EAAYI,QAAQI,QAHpBL,EAAkB,YAAIH,EAAYI,eAClCE,KAGGH,EAAkB,YAAIH,EAAYI,WAEvCE,EAAc,SAAdA,EAAehJ,GAoBjB,OAAIA,GAAgB,WAAXA,EAAEiJ,MAlBPvP,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,QACtC3N,EAAW,KAiBL2E,OAAL,EAfU,WAGX,GAFAtG,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,GAClC/E,SAAS0L,cAAc,qBAAqBzP,MAAM,CAClD,IAAM7G,EAAQ,GACdA,EAAK,MAAY,CAAC6O,EAAGqC,KAAKpK,IAAIuI,EAAYI,QAAQ,GAAGZ,EAAEQ,EAAYI,QAAQ,GAAGZ,GAAIC,EAAEoC,KAAKpK,IAAIuI,EAAYI,QAAQ,GAAGX,EAAEO,EAAYI,QAAQ,GAAGX,IAC7I9O,EAAK,MAAYkR,KAAKE,IAAI/B,EAAYI,QAAQ,GAAGZ,EAAIQ,EAAYI,QAAQ,GAAGZ,GAC5E7O,EAAK,OAAakR,KAAKE,IAAI/B,EAAYI,QAAQ,GAAGX,EAAIO,EAAYI,QAAQ,GAAGX,GAC7E9O,EAAK,GAASL,EACdK,EAAK,KAAW4K,SAAS0L,cAAc,qBAAqBzP,MAC5DsB,EAASnI,GAEbgC,EAAW,IAGKmO,IAKxB,OAHA9P,OAAO8J,iBAAiB,QAAS6E,GACjC3O,OAAO8J,iBAAiB,UAAWwF,GAE5B,WACH3N,EAAW,IACX3B,OAAO4O,oBAAoB,QAASD,GACpC3O,OAAO4O,oBAAoB,UAAWU,MAE3C,CAAC3N,EAAYqG,EAAS3H,EAAaD,EAAY6H,EAAS3I,EAAIwI,IAE/D,IAAIoO,EAAc,KAuBlB,MAtBgB,KAAZrW,EAAgBqW,EAAc,KACC,IAA1BhH,EAAeM,OACpB0G,EACI,cAAC,GAAD,CACIhF,UAAaL,KAAKpK,IAAIyI,EAAe,GAAGV,EAAEU,EAAe,GAAGV,GAC5D2C,UAAaN,KAAKpK,IAAIyI,EAAe,GAAGT,EAAES,EAAe,GAAGT,GAC5DlJ,MAASsL,KAAKE,IAAI7B,EAAe,GAAGV,EAAIU,EAAe,GAAGV,GAC1D/F,OAAUoI,KAAKE,IAAI7B,EAAe,GAAGT,EAAIS,EAAe,GAAGT,GAC3DsH,KAAMxL,SAAS0L,cAAc,qBAAqBzP,QAG3B,IAA1B0I,EAAeM,SACpB0G,EACI,cAAC,GAAD,CACIhF,UAAaL,KAAKpK,IAAIyI,EAAe,GAAGV,EAAGO,EAAeP,GAC1D2C,UAAaN,KAAKpK,IAAIyI,EAAe,GAAGT,EAAGM,EAAeN,GAC1DlJ,MAASsL,KAAKE,IAAIhC,EAAeP,EAAIU,EAAe,GAAGV,GACvD/F,OAAUoI,KAAKE,IAAIhC,EAAeN,EAAIS,EAAe,GAAGT,GACxDsH,KAAMxL,SAAS0L,cAAc,qBAAqBzP,SAK1D0P,KC9EKC,GAAmBpV,IAAOC,IAAV,gtCAGX,SAAAkD,GAAK,OAAIA,EAAMmE,UAGpB,SAAAnE,GAAK,OAAiB,IAAbA,EAAMmE,OAAW,MAOR,qBAAEvL,MAAiBT,KAAKR,UAOT,qBAAEiB,MAAiBb,OAAOH,eAAe,qBAAEgB,MAAiBb,OAAOJ,UAoBpG,qBAAEiB,MAAiBb,OAAOH,eAUxB,qBAAEgB,MAAiBb,OAAOH,eCxC1Bsa,GATI,SAAC,GAAe,IAAdpO,EAAa,EAAbA,QACjB,OACI,eAACmO,GAAD,CAAkB9N,OAAgB,GAARL,EAAalF,UAAU,oBAAjD,UACI,uBAAO5D,KAAK,QAAQ4D,UAAU,cAAc6D,YAAY,YACxD,uBAAO0P,QAAQ,OAAOvT,UAAU,cAAhC,yBC+EGwT,GARkBpU,aAAQ,SAAAtF,GAAK,MAAK,CAC3CoL,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,eAJN6B,EArET,SAAC,GAAiD,IAAhD9B,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,YAAa2H,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAClD8G,EAAiBR,GAAiBvG,EAAQC,GAC1CsO,EAAsB,GAAIC,EAAqB,GACjDC,EAA2B,GAAIC,EAA6B,GAE5DC,EAAe,EACfC,EAAgB,EACgBD,EAAhC5H,EAAeN,EAAIpO,EAA4BA,EAAa,EACvD0O,EAAeN,EAAI,EAAkB,EAC1BM,EAAeN,EACAmI,EAA/B7H,EAAeP,EAAIpO,EAA4BA,EAAa,EACvD2O,EAAeP,EAAI,EAAmB,EAC1BO,EAAeP,EAEpC,IAAI,IAAIgF,EAAI,EAAGA,EAAG,GAAIA,IACdA,EAAG,IAAI+C,EAAoBlH,KAAKmE,GACpCgD,EAAmBnH,KAAKmE,GA8B5B,OA1BIpT,EAAaC,GACboW,EAA2BD,EAAmB/R,KAAI,SAAAoS,GAAM,OACpD,cAAC1I,GAAD,CAA6C5I,MAAO,GAAIkD,OAAQpI,EAAY,GAA5E,SACKwW,GADgCA,MAIzCH,EAA6BH,EAAoB9R,KAAI,SAAAoS,GAAM,OACvD,cAACzI,GAAD,CAA+C7I,MAAOnF,EAAW,GAAIqI,OAAQ,GAA7E,SACKoO,GADkCA,QAO3CJ,EAA2BF,EAAoB9R,KAAI,SAAAoS,GAAM,OACrD,cAAC1I,GAAD,CAA6C5I,MAAO,GAAIkD,OAAQpI,EAAY,GAA5E,SACKwW,GADgCA,MAIzCH,EAA6BF,EAAmB/R,KAAI,SAAAoS,GAAM,OACtD,cAACzI,GAAD,CAA+C7I,MAAOnF,EAAW,GAAIqI,OAAQ,GAA7E,SACKoO,GADkCA,OAO3C,gCACI,eAAC3I,GAAD,CAAgC3I,MAAOnF,EAAYqI,OAAQ,GAAIT,QAASA,EAASC,QAASA,EAA1F,UACKyO,EACD,cAACrI,GAAD,CAAqBlK,KAAMyS,OAE/B,eAAC1I,GAAD,CAAgC3I,MAAOnF,EAAYqI,OAAQ,GAAIT,QAASA,EAASC,QAASA,EAAQ5H,EAAY,GAA9G,UACKqW,EACD,cAACrI,GAAD,CAAqBlK,KAAMyS,OAE/B,eAAC1I,GAAD,CAAgC3I,MAAO,GAAIkD,OAAQpI,EAAa2H,QAASA,EAASC,QAASA,EAA3F,UACKwO,EACD,cAACnI,GAAD,CAAmBtC,IAAK2K,OAE5B,eAACzI,GAAD,CAAgC3I,MAAO,GAAIkD,OAAQpI,EAAa2H,QAASA,EAAQ5H,EAAW,GAAI6H,QAASA,EAAzG,UACKwO,EACD,cAACnI,GAAD,CAAmBtC,IAAK2K,aCsJzBG,GAlBY5U,aAAQ,SAAAtF,GAAK,MAAK,CACrCiD,QAASjD,EAAMC,YAAYgD,QAC3BqI,SAAUtL,EAAMoC,SAChBgJ,QAASpL,EAAMC,YAAYkD,aAC3BkI,QAASrL,EAAMC,YAAYsD,aAC3BC,WAAYxD,EAAMC,YAAYuD,WAC9BC,YAAazD,EAAMC,YAAYwD,YAC/BP,UAAWlD,EAAMC,YAAYiD,aAC7B,CACAiX,W3BpKkB,SAAAzX,GACtB,MAAM,CACFJ,KAAM7B,EACN8B,QAASG,I2BkKT0X,Y3BlImB,SAAA1X,GACvB,MAAM,CACFJ,KAAMxB,EACNyB,QAASG,I2BgIT2X,W3B1IkB,SAAA3X,GACtB,MAAM,CACFJ,KAAMzB,EACN0B,QAASG,I2BwIT4X,a3BhKoB,SAAA5X,GACxB,MAAM,CACFJ,KAAM5B,EACN6B,QAASG,I2B8JT6X,W3B1JkB,SAAA7X,GACtB,MAAM,CACFJ,KAAM3B,EACN4B,QAASG,I2BwJT8X,Y3BpJmB,SAAA9X,GACvB,MAAM,CACFJ,KAAM1B,EACN2B,QAASG,K2BmIU4C,EA5KT,SAAC,GAEqF,IAFpFrC,EAEmF,EAFnFA,QAASqI,EAE0E,EAF1EA,SAAUpI,EAEgE,EAFhEA,UAChBkI,EACgF,EADhFA,QAASC,EACuE,EADvEA,QAAS7H,EAC8D,EAD9DA,WAAYC,EACkD,EADlDA,YAC9B2W,EAAgF,EAAhFA,YAAaD,EAAmE,EAAnEA,WAAYG,EAAuD,EAAvDA,aAAcD,EAAyC,EAAzCA,WAAYE,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAC5E1Y,EAAQ,GACRoQ,EAAY,GACZnQ,EAAU,GACVC,EAAQ,GACRC,EAAS,GACTC,EAAQ,GACRC,EAAS,GAETsY,EAAgB,SAAC/X,EAAIJ,GAcvB,MAAgB,WAAZW,EAba,SAACP,GACdgY,QAAQC,IAAI,UAAUjY,GAYOoF,CAASpF,GACrB,WAAZO,EAXQ,SAACP,EAAIJ,GAClB,OAAQA,GACJ,IAAK,SAAUgY,EAAa5X,GAAK,MACjC,IAAK,OAAQ6X,EAAW7X,GAAK,MAC7B,IAAK,QAAS0X,EAAY1X,GAAK,MAC/B,IAAK,QAAS8X,EAAY9X,GAAK,MAC/B,IAAK,OAAQ2X,EAAW3X,GAAK,MAC7B,QAASyX,EAAWzX,IAIUkY,CAASlY,EAAGJ,GACtC,cA+GhB,OA5GAuY,OAAOC,QAAQxP,GAAUuH,SAAQ,SAAA7N,GAC7B,MAAmB,UAAfA,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAACpQ,GAAD,OACtBX,EAAM2Q,KAAK,cAAC,GAAD,CACP/P,GAAID,EAAKC,GAETpD,MAASmD,EAAKsQ,OAAOzT,MACrB+G,YAAe5D,EAAKsQ,OAAOlP,QAC3BC,UAAarB,EAAKsQ,OAAOjP,UACzBwC,YAAe7D,EAAK4Q,OAAO,GAAGzB,EAC9BrL,YAAe9D,EAAK4Q,OAAO,GAAGxB,EAC9BrL,aAAgB/D,EAAK4Q,OAAO,GAAGzB,EAC/BnL,aAAgBhE,EAAK4Q,OAAO,GAAGxB,EAC/BhM,QAAW,kBAAM4U,EAAchY,EAAKC,GAAI,UARnCD,EAAK4Q,OAAO,GAAGzB,EAAEnP,EAAK4Q,OAAO,GAAGxB,OAY9B,YAAf7M,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAAClQ,GAAD,OACtBZ,EAAQ0Q,KAAK,cAAC,GAAD,CACT/P,GAAIC,EAAOD,GAEXpD,MAASqD,EAAOoQ,OAAOzT,MACvBqU,UAAahR,EAAOoQ,OAAOY,UAC3BtN,YAAe1D,EAAOoQ,OAAOlP,QAC7BC,UAAanB,EAAOoQ,OAAOjP,UAC3B0P,QAAW7Q,EAAOmQ,MAAMlB,EACxB6B,QAAW9Q,EAAOmQ,MAAMjB,EACxB6B,OAAU/Q,EAAO+Q,OACjB7N,QAAW,kBAAM4U,EAAc9X,EAAOD,GAAI,YARrCC,EAAOmQ,MAAMlB,EAAEjP,EAAOmQ,MAAMjB,OAY1B,UAAf7M,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAACjQ,GAAD,OACtBZ,EAAMyQ,KAAK,cAAC,GAAD,CACP/P,GAAIE,EAAKF,GAETpD,MAASsD,EAAKmQ,OAAOzT,MACrBqU,UAAa/Q,EAAKmQ,OAAOY,UACzBtN,YAAezD,EAAKmQ,OAAOlP,QAC3BC,UAAalB,EAAKmQ,OAAOjP,UACzBwQ,UAAa1R,EAAKkQ,MAAMlB,EACxB2C,UAAa3R,EAAKkQ,MAAMjB,EACxBlJ,MAAQ/F,EAAK+F,MACbkD,OAASjJ,EAAKiJ,OACdhG,QAAW,kBAAM4U,EAAc7X,EAAKF,GAAI,UATnCE,EAAKkQ,MAAMlB,EAAEhP,EAAKkQ,MAAMjB,OAatB,WAAf7M,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAAC9P,GAAD,OACtBZ,EAAOsQ,KAAK,cAAC,GAAD,CACR/P,GAAIK,EAAML,GAEV4R,UAAavR,EAAM+P,MAAMlB,EACzB2C,UAAaxR,EAAM+P,MAAMjB,EACzBlJ,MAAQ5F,EAAM4F,MACdkD,OAAS9I,EAAM8I,OACfsN,KAAOpW,EAAMoW,KACbtT,QAAW,kBAAM4U,EAAc1X,EAAML,GAAI,WANpCK,EAAM+P,MAAMlB,EAAE7O,EAAM+P,MAAMjB,OAUxB,cAAf7M,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAACkI,EAAS/K,GAChCkC,EAAUO,KAAK,cAAC,GAAD,CACX/P,GAAI,aAAasN,EAEjB1Q,MAASyb,EAAShI,OAAOzT,MACzB+G,YAAe0U,EAAShI,OAAOlP,QAC/BC,UAAaiX,EAAShI,OAAOjP,UAC7BuP,OAAQ0H,EAAS1H,OACjBxN,QAAW,SAACnD,GAAD,OAAQ+X,EAAc/X,EAAI,UALhCqY,EAAS1H,OAAO,GAAGzB,EAAEmJ,EAAS1H,OAAO,GAAGxB,OAStC,WAAf7M,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAAChQ,GACvBZ,EAAOwQ,KAAK,cAAC,GAAD,CACR/P,GAAIG,EAAMH,GAEVpD,MAASuD,EAAMkQ,OAAOzT,MACtBqU,UAAa9Q,EAAMkQ,OAAOY,UAC1BtN,YAAexD,EAAMkQ,OAAOlP,QAC5BC,UAAajB,EAAMkQ,OAAOjP,UAC1BmR,EAAGpS,EAAMoS,EACTpP,QAAW,kBAAM4U,EAAc5X,EAAMH,GAAI,WANpCG,EAAMoS,OAUJ,UAAfjQ,EAAQ,GACDA,EAAQ,GAAG6N,SAAQ,SAAC/P,GACvBZ,EAAMuQ,KAAK,cAAC,GAAD,CACP/P,GAAII,EAAKJ,GAETpD,MAASwD,EAAKiQ,OAAOzT,MACrBqE,SAAYb,EAAKiQ,OAAOpP,SACxBG,UAAahB,EAAKiQ,OAAOjP,UACzBqT,OAAUrU,EAAKgQ,MAAM,GAAGlB,EACxBwF,OAAUtU,EAAKgQ,MAAM,GAAGjB,EACxB/O,KAAMA,EAAKA,KACX+C,QAAW,kBAAM4U,EAAc3X,EAAKJ,GAAI,UAPnCI,EAAKA,eAJtB,KAkBA,qCACA,sBAAKJ,GAAG,QAAR,UACI,cAAC2O,GAAD,CAAkBjG,QAASA,EAASC,QAASA,EAAS7H,WAAYA,EAAYC,YAAaA,EAA3F,SACI,cAAC,KAAD,CAAkBuX,IAAkB,UAAZ/X,GAAmC,WAAZA,EAAwB,CAACgY,UAAU,GAAQ,CAACA,UAAU,GAArG,SACI,eAAC,KAAD,WACI,eAAC,GAAD,CAAOzX,WAAYA,EAAYC,YAAaA,EAAaR,QAASA,EAAlE,UACKd,EACAH,EACAD,EACAG,EACAD,EACAiQ,EACApQ,EACY,UAAZmB,GAAuB,cAAC,GAAD,CAAOP,GAAI,UAAU4I,EAASnJ,OAAOyQ,SAChD,SAAZ3P,GAAsB,cAAC,GAAD,CAAMP,GAAI,SAAS4I,EAAStJ,MAAM4Q,SAC5C,WAAZ3P,GAAwB,cAAC,GAAD,CAAQP,GAAI,WAAW4I,EAASvJ,QAAQ6Q,SACpD,SAAZ3P,GAAsB,cAAC,GAAD,CAAMP,GAAI,SAAS4I,EAASpJ,MAAM0Q,SAC5C,aAAZ3P,GAA0B,cAAC,GAAD,CAAUP,GAAI,SAAS4I,EAASxJ,MAAM8Q,SACpD,SAAZ3P,GAAsB,cAAC,GAAD,CAAMP,GAAI,SAAS4I,EAASxJ,MAAM8Q,YAEhD,UAAZ3P,GAAuB,cAAC,GAAD,CAAOP,GAAI,UAAU4I,EAASrJ,OAAO2Q,SAChD,WAAZ3P,GAAwB,cAAC,GAAD,IACzB,cAACgW,GAAD,CAAQvW,GAAG,SAASe,YAAaA,EAAaD,WAAYA,EAAYP,QAASA,WAI9E,UAAZA,GAAuB,cAAC,GAAD,CAAYmI,QAASA,EAASC,QAASA,OAElEnI,GAAa,cAAC,GAAD,UC9KPgY,GAdH,WACR,OACI,cAAC,IAAD,CAAUC,MCPAC,YAAYpX,EAAaqX,GDOnC,SACE,cAAC,EAAD,UACI,eAACnX,GAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,WCbH,IAAwBmX,GCQxBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFtO,SAASC,eAAe,SAM1B0N,O","file":"static/js/main.e4a48359.chunk.js","sourcesContent":["export const darkTheme = {\r\n    background: {\r\n        normal: 'rgb(50,56,84)',\r\n        normalHover: 'rgb(70,76,94)',\r\n        dark: 'rgb(31,40,57)',\r\n        darkHover: 'rgb(31,40,57)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(104,49,157)',\r\n        normalHover: 'rgb(144,89,197)',\r\n        dark: 'rgb(72, 61, 139)',\r\n        darkHover: 'rgb(118,57,177)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(104,49,157)',\r\n        dark: 'rgb(89,41,131)',\r\n    },\r\n    icon: {\r\n        normal: 'rgb(42,11,57)',\r\n        hover: 'rgb(0,0,0)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(222,168,255)',\r\n        dark: 'rgb(214,207,255)',\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(83,77,119)'\r\n    }\r\n};\r\n\r\nexport const lightTheme = {\r\n    background: {\r\n        normal: 'rgb(166, 166, 166)',\r\n        normalHover: 'rgb(140, 140, 140)',\r\n        dark: 'rgb(100, 100, 100)',\r\n        darkHover: 'rgb(140, 140, 140)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        normalHover: 'rgb(185, 53, 44)',\r\n        dark: 'rgb(215, 83, 54)',\r\n        darkHover: 'rgb(135, 23, 14)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        dark: 'rgb(235, 93, 64)',\r\n    },\r\n    icon: {\r\n        normal: 'rgb(74,67,67)',\r\n        hover: 'rgb(41,37,37)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(74,67,67)',\r\n        dark: 'rgb(255,255,255)',\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(136,136,136)',\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {darkTheme, lightTheme} from \"../../theme/themes\";\r\n\r\nconst DarkThemeProvider = ({ children }) => {\r\n    const darkThemeEnabled = useSelector((state) => state.application.darkTheme);\r\n    return (\r\n        <ThemeProvider theme={darkThemeEnabled ? darkTheme : lightTheme}>\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default DarkThemeProvider;","export const LINE_ADD = \"LINE_ADD\";\r\nexport const CIRCLE_ADD = \"CIRCLE_ADD\";\r\nexport const RECT_ADD = \"RECT_ADD\";\r\nexport const CURVE_ADD = \"CURVE_ADD\";\r\nexport const TEXT_ADD = \"TEXT_ADD\";\r\nexport const IMAGE_ADD = \"IMAGE_ADD\";\r\nexport const LINE_DELETE = \"LINE_DELETE\";\r\nexport const CIRCLE_DELETE = \"CIRCLE_DELETE\";\r\nexport const RECT_DELETE = \"RECT_DELETE\";\r\nexport const CURVE_DELETE = \"CURVE_DELETE\";\r\nexport const TEXT_DELETE = \"TEXT_DELETE\";\r\nexport const IMAGE_DELETE = \"IMAGE_DELETE\";\r\nexport const LOAD_DATA = \"LOAD_DATA\";\r\n\r\nexport const THEME_TOGGLE = \"THEME_TOGGLE\";\r\nexport const SET_SHEET_WIDTH = \"SET_SHEET_WIDTH\";\r\nexport const SET_SHEET_HEIGHT = \"SET_SHEET_HEIGHT\";\r\nexport const SET_SHEET_OFFSET_Y = \"SET_SHEET_OFFSET_Y\";\r\nexport const SET_SHEET_OFFSET_X = \"SET_SHEET_OFFSET_X\";\r\nexport const SET_DRAWING = \"SET_DRAWING\";\r\nexport const TOGGLE_INDICATOR = \"TOGGLE_INDICATOR\";\r\nexport const TOGGLE_ORIENTATION = \"TOGGLE_ORIENTATION\";\r\n\r\nexport const SET_FONT_SIZE = \"SET_FONT_SIZE\";\r\nexport const SET_COLOR = \"SET_COLOR\";\r\nexport const SET_PATTERN = \"SET_PATTERN\";\r\nexport const SET_LINE_WIDTH = \"SET_LINE_WIDTH\";\r\nexport const SET_FILL = \"SET_FILL\";","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE,\r\n    CURVE_ADD,\r\n    CURVE_DELETE, IMAGE_ADD, IMAGE_DELETE,\r\n    LINE_ADD,\r\n    LINE_DELETE, LOAD_DATA,\r\n    RECT_ADD,\r\n    RECT_DELETE, TEXT_ADD, TEXT_DELETE\r\n} from \"../constants\";\r\n\r\nconst startElements = {\r\n    lines: [],\r\n    circles: [],\r\n    rects: [],\r\n    curves: [],\r\n    texts: [],\r\n    images: [],\r\n}\r\n\r\nconst elements = (state= startElements, action) => {\r\n    switch (action.type) {\r\n        case LINE_ADD:\r\n            return {\r\n                ...state,\r\n                lines: [\r\n                    action.payload,\r\n                    ...state.lines,\r\n                ]\r\n            }\r\n        case CIRCLE_ADD:\r\n            return {\r\n                ...state,\r\n                circles: [\r\n                    action.payload,\r\n                    ...state.circles,\r\n                ]\r\n            }\r\n        case RECT_ADD:\r\n            return {\r\n                ...state,\r\n                rects: [\r\n                    action.payload,\r\n                    ...state.rects,\r\n                ]\r\n            }\r\n        case CURVE_ADD:\r\n            return {\r\n                ...state,\r\n                curves: [\r\n                    action.payload,\r\n                    ...state.curves,\r\n                ]\r\n            }\r\n        case TEXT_ADD:\r\n            return {\r\n                ...state,\r\n                texts: [\r\n                    action.payload,\r\n                    ...state.texts,\r\n                ]\r\n            }\r\n        case IMAGE_ADD:\r\n            return {\r\n                ...state,\r\n                images: [\r\n                    action.payload,\r\n                    ...state.images,\r\n                ]\r\n            }\r\n        case LINE_DELETE:\r\n            return {\r\n                ...state,\r\n                lines: state.lines.filter(line => line.id !== action.payload),\r\n            }\r\n        case CIRCLE_DELETE:\r\n            return {\r\n                ...state,\r\n                circles: state.circles.filter(circle => circle.id !== action.payload),\r\n            }\r\n        case RECT_DELETE:\r\n            return {\r\n                ...state,\r\n                rects: state.rects.filter(rect => rect.id !== action.payload),\r\n            }\r\n        case CURVE_DELETE:\r\n            return {\r\n                ...state,\r\n                curves: state.curves.filter(curve => curve.id !== action.payload),\r\n            }\r\n        case TEXT_DELETE:\r\n            return {\r\n                ...state,\r\n                texts: state.texts.filter(text => text.id !== action.payload),\r\n            }\r\n        case IMAGE_DELETE:\r\n            return {\r\n                ...state,\r\n                images: state.images.filter(image => image.id !== action.payload),\r\n            }\r\n        case LOAD_DATA:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default elements;","import {\r\n    SET_DRAWING,\r\n    SET_SHEET_HEIGHT, SET_SHEET_OFFSET_X,\r\n    SET_SHEET_OFFSET_Y,\r\n    SET_SHEET_WIDTH,\r\n    THEME_TOGGLE,\r\n    TOGGLE_INDICATOR,\r\n    TOGGLE_ORIENTATION\r\n} from \"../constants\";\r\n\r\nconst startState = {\r\n    drawing: '',\r\n    darkTheme: true,\r\n    indicator: true,\r\n    sheetOffsetX: (window.innerWidth-(window.innerHeight-20)/1.4142857)/2,\r\n    sheetOffsetY: 10,\r\n    sheetWidth: (window.innerHeight-20)/1.4142857,\r\n    sheetHeight: (window.innerHeight-20),\r\n    sheetVertical: true,\r\n}\r\n\r\nconst application = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_DRAWING:\r\n            return {\r\n                ...state,\r\n                drawing: action.payload,\r\n            }\r\n\r\n        case THEME_TOGGLE:\r\n            return {\r\n                ...state,\r\n                darkTheme: !state.darkTheme\r\n            }\r\n\r\n        case SET_SHEET_WIDTH:\r\n            return {\r\n                ...state,\r\n                sheetWidth: action.payload,\r\n            }\r\n\r\n        case SET_SHEET_HEIGHT:\r\n            return {\r\n                ...state,\r\n                sheetHeight: action.payload,\r\n            }\r\n\r\n        case SET_SHEET_OFFSET_Y:\r\n            return {\r\n                ...state,\r\n                sheetOffsetY: action.payload,\r\n            }\r\n\r\n        case SET_SHEET_OFFSET_X:\r\n            return {\r\n                ...state,\r\n                sheetOffsetX: action.payload,\r\n            }\r\n\r\n        case TOGGLE_INDICATOR:\r\n            return {\r\n                ...state,\r\n                indicator: action.payload,\r\n            }\r\n\r\n        case TOGGLE_ORIENTATION:\r\n            return {\r\n                ...state,\r\n                sheetVertical: !state.sheetVertical,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default application;","import {SET_COLOR, SET_FILL, SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN} from \"../constants\";\r\n\r\nconst startState = {\r\n    fontSize: 16,\r\n    color: '#000000',\r\n    fill: 'transparent',\r\n    pattern: '',\r\n    lineWidth: 1,\r\n}\r\n\r\nconst style = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_FONT_SIZE:\r\n            return {\r\n                ...state,\r\n                fontSize: action.payload,\r\n            }\r\n        case SET_COLOR:\r\n            return {\r\n                ...state,\r\n                color: action.payload,\r\n            }\r\n        case SET_FILL:\r\n            return {\r\n                ...state,\r\n                fill: action.payload,\r\n            }\r\n        case SET_PATTERN:\r\n            return {\r\n                ...state,\r\n                pattern: action.payload,\r\n            }\r\n        case SET_LINE_WIDTH:\r\n            return {\r\n                ...state,\r\n                lineWidth: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default style;","import {combineReducers} from 'redux';\r\nimport elements from './drawingReducer';\r\nimport application from \"./applicationReducer\";\r\nimport style from \"./styleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    elements,\r\n    application,\r\n    style,\r\n});\r\n\r\nexport default rootReducer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const NavigationWrapper = styled.section`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: calc(100% - 260px);\r\n  width: 210px;\r\n  height: 84px;\r\n  background-color: ${({theme}) => theme.background.dark};\r\n  border: 3px solid ${({theme}) => theme.border.normal};\r\n  transition: 0s;\r\n  z-index: 10;\r\n  &:nth-child(2){\r\n    top: 432px;\r\n    left: calc(100% - 150px);\r\n    width: 100px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(3){\r\n    top: 314px;\r\n    left: calc(100% - 260px);\r\n    width: 210px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(4){\r\n    top: 200px;\r\n    left: calc(100% - 260px);\r\n    width: 210px;\r\n    height: 50px;\r\n  }\r\n  \r\n  &.minimized{\r\n    top: calc(100% - 30px) !important;\r\n    left: calc(100% - 150px) !important;\r\n    width: 50px;\r\n    height: 30px;\r\n    border-top-left-radius: 40px;\r\n    border-top-right-radius: 40px;\r\n    border-bottom: none;\r\n    cursor: pointer;\r\n    \r\n    &:nth-child(2){\r\n      left: calc(100% - 80px) !important;\r\n    }\r\n\r\n    &:nth-child(3){\r\n      left: calc(100% - 220px) !important;\r\n    }\r\n\r\n    &:nth-child(4){\r\n      left: calc(100% - 290px) !important;\r\n    }\r\n\r\n    &:hover{\r\n      transform: translate(-5px,-5px);\r\n      background-color: ${({theme}) => theme.background.darkHover};\r\n      width: 60px;\r\n      height: 35px;\r\n      border-width: 4px;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n    }\r\n    & *{\r\n      display: none;\r\n    }\r\n    & button:first-child {\r\n      display: block;\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n      background-color: transparent;\r\n      font-size: 20px;\r\n      transition: .1s;\r\n      color: ${({theme}) => theme.color.normal};\r\n      &:hover{\r\n        background-color: ${({theme}) => theme.background.darkHover};\r\n        color: ${({theme}) => theme.color.dark};\r\n        font-size: 23px;\r\n      }\r\n      & svg{\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        & path{\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Dragger = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 20px;\r\n  cursor: all-scroll;\r\n  background-color: ${({theme}) => theme.color.normal};\r\n  opacity: 1;\r\n  transition: opacity .1s;\r\n`;\r\n\r\nexport const Minimizer = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 20px;\r\n  width: 20px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.border.normal};\r\n  color: ${({theme}) => theme.icon.normal};\r\n  opacity: 1;\r\n  transition: .1s;\r\n  &:hover{\r\n    background-color: ${({theme}) => theme.border.darkHover};\r\n    color: ${({theme}) => theme.icon.hover};\r\n    font-size: 0.1rem;\r\n  }\r\n  & svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    & path {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 8px 5px;\r\n`;\r\n\r\nexport const StyleInfo = styled.div`\r\n  position: absolute;\r\n  top: -50px;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n  color: ${({theme}) => theme.font.normal};\r\n  display: inline-block;\r\n  width: 84px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  text-align: center;\r\n  line-height: 34px;\r\n  transition: .1s;\r\n  font-family: roboto, sans-serif;\r\n  font-size: 12px;\r\n  &.firstStyle{\r\n    top: -90px;\r\n    left: -30px;\r\n  }\r\n  &.secondStyle{\r\n    left: -30px;\r\n    cursor: pointer;\r\n    background-color: ${({theme}) => theme.background.normalHover};\r\n  }\r\n  &.thirdStyle{\r\n    top: -90px;\r\n    left: 120px;\r\n  }\r\n  &.fourthStyle{\r\n    left: 120px;\r\n    cursor: pointer;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.background.normalHover};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UploadFileInfo = styled.div`\r\n  position: absolute;\r\n  top: 80px;\r\n  left: 0;\r\n  font-size: 60px;\r\n  color: ${({theme}) => theme.color.normal};\r\n`;\r\n\r\nexport const Information = styled.span`\r\n  position: absolute;\r\n  top: 60px;\r\n  left: -130px;\r\n  width: 200px;\r\n  font-size: 16px;\r\n  color: ${({theme}) => theme.font.dark};\r\n  font-family: roboto, sans-serif;\r\n  text-align: center;\r\n`;","import {\r\n    SET_DRAWING,\r\n    SET_SHEET_HEIGHT, SET_SHEET_OFFSET_X,\r\n    SET_SHEET_OFFSET_Y,\r\n    SET_SHEET_WIDTH,\r\n    THEME_TOGGLE,\r\n    TOGGLE_INDICATOR,\r\n    TOGGLE_ORIENTATION\r\n} from \"../../constants\";\r\n\r\nexport const setDrawing = element => {\r\n    return{\r\n        type: SET_DRAWING,\r\n        payload: element\r\n    }\r\n};\r\n\r\nexport const themeToggle = () => {\r\n    return{\r\n        type: THEME_TOGGLE,\r\n    }\r\n};\r\n\r\nexport const setSheetWidth = width => {\r\n    return{\r\n        type: SET_SHEET_WIDTH,\r\n        payload: width\r\n    }\r\n};\r\n\r\nexport const setSheetHeight = height => {\r\n    return{\r\n        type: SET_SHEET_HEIGHT,\r\n        payload: height\r\n    }\r\n};\r\n\r\nexport const setSheetOffsetY = offset => {\r\n    return{\r\n        type: SET_SHEET_OFFSET_Y,\r\n        payload: offset\r\n    }\r\n};\r\n\r\nexport const setSheetOffsetX = offset => {\r\n    return{\r\n        type: SET_SHEET_OFFSET_X,\r\n        payload: offset\r\n    }\r\n};\r\n\r\nexport const setIndicator = (indicator) => {\r\n    return{\r\n        type: TOGGLE_INDICATOR,\r\n        payload: indicator\r\n    }\r\n};\r\n\r\nexport const toggleOrientation = () => {\r\n    return{\r\n        type: TOGGLE_ORIENTATION,\r\n    }\r\n};","import styled from 'styled-components';\r\n\r\nconst ParentButton = styled.button`\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\n\r\nexport const NormalButton = styled.button`\r\n  background-color: transparent;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 34px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transition: .1s;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n\r\n  &:hover svg.innerIcon{\r\n    color: ${({theme}) => theme.border.normalHover};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  \r\n  &.selected{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n    & svg.innerIcon{\r\n      color: ${({theme}) => theme.border.normalHover};\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SetDarkButton = styled(ParentButton)`\r\n    background-color: transparent;\r\n    color: ${({theme}) => theme.color.normal};\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 34px;\r\n    margin-right: 3px;\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    border-radius: 20%;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    & svg:first-child{\r\n        position: absolute;\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        position: absolute;\r\n        left: 5px;\r\n        top: 5px;\r\n        transition: left .1s, font-size .15s;\r\n        font-size: 20px;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(78, 96, 110)\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(232, 228, 153);\r\n        left: 8px;\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const SetLightButton = styled(SetDarkButton)`\r\n    background-color: transparent;\r\n    & svg:first-child{\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        transition: left .1s, transform .2s;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(171, 212, 245);\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(247, 244, 143);\r\n        transform-origin: center;\r\n        transform: rotate(60deg);\r\n        font-size: 20px;\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCloud, faInfo} from '@fortawesome/free-solid-svg-icons'\r\nimport {connect} from \"react-redux\";\r\nimport {themeToggle} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport {NormalButton, SetDarkButton, SetLightButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {faMoon, faSun} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {ButtonsWrapper, Information} from \"./NavigationStyles\";\r\n\r\nconst AppSettings = ({darkTheme, themeToggle, resetMinimized}) => {\r\n    const [information, setInformation] = useState(false);\r\n    const handleThemeChange = () => {\r\n        themeToggle();\r\n        resetMinimized([true, true, true, true]);\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            {darkTheme ?\r\n                <SetLightButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faSun} /></SetLightButton> :\r\n                <SetDarkButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faMoon} /></SetDarkButton>\r\n            }\r\n            <div style={{position: 'relative'}}>\r\n                <NormalButton className={information ? 'selected' : ''}>\r\n                    <FontAwesomeIcon icon={faInfo} onClick={() => setInformation(!information)} className={'innerIcon'}/>\r\n                </NormalButton>\r\n                {information ?\r\n                    <Information>\r\n                        To draw element select it from drawing-menu. To cancel drawing press 'Escape'.\r\n                    </Information>\r\n                    : null}\r\n            </div>\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedAppSettings = connect(state => ({\r\n        darkTheme: state.application.darkTheme,}),\r\n    {\r\n        themeToggle,\r\n    }\r\n)(AppSettings);\r\n\r\nexport default ConnectedAppSettings;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst LineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                firstPointX = 0,\r\n                firstPointY = 0,\r\n                secondPointX = 0,\r\n                secondPointY = 0,\r\n                onClick}) => {\r\n\r\n    const lineStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n    }), [color, lineWidth, linePattern]);\r\n\r\n    return (\r\n        <line\r\n            id={id}\r\n            x1={firstPointX}\r\n            y1={firstPointY}\r\n            x2={secondPointX}\r\n            y2={secondPointY}\r\n            style={lineStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default LineSVG;\r\n","import styled from 'styled-components';\r\n\r\nexport const Options = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  left: 0;\r\n`;\r\n\r\nexport const OptionItem = styled.svg`\r\n    position: fixed;\r\n    width: 100px;\r\n    height: 30px;\r\n    background-color: ${({theme}) => theme.paper.normal};\r\n    //transform: translateX(-35px);\r\n    transform: ${props => props.left ? 'translateX(-70px)' : 'translateX(0)'};\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    z-index: 1;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.paper.hover};\r\n    }\r\n    &:first-child{\r\n      transform: ${props => props.left ? 'translate(-70px, 0)' : 'translate(0, 0)'};\r\n    }\r\n    &:nth-child(2){\r\n      transform: ${props => props.left ? 'translate(-70px, 30px)' : 'translate(0, 30px)'};\r\n    }\r\n    &:nth-child(3){\r\n      transform: ${props => props.left ? 'translate(-70px, 60px)' : 'translate(0, 60px)'};\r\n    }\r\n    &:nth-child(4){\r\n      transform: ${props => props.left ? 'translate(-70px, 90px)' : 'translate(0, 90px)'};\r\n    }\r\n    & line{\r\n      transform: translate(15px, 15px);\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport {OptionItem, Options} from \"./SelectStyle\";\r\nimport {NormalButton} from \"../ButtonStyles\";\r\n\r\nconst Select = ({options, left=false, children}) => {\r\n    const [optionsVisible, setOptionsVisible] = useState(false);\r\n    const toggleOptions = () => {\r\n        setOptionsVisible(!optionsVisible);\r\n    }\r\n    const opt = options.map(opt => (\r\n        <OptionItem onClick={opt.onSelect} left={left} key={opt.onSelect}>\r\n            <svg>\r\n                {opt.line}\r\n            </svg>\r\n        </OptionItem>\r\n    ));\r\n    return (\r\n        <>\r\n            <NormalButton onClick={toggleOptions}>\r\n                {children}\r\n                {optionsVisible ?\r\n                    <Options>\r\n                        {opt}\r\n                    </Options>\r\n                    : null}\r\n            </NormalButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\nconst ParentInput = styled.input`\r\n  background-color: transparent;\r\n  padding: 0;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 0 3px 0 0;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n`;\r\n\r\nexport const ColorInput = styled(ParentInput)`\r\n  position: relative;\r\n`;\r\n\r\nexport const NumberInput = styled(ParentInput)`\r\n  text-align: center;\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const FileInput = styled(ParentInput)`\r\n  position: absolute;\r\n  top: 40px;\r\n  left: -35px;\r\n  height: 120px;\r\n  width: 111px;\r\n  background-color: ${({theme}) => theme.background.dark};\r\n`;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setColor,\r\n    setFill,\r\n    setFontSize,\r\n    setLineWidth,\r\n    setPattern\r\n} from \"../../../data/actions/styleActions/styleActions\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport Select from \"../../styleComponents/Select/Select\";\r\nimport {ColorInput, NumberInput} from \"../../styleComponents/Inputs\";\r\nimport {ButtonsWrapper, StyleInfo} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBorderStyle, faSlidersH} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StyleSettings = ({color, fontSize, pattern, lineWidth, fill,\r\n                       setFontSize, setColor, setPattern, setLineWidth, setFill}) => {\r\n\r\n    const [, setC] = useState(color);\r\n    const [, setFz] = useState(fontSize);\r\n    const [, setP] = useState(pattern);\r\n    const [, setLw] = useState(lineWidth);\r\n    const [, setF] = useState(fill);\r\n    const [fillFocus, setFillFocus] = useState(false);\r\n    const [colorFocus, setColorFocus] = useState(false);\r\n\r\n    const patternOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'5'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect(\"5\") },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'10'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('10') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'20'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('20') },\r\n    ]\r\n\r\n    const lineWidthOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={1} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(1) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={2} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(2) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={5} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(5) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={10} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(10) },\r\n    ]\r\n    const handlePatternSelect = (pattern) => {\r\n        setP(pattern)\r\n        setPattern(pattern)\r\n    }\r\n    const handleLineWidthSelect = (pattern) => {\r\n        setLw(pattern)\r\n        setLineWidth(pattern)\r\n    }\r\n    const handleColorChange = (e) => {\r\n        setC(e.target.value)\r\n        setColor(e.target.value)\r\n        setColorFocus(false)\r\n    }\r\n    const handleFillChange = (e) => {\r\n        setF(e.target.value)\r\n        setFill(e.target.value)\r\n        setFillFocus(false)\r\n    }\r\n    const handleFontSizeChange = (e) => {\r\n        setFz(e.target.value)\r\n        setFontSize(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            <ColorInput type=\"color\" onChange={handleColorChange} value={color} onClick={() => {setColorFocus(!colorFocus)}}/>\r\n                {colorFocus ? <StyleInfo className={'firstStyle'} onClick={() => {setColorFocus(false)}}>Line Color</StyleInfo> : null}\r\n                {colorFocus ? <StyleInfo className={'secondStyle'} onClick={() => {setColor('transparent'); setColorFocus(false)}}>Transparent</StyleInfo> : null}\r\n            <NumberInput type=\"number\" min={0} max={72} placeholder={'T'} onChange={handleFontSizeChange}/>\r\n            <Select options={patternOptions} left={true}>\r\n                <FontAwesomeIcon icon={faBorderStyle} className={'innerIcon'}/>\r\n            </Select>\r\n            <Select options={lineWidthOptions}>\r\n                <FontAwesomeIcon icon={faSlidersH} className={'innerIcon'}/>\r\n            </Select>\r\n            <ColorInput type=\"color\" onChange={handleFillChange} value={fill} onClick={() => {setFillFocus(!fillFocus)}}/>\r\n                {fillFocus ? <StyleInfo className={'thirdStyle'} onClick={() => {setFillFocus(false)}}>Fill Color</StyleInfo> : null}\r\n                {fillFocus ? <StyleInfo className={'fourthStyle'} onClick={() => {setFill('transparent'); setFillFocus(false)}}>Transparent</StyleInfo> : null}\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedStyleSettings = connect(state => ({\r\n        color: state.style.color,\r\n        fill: state.style.fill,\r\n        fontSize: state.style.fontSize,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        setFontSize,\r\n        setColor,\r\n        setFill,\r\n        setPattern,\r\n        setLineWidth\r\n    }\r\n)(StyleSettings);\r\n\r\nexport default ConnectedStyleSettings;\r\n","import {\r\n    SET_COLOR, SET_FILL,\r\n    SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN\r\n\r\n} from '../../constants';\r\n\r\nexport const setFontSize = size => {\r\n    return{\r\n        type: SET_FONT_SIZE,\r\n        payload: size\r\n    }\r\n};\r\n\r\nexport const setColor = color => {\r\n    return{\r\n        type: SET_COLOR,\r\n        payload: color\r\n    }\r\n};\r\n\r\nexport const setFill = fill => {\r\n    return{\r\n        type: SET_FILL,\r\n        payload: fill\r\n    }\r\n};\r\n\r\nexport const setPattern = pattern => {\r\n    return{\r\n        type: SET_PATTERN,\r\n        payload: pattern\r\n    }\r\n};\r\n\r\nexport const setLineWidth = width => {\r\n    return{\r\n        type: SET_LINE_WIDTH,\r\n        payload: width\r\n    }\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faGripLines,\r\n    faTrash,\r\n    faImage,\r\n    faPencilAlt,\r\n    faDrawPolygon,\r\n    faBezierCurve,\r\n    faSquare,\r\n    faCircle,\r\n    faMousePointer,\r\n    faUnderline\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {NormalButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst DrawingOptions = ({setDrawing, drawing}) => {\r\n    return (\r\n        <ButtonsWrapper>\r\n            <NormalButton className={drawing === 'select' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faMousePointer} onClick={() => setDrawing('select')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'delete' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faTrash} onClick={() => setDrawing('delete')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'line' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faGripLines} onClick={() => setDrawing('line')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'polyLine' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faDrawPolygon} onClick={() => setDrawing('polyLine')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'curve' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faBezierCurve} onClick={() => setDrawing('curve')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'text' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faUnderline} onClick={() => setDrawing('text')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'rect' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faSquare} onClick={() => setDrawing('rect')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'circle' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faCircle} onClick={() => setDrawing('circle')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'pencil' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faPencilAlt} onClick={() => setDrawing('pencil')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'image' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faImage} onClick={() => setDrawing('image')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedDrawingOptions = connect(state => ({\r\n        drawing: state.application.drawing,\r\n    }),\r\n    {\r\n\r\n        setDrawing,\r\n    }\r\n)(DrawingOptions);\r\n\r\nexport default ConnectedDrawingOptions;","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE, CURVE_ADD, CURVE_DELETE, IMAGE_ADD, IMAGE_DELETE,\r\n    LINE_ADD, LINE_DELETE, LOAD_DATA, RECT_ADD, RECT_DELETE, TEXT_ADD, TEXT_DELETE,\r\n} from '../../constants';\r\n\r\nexport const addLine = line => {\r\n    return{\r\n        type: LINE_ADD,\r\n        payload: line\r\n    }\r\n};\r\n\r\nexport const addCircle = circle => {\r\n    return{\r\n        type: CIRCLE_ADD,\r\n        payload: circle\r\n    }\r\n};\r\n\r\nexport const addRect = rect => {\r\n    return{\r\n        type: RECT_ADD,\r\n        payload: rect\r\n    }\r\n};\r\n\r\nexport const addCurve = curve => {\r\n    return{\r\n        type: CURVE_ADD,\r\n        payload: curve\r\n    }\r\n};\r\n\r\nexport const addText = text => {\r\n    return{\r\n        type: TEXT_ADD,\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const addImage = image => {\r\n    return{\r\n        type: IMAGE_ADD,\r\n        payload: image\r\n    }\r\n};\r\n\r\nexport const deleteLine = id => {\r\n    return{\r\n        type: LINE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCircle = id => {\r\n    return{\r\n        type: CIRCLE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteRect = id => {\r\n    return{\r\n        type: RECT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCurve = id => {\r\n    return{\r\n        type: CURVE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteText = id => {\r\n    return{\r\n        type: TEXT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteImage = id => {\r\n    return{\r\n        type: IMAGE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const loadData = data => {\r\n    return{\r\n        type: LOAD_DATA,\r\n        payload: data\r\n    }\r\n};\r\n","import React, {useState} from 'react';\r\nimport {ButtonsWrapper, UploadFileInfo} from \"./NavigationStyles\";\r\nimport {NormalButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faRulerCombined, faSync, faPrint, faDownload, faUpload} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setIndicator,\r\n    toggleOrientation,\r\n    setSheetWidth,\r\n    setSheetHeight, setSheetOffsetY, setSheetOffsetX\r\n} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport { save } from 'save-file';\r\nimport {\r\n    addCircle,\r\n    addCurve,\r\n    addImage,\r\n    addLine,\r\n    addRect,\r\n    addText, loadData\r\n} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {FileInput} from \"../../styleComponents/Inputs\";\r\nimport {faFileCode} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst PageSettings = ({setIndicator, indicator,\r\n                    toggleOrientation, sheetVertical, setSheetWidth, setSheetHeight, offsetX, offsetY, setSheetOffsetY, setSheetOffsetX, sheetWidth, sheetHeight,\r\n                    drawings, loadData\r\n                    }) => {\r\n\r\n    const [upload, setUpload] = useState(false);\r\n\r\n    const handleToggleSheet = () => {\r\n        if (sheetVertical) {\r\n            toggleOrientation()\r\n            setSheetWidth((window.innerHeight-20)/1.4142857);\r\n            setSheetHeight(window.innerHeight-20);\r\n            setSheetOffsetY(10)\r\n            // setSheetOffsetX(Math.min(window.innerWidth*0.2+30, 230))\r\n            setSheetOffsetX((window.innerWidth-(window.innerHeight-20)/1.4142857)/2)\r\n        }\r\n        else{\r\n            toggleOrientation()\r\n            if ((window.innerWidth-20)/1.4142857 > window.innerHeight){\r\n                setSheetOffsetX((window.innerWidth - (window.innerHeight-50)*1.4142857)/2);\r\n                setSheetWidth((window.innerHeight-50)*1.4142857);\r\n                setSheetHeight((window.innerHeight-50));\r\n                setSheetOffsetY(25);\r\n            }\r\n            else{\r\n                setSheetOffsetX(10);\r\n                setSheetWidth((window.innerWidth-20));\r\n                setSheetHeight((window.innerWidth-20)/1.4142857);\r\n                setSheetOffsetY((window.innerHeight - (window.innerWidth-20)/1.4142857)/2);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handlePrintSheet = () => {\r\n        const prtContent = document.getElementById(\"sheet\");\r\n        const WinPrint = window.open('', 'PRINT', `left=${offsetX},top=${offsetY},width=${sheetWidth},height=${sheetHeight},toolbar=0,scrollbars=0,status=0`);\r\n        WinPrint.document.write('<html><head><title>' + document.title  + '</title>');\r\n        WinPrint.document.write('</head><body >');\r\n        WinPrint.document.write(prtContent.innerHTML);\r\n        WinPrint.document.write('</body></html>');\r\n        WinPrint.document.close();\r\n        WinPrint.focus();\r\n        WinPrint.print();\r\n    };\r\n\r\n    const handleSaveFile = () => {\r\n        const date = new Date();\r\n        save(JSON.stringify(drawings), 'WSCad_'+date.toLocaleDateString()+'.json');\r\n    }\r\n\r\n    const handleUploadFile = (event) => {\r\n        const file = event.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.addEventListener('load', function(e) {\r\n            let text = e.target.result;\r\n            const json = JSON.parse(text);\r\n            loadData(json);\r\n        });\r\n        reader.readAsText(file);\r\n        setUpload(false)\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            <NormalButton className={indicator ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faRulerCombined} onClick={() => setIndicator(!indicator)} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton>\r\n                <FontAwesomeIcon icon={faSync} onClick={handleToggleSheet} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton>\r\n                <FontAwesomeIcon icon={faDownload} onClick={handleSaveFile} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <div style={{position: 'relative'}}>\r\n                <NormalButton>\r\n                    <FontAwesomeIcon icon={faUpload} onClick={() => {setUpload(!upload)}} className={'innerIcon'}/>\r\n                </NormalButton>\r\n                {upload && <FileInput onChange={handleUploadFile} type=\"file\" accept=\".json\"/>}\r\n                {upload && <UploadFileInfo><FontAwesomeIcon icon={faFileCode} onClick={() => setIndicator(!indicator)} className={'innerIcon'}/></UploadFileInfo>}\r\n            </div>\r\n            <NormalButton>\r\n                <FontAwesomeIcon icon={faPrint} onClick={handlePrintSheet} className={'innerIcon'}/>\r\n            </NormalButton>\r\n\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedPageSettings = connect(state => ({\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        indicator: state.application.indicator,\r\n        sheetVertical: state.application.sheetVertical,\r\n        drawings: state.elements,\r\n    }),\r\n    {\r\n        setIndicator,\r\n        setSheetOffsetY,\r\n        setSheetOffsetX,\r\n        setSheetWidth,\r\n        setSheetHeight,\r\n        toggleOrientation,\r\n        addCircle,\r\n        addRect,\r\n        addLine,\r\n        addCurve,\r\n        addText,\r\n        addImage,\r\n        loadData\r\n    }\r\n)(PageSettings);\r\n\r\nexport default ConnectedPageSettings;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Dragger, Minimizer, NavigationWrapper} from \"./NavigationStyles\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faDraftingCompass, faCompress, faCog, faPalette} from '@fortawesome/free-solid-svg-icons'\r\nimport AppSettings from \"./AppSettings\";\r\nimport {faFileImage} from \"@fortawesome/free-regular-svg-icons\";\r\nimport StyleSettings from \"./StyleSettings\";\r\nimport DrawingOptions from \"./DrawingOptions\";\r\nimport PageSettings from \"./PageSettings\";\r\n\r\nfunction dragElement(elem) {\r\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n    if (document.getElementById(elem.id + \"Dragger\")) document.getElementById(elem.id + \"Dragger\").onmousedown = dragMouseDown;\r\n    else elem.onmousedown = dragMouseDown;\r\n\r\n    function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        elem.style.opacity = '0.7'\r\n\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n\r\n        document.onmousemove = elementDrag;\r\n    }\r\n\r\n    function elementDrag(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n\r\n        elem.style.top = (elem.offsetTop - pos2) + \"px\";\r\n        elem.style.left = (elem.offsetLeft - pos1) + \"px\";\r\n    }\r\n\r\n    function closeDragElement() {\r\n        elem.style.opacity = '1'\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n    }\r\n}\r\n\r\nconst Navigation = () => {\r\n    const [minimized, setMinimized] = useState([true, true, true, false]);\r\n\r\n    const toggleMinimized = (name) => {\r\n        const menu = document.getElementById(name);\r\n        menu.style.transition = '.5s';\r\n        const stateCopy = [...minimized];\r\n        const index = parseInt(name.slice(-1)) - 1;\r\n        stateCopy[index] = !minimized[index];\r\n        setMinimized(stateCopy);\r\n        menu.classList.toggle('minimized');\r\n        setTimeout(function(){ menu.style.transition = '0s'; }, 500);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const navigation1 = document.getElementById(\"navigation1\");\r\n        const navigation2 = document.getElementById(\"navigation2\");\r\n        const navigation3 = document.getElementById(\"navigation3\");\r\n        const navigation4 = document.getElementById(\"navigation4\");\r\n        dragElement(navigation1);\r\n        dragElement(navigation2);\r\n        dragElement(navigation3);\r\n        dragElement(navigation4);\r\n        navigation1.classList.toggle('minimized');\r\n        navigation2.classList.toggle('minimized');\r\n        navigation3.classList.toggle('minimized');\r\n        navigation4.classList.toggle('minimized');\r\n        setTimeout(() => toggleMinimized(\"navigation1\"), 500);\r\n        setTimeout(() => toggleMinimized(\"navigation2\"), 500);\r\n        setTimeout(() => toggleMinimized(\"navigation3\"), 500);\r\n        setTimeout(() => toggleMinimized(\"navigation4\"), 500);\r\n    },[]);\r\n\r\n    return (\r\n        <nav>\r\n            {/*Drawing*/}\r\n            <NavigationWrapper id={\"navigation1\"} classList={'minimized'}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation1\")}>\r\n                    {minimized[0] ?\r\n                        <FontAwesomeIcon icon={faCompress} />:\r\n                        <FontAwesomeIcon icon={faDraftingCompass} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation1Dragger\"/>\r\n                <DrawingOptions/>\r\n            </NavigationWrapper>\r\n            {/*AppSettings*/}\r\n            <NavigationWrapper id={\"navigation2\"} classList={'minimized'}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation2\")}>\r\n                    {minimized[1] ?\r\n                        <FontAwesomeIcon icon={faCompress} />:\r\n                        <FontAwesomeIcon icon={faCog} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation2Dragger\"/>\r\n                <AppSettings resetMinimized={setMinimized}/>\r\n            </NavigationWrapper>\r\n            {/*PageSettings*/}\r\n            <NavigationWrapper id={\"navigation3\"} classList={'minimized'}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation3\")}>\r\n                    {minimized[2] ?\r\n                        <FontAwesomeIcon icon={faCompress} />:\r\n                        <FontAwesomeIcon icon={faFileImage} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation3Dragger\"/>\r\n                <PageSettings/>\r\n            </NavigationWrapper>\r\n            {/*Styles*/}\r\n            <NavigationWrapper id={\"navigation4\"} classList={'minimized'}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation4\")}>\r\n                    {minimized[3] ?\r\n                        <FontAwesomeIcon icon={faCompress} />:\r\n                        <FontAwesomeIcon icon={faPalette} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation4Dragger\"/>\r\n                <StyleSettings/>\r\n            </NavigationWrapper>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLogo = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 15px;\r\n  opacity: 0.5;\r\n  max-width: 230px;\r\n  font-size: ${props => (props.width)/3 > 73 ? 73 : (props.width)/3}px;\r\n  width: ${props => props.width}px;\r\n  & span:first-child{\r\n    color: ${({theme}) => theme.color.normal};\r\n    font-family: 'Trebuchet MS' , Roboto, sans-serif;\r\n    font-weight: 500;\r\n  }\r\n  & span:nth-child(2){\r\n    color: ${({theme}) => theme.color.dark};\r\n    font-family: 'Brush Script MT', serif;\r\n  }\r\n`;","import React from 'react';\r\nimport {StyledLogo} from \"./LogoStyles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Logo = ({width}) => {\r\n    return (\r\n        <StyledLogo width={width-30}>\r\n            <span>WS</span>\r\n            <span>Cad</span>\r\n        </StyledLogo>\r\n    );\r\n};\r\n\r\nconst ConnectedLogo = connect(state => ({\r\n        width: state.application.sheetOffsetX,\r\n    }),null\r\n)(Logo);\r\n\r\nexport default ConnectedLogo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SheetStyles = styled.div`\r\n  height: ${props => props.sheetHeight}px;\r\n  width: ${props => props.sheetWidth}px;\r\n  background-color: transparent;\r\n  cursor: ${props => props.cursorOverall};\r\n  & svg{\r\n    & *:hover{\r\n      cursor: ${props => props.cursorHover};\r\n      opacity: ${props => props.cursorHover !== 'default' ? 0.6 : 1};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  position: absolute;\r\n  width: ${props => props.sheetWidth}px;\r\n  height: ${props => props.sheetHeight}px;\r\n  background-color: ${({theme}) => theme.paper.normal};\r\n  top: ${props => props.offsetY}px;\r\n  left: ${props => props.offsetX}px;\r\n`;\r\n\r\nexport const BorderIndicatorElementsWrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  font-size: 12px;\r\n  top: ${props => props.offsetY}px;\r\n  left: ${props => props.offsetX}px;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  text-align: center;\r\n  background-color: ${({theme}) => theme.paper.hover};\r\n  color: ${({theme}) => theme.font.dark};\r\n  &:first-child{\r\n    line-height: 12px;\r\n    text-align: right;\r\n    z-index: 1;\r\n  }\r\n  &:nth-child(2){\r\n    line-height: 12px;\r\n    top: ${props => props.offsetY}px;\r\n    text-align: right;\r\n    z-index: 3;\r\n  }\r\n  &:nth-child(3){\r\n    flex-direction: column;\r\n    z-index: 2;\r\n  }\r\n  &:nth-child(4){\r\n    flex-direction: column;\r\n    left: ${props => props.offsetX}px;\r\n    z-index: 4;\r\n  }\r\n`;\r\n\r\nexport const VerticalBorderIndicatorElement = styled.div`\r\n  box-sizing: border-box;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  border-top: 1px solid ${({theme}) => theme.font.dark};\r\n  font-family: sans-serif;\r\n  &:last-child, &:first-child{\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const HorizontalBorderIndicatorElement = styled(VerticalBorderIndicatorElement)`\r\n  border-top: none;\r\n  border-right: 1px solid ${({theme}) => theme.font.dark};\r\n  &:nth-child(21), &:nth-child(29){\r\n    z-index: 9;\r\n    border: none;\r\n  }\r\n  &:first-child{\r\n    border-right: 1px solid ${({theme}) => theme.font.dark};\r\n  }\r\n`;\r\n\r\nexport const IndicatorHorizontal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => props.left}px;\r\n  width: 2px;\r\n  height: 15px;\r\n  background-color: red;\r\n  z-index: 7;\r\n`;\r\n\r\nexport const IndicatorVertical = styled(IndicatorHorizontal)`\r\n  top: ${props => props.top}px;\r\n  left: 0;\r\n  width: 15px;\r\n  height: 2px;\r\n`;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMousePosition = (offsetX,offsetY) => {\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => setPosition({ x: e.clientX-offsetX, y: e.clientY-offsetY });\r\n        window.addEventListener(\"mousemove\", setFromEvent);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", setFromEvent);\r\n        };\r\n    }, [offsetX, offsetY]);\r\n\r\n    return position;\r\n};","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst PolyLine = ({id, color, pattern, lineWidth, addLine, offsetX, offsetY, sheetWidth, sheetHeight, setDrawing, polyLines}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                if(pointsValue.current.length > 1){\r\n                    pointsValue.current.forEach((point, index) => {\r\n                        if (pointsValue.current[index+1]){\r\n                            const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                            line['points'] = [pointsValue.current[index],pointsValue.current[index+1]];\r\n                            line['styles'] = styles;\r\n                            line['id'] = 'line__'+(parseInt(id.slice(6))+index);\r\n                            addLine(line);\r\n                        }\r\n                    });\r\n                }\r\n                setDrawing('');\r\n            }\r\n            if (e.code === 'Escape') return clean();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            setDrawing('');\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, offsetX, pattern, sheetHeight, sheetWidth, offsetY]);\r\n\r\n    const linesToDraw = pointsPosition.map((point, index) => {\r\n        if (pointsValue.current.length === 1 || index === pointsPosition.length - 1) {\r\n            return (\r\n                <LineSVG\r\n                    key={index}\r\n                    firstPointX={point.x}\r\n                    firstPointY={point.y}\r\n                    secondPointX={cursorPosition.x}\r\n                    secondPointY={cursorPosition.y}\r\n                    color={color}\r\n                    linePattern={pattern}\r\n                    lineWidth={lineWidth}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <LineSVG\r\n                key={index}\r\n                firstPointX={point.x}\r\n                firstPointY={point.y}\r\n                secondPointX={pointsPosition[index + 1].x}\r\n                secondPointY={pointsPosition[index + 1].y}\r\n                color={color}\r\n                linePattern={pattern}\r\n                lineWidth={lineWidth}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        pointsValue.current.length > 0\r\n            ?\r\n                linesToDraw\r\n            :\r\n                null\r\n    );\r\n};\r\n\r\nconst ConnectedPolyLine = connect(state => ({\r\n    polyLines: state.elements.polyLines,\r\n    offsetX: state.application.sheetOffsetX,\r\n    offsetY: state.application.sheetOffsetY,\r\n    sheetWidth: state.application.sheetWidth,\r\n    sheetHeight: state.application.sheetHeight,\r\n    color: state.style.color,\r\n    pattern: state.style.pattern,\r\n    lineWidth: state.style.lineWidth,\r\n}),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(PolyLine);\r\n\r\nexport default ConnectedPolyLine;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst Line = ({id, color, pattern, lineWidth, lines, addLine, offsetX, offsetY, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                line['points'] = pointsValue.current;\r\n                line['styles'] = styles;\r\n                line['id'] = id;\r\n                addLine(line);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, lines.length, offsetX, pattern, sheetHeight, sheetWidth, offsetY]);\r\n\r\n    let lineToDraw = null;\r\n    if (drawing === '') lineToDraw = null;\r\n    else if (pointsPosition.length === 2) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {pointsPosition[1].x}\r\n            secondPointY = {pointsPosition[1].y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n    else if (pointsPosition.length === 1) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {cursorPosition.x}\r\n            secondPointY = {cursorPosition.y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n\r\n    return (\r\n        lineToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedLine = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        lines: state.elements.lines,\r\n        color: state.style.color,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(Line);\r\n\r\nexport default ConnectedLine;\r\n","import React from 'react';\r\nimport LineSVG from \"../line\";\r\n\r\nconst PolyLineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                points,\r\n                onClick}) => {\r\n\r\n    const polyLineToDraw = points.map((point, index) => {\r\n        if (points[index+1]){\r\n            return(\r\n                <LineSVG\r\n                    key={index}\r\n                    id={id+'__'+index}\r\n                    firstPointX = {point.x}\r\n                    firstPointY = {point.y}\r\n                    secondPointX = {points[index+1].x}\r\n                    secondPointY = {points[index+1].y}\r\n                    color= {color}\r\n                    linePattern = {linePattern}\r\n                    lineWidth = {lineWidth}\r\n                    onClick = {() => onClick(id+'__'+index)}\r\n                />\r\n            )\r\n        }\r\n        return null;\r\n    })\r\n\r\n    return (\r\n        polyLineToDraw\r\n    )\r\n};\r\n\r\nexport default PolyLineSVG;\r\n","import React from 'react';\r\nimport {SheetStyles} from \"./WrokspaceStyles\";\r\n\r\nconst Sheet = ({sheetWidth, sheetHeight, drawing, children}) => {\r\n    let cursorOverall = 'default';\r\n    let cursorHover = 'default';\r\n    switch (drawing){\r\n        case 'select':\r\n            cursorHover = 'pointer'\r\n            break;\r\n        case 'text':\r\n            cursorOverall = 'text'\r\n            break;\r\n        case 'delete':\r\n            cursorHover = 'not-allowed'\r\n            break;\r\n        case '':\r\n            cursorOverall = 'default'\r\n            break;\r\n        default:\r\n            cursorOverall = 'crosshair'\r\n            cursorHover = 'crosshair'\r\n    }\r\n    return (\r\n        <SheetStyles\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}\r\n            cursorHover={cursorHover}\r\n            cursorOverall={cursorOverall}>\r\n            <svg\r\n                width={sheetWidth}\r\n                height={sheetHeight}\r\n                style={{position: 'fixed'}}>\r\n                {children}\r\n            </svg>\r\n        </SheetStyles>\r\n    );\r\n};\r\n\r\nexport default Sheet;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst CircleSVG = ({id,\r\n                       color= 'red',\r\n                       linePattern = null,\r\n                       lineWidth = 1,\r\n                       centerX = 0,\r\n                       centerY = 0,\r\n                       radius = 1,\r\n                       fillColor = 'transparent',\r\n                       onClick}) => {\r\n\r\n    const circleStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <circle\r\n            id={id}\r\n            cx={centerX}\r\n            cy={centerY}\r\n            r={radius}\r\n            style={circleStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default CircleSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addCircle} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\n\r\nconst Circle = ({id, color, pattern, lineWidth, fillColor, circles, addCircle, offsetX, offsetY, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [circle, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                circle['point'] = pointsValue.current[0];\r\n                circle['radius'] = Math.sqrt(Math.abs((pointsValue.current[0].x-pointsValue.current[1].x)**2)+Math.abs((pointsValue.current[0].y-pointsValue.current[1].y)**2))\r\n                circle['styles'] = styles;\r\n                circle['id'] = id;\r\n                addCircle(circle);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addCircle, color, fillColor, lineWidth, circles.length, offsetX, pattern, sheetHeight, sheetWidth, offsetY]);\r\n\r\n    let circleToDraw = null;\r\n    if (drawing === '') circleToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((pointsPosition[1].x-pointsPosition[0].x)**2)+Math.abs((pointsPosition[1].y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((cursorPosition.x-pointsPosition[0].x)**2)+Math.abs((cursorPosition.y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        circleToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedCircle = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        circles: state.elements.circles,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCircle,\r\n        setDrawing,\r\n    }\r\n)(Circle);\r\n\r\nexport default ConnectedCircle;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst RectSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                positionX = 0,\r\n                positionY = 0,\r\n                radiusX= 0,\r\n                radiusY = 0,\r\n                width= 1,\r\n                height= 1,\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const rectStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <rect\r\n            id={id}\r\n            x={positionX}\r\n            y={positionY}\r\n            rx={radiusX}\r\n            ry={radiusY}\r\n            width={width}\r\n            height={height}\r\n            style={rectStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default RectSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addRect} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\n\r\nconst Rect = ({id, color, pattern, lineWidth, fillColor, rects, addRect, offsetX, offsetY, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [rect, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                rect['point'] = {x: Math.min(pointsValue.current[0].x,pointsValue.current[1].x), y:Math.min(pointsValue.current[0].y,pointsValue.current[1].y)};\r\n                rect['width'] = Math.abs(pointsValue.current[0].x - pointsValue.current[1].x)\r\n                rect['height'] = Math.abs(pointsValue.current[0].y - pointsValue.current[1].y)\r\n                rect['styles'] = styles;\r\n                rect['id'] = id;\r\n                addRect(rect);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addRect, color, fillColor, lineWidth, rects.length, offsetX, pattern, sheetHeight, sheetWidth, offsetY]);\r\n\r\n    let rectToDraw = null;\r\n    if (drawing === '') rectToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x,pointsPosition[1].x)}\r\n                positionY = {Math.min(pointsPosition[0].y,pointsPosition[1].y)}\r\n                width = {Math.abs(pointsPosition[0].x - pointsPosition[1].x)}\r\n                height = {Math.abs(pointsPosition[0].y - pointsPosition[1].y)}\r\n                color = {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x, cursorPosition.x)}\r\n                positionY = {Math.min(pointsPosition[0].y, cursorPosition.y)}\r\n                width = {Math.abs(cursorPosition.x - pointsPosition[0].x)}\r\n                height = {Math.abs(cursorPosition.y - pointsPosition[0].y)}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        rectToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedRect = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        rects: state.elements.rects,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addRect,\r\n        setDrawing,\r\n    }\r\n)(Rect);\r\n\r\nexport default ConnectedRect;","import styled from \"styled-components\";\r\nimport {SheetStyles} from \"../../Elements/Workspace/WrokspaceStyles\";\r\n\r\nexport const StyledCurve = styled(SheetStyles)`\r\n    height: ${props => props.sheetHeight}px;\r\n    width: ${props => props.sheetWidth}px;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    transform: translateY(${props => (props.sheetHeight)*(-1)}px);\r\n    background-color: transparent;\r\n    \r\n    & #container{\r\n      width: 100%;\r\n      height: 100%;\r\n      background: transparent;\r\n      margin: 0;\r\n      text-align: center;\r\n    }\r\n\r\n    \r\n    #code{\r\n      display: block;\r\n      width: auto;\r\n      font: bold 3vw monospace;\r\n      margin: 0;\r\n      padding: 0;\r\n      color: #1E1935;\r\n      background: rgba(221,221,221,0.35);\r\n    }\r\n    \r\n    &::selection{\r\n      background: #EF2D56;\r\n      color: transparent;\r\n    }\r\n\r\n    & svg, g{\r\n      width: ${props => props.sheetWidth}px;\r\n      height: ${props => props.sheetHeight}px;\r\n    }\r\n    \r\n    & path{\r\n      stroke-width: 8;\r\n      stroke: #1E1935;\r\n      stroke-linecap: round;\r\n      fill: none;\r\n    }\r\n\r\n    \r\n    & path.fill{\r\n      fill: #1E1935;\r\n    }\r\n\r\n    \r\n    & circle{\r\n      stroke-width: 2;\r\n      stroke: #EF2D56;\r\n      fill: #fff;\r\n    }\r\n\r\n    \r\n    & circle:hover{\r\n      fill: #EF2D56;\r\n      cursor: move;\r\n    }\r\n\r\n    \r\n    & line{\r\n      stroke-width: 1;\r\n      stroke: #999;\r\n      stroke-linecap: round;\r\n      stroke-dasharray: 5,3;\r\n    }\r\n`;","import React, {useMemo} from 'react';\r\n\r\nconst CurveSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                d=\"M100,250 C100,100 400,100 400,250\",\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const curveStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <path\r\n            id={id}\r\n            style={curveStyle}\r\n            d={d}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CurveSVG;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport {StyledCurve} from \"./CurveStyles\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCurve} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\n\r\nconst Curve = ({id, color, pattern, lineWidth, fillColor, curves, addCurve, sheetWidth, sheetHeight, setDrawing}) => {\r\n    const curveD = useRef('M100,250 C100,100 400,100 400,250');\r\n\r\n    useEffect(() => {\r\n        let container, svg, cType, code, point = {}, line = {}, fill = false, drag = null, dPoint;\r\n\r\n        function Init() {\r\n            const c = svg.getElementsByTagName(\"circle\");\r\n            for (let i = 0; i < c.length; i++) {\r\n                point[c[i].getAttributeNS(null,\"id\")] = {\r\n                    x: parseInt(c[i].getAttributeNS(null,\"cx\"),10),\r\n                    y: parseInt(c[i].getAttributeNS(null,\"cy\"),10)\r\n                };\r\n            }\r\n\r\n            line.l1 = svg.getElementById(\"l1\");\r\n            line.l2 = svg.getElementById(\"l2\");\r\n            line.curve = svg.getElementById(\"curve\");\r\n            code = document.getElementById(\"code\");\r\n            svg.onmousedown = svg.onmousemove = svg.onmouseup = Drag;\r\n            svg.ontouchstart = svg.ontouchmove = svg.ontouchend = Drag;\r\n            DrawSVG();\r\n        }\r\n\r\n        function DrawSVG() {\r\n            line.l1.setAttributeNS(null, \"x1\", point.p1.x);\r\n            line.l1.setAttributeNS(null, \"y1\", point.p1.y);\r\n            line.l1.setAttributeNS(null, \"x2\", point.c1.x);\r\n            line.l1.setAttributeNS(null, \"y2\", point.c1.y);\r\n\r\n            const c2 = (point.c2 ? \"c2\" : \"c1\");\r\n            line.l2.setAttributeNS(null, \"x1\", point.p2.x);\r\n            line.l2.setAttributeNS(null, \"y1\", point.p2.y);\r\n            line.l2.setAttributeNS(null, \"x2\", point[c2].x);\r\n            line.l2.setAttributeNS(null, \"y2\", point[c2].y);\r\n\r\n            const d =\r\n                \"M\"+point.p1.x+\",\"+point.p1.y+\" \"+cType+\r\n                point.c1.x+\",\"+point.c1.y+\" \"+\r\n                (point.c2 ? point.c2.x+\",\"+point.c2.y+\" \" : \"\")+\r\n                point.p2.x+\",\"+point.p2.y+\r\n                (fill ? \" Z\" : \"\");\r\n            line.curve.setAttributeNS(null, \"d\", d);\r\n            curveD.current = d;\r\n\r\n            if (code) {\r\n                code.textContent = '<path d=\"'+d+'\" />';\r\n            }\r\n        }\r\n\r\n        function Drag(e) {\r\n\r\n            e.stopPropagation();\r\n            let t = e.target, id = t.id, et = e.type, m = MousePos(e);\r\n\r\n            if (!drag && et === \"mousedown\" && id === \"curve\") {\r\n                fill = !fill;\r\n                t.setAttributeNS(null, \"class\", (fill ? \"fill\" : \"\"));\r\n                DrawSVG();\r\n            }\r\n\r\n            if (!drag && typeof(point[id]) != \"undefined\" && (et === \"mousedown\" || et === \"touchstart\")) {\r\n                drag = t;\r\n                dPoint = m;\r\n            }\r\n\r\n            if (drag && (et === \"mousemove\" || et === \"touchmove\")) {\r\n                id = drag.id;\r\n                point[id].x += m.x - dPoint.x;\r\n                point[id].y += m.y - dPoint.y;\r\n                dPoint = m;\r\n                drag.setAttributeNS(null, \"cx\", point[id].x);\r\n                drag.setAttributeNS(null, \"cy\", point[id].y);\r\n                DrawSVG();\r\n            }\r\n\r\n            if (drag && (et === \"mouseup\" || et === \"touchend\")) {\r\n                drag = null;\r\n            }\r\n\r\n        }\r\n\r\n        function MousePos(event) {\r\n            return {\r\n                x: Math.max(0, event.pageX),\r\n                y: Math.max(0, event.pageY)\r\n            }\r\n        }\r\n\r\n        function handleCurve(){\r\n            container = document.getElementById(\"container\");\r\n            if (container) {\r\n                cType = container.className;\r\n                svg = document.getElementById(\"svg\");\r\n                Init();\r\n            }\r\n        }\r\n\r\n        const stopDrawing = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                window.removeEventListener(\"mousemove\", handleCurve);\r\n                const [curve, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                curve['d'] = curveD.current;\r\n                curve['styles'] = styles;\r\n                curve['id'] = id;\r\n                addCurve(curve);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return finish();\r\n        }\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n        document.addEventListener('mousemove', handleCurve);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            document.removeEventListener(\"mousemove\", handleCurve);\r\n        };\r\n    }, [id, setDrawing, addCurve, color, fillColor, lineWidth, curves.length, pattern]);\r\n\r\n    return (\r\n        <StyledCurve\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}>\r\n            <div id=\"container\" className=\"C\">\r\n                <svg id=\"svg\">\r\n                    <CurveSVG id=\"curve\"\r\n                              color= {color}\r\n                              linePattern = {pattern}\r\n                              lineWidth = {lineWidth}\r\n                              fillColor = {fillColor}\r\n                              d=\"M100,250 C100,100 400,100 400,250\"/>\r\n                    <g id=\"main\">\r\n                        <circle id=\"p1\" cx=\"100\" cy=\"250\" r=\"16\"/>\r\n                        <circle id=\"p2\" cx=\"400\" cy=\"250\" r=\"16\"/>\r\n\r\n                        <circle id=\"c1\" cx=\"100\" cy=\"100\" r=\"8\"/>\r\n                        <circle id=\"c2\" cx=\"400\" cy=\"100\" r=\"8\"/>\r\n\r\n                        <line id=\"l1\" x1=\"100\" y1=\"250\" x2=\"100\" y2=\"100\"/>\r\n                        <line id=\"l2\" x1=\"400\" y1=\"250\" x2=\"400\" y2=\"100\"/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </StyledCurve>\r\n    )\r\n};\r\n\r\nconst ConnectedCurve = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        curves: state.elements.curves,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCurve,\r\n        setDrawing,\r\n    }\r\n)(Curve);\r\n\r\nexport default ConnectedCurve;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst TextSVG = ({id,\r\n                color= 'red',\r\n                lineWidth = 2,\r\n                pointX = 0,\r\n                fontSize = 13,\r\n                pointY = 0,\r\n                font = 'Courier New',\r\n                text = 'text',\r\n                writing = false,\r\n                onClick}) => {\r\n\r\n    let fontWeight = '';\r\n    switch (lineWidth) {\r\n        case 1: fontWeight = 'italic'; break;\r\n        case 2: fontWeight = 'lighter'; break;\r\n        case 10: fontWeight = 'bold'; break;\r\n        default: fontWeight = 'normal'; break;\r\n    }\r\n\r\n    const fontStyle = useMemo(() => ({\r\n        font: fontWeight + ' ' + fontSize + 'px ' + font,\r\n        fill: color\r\n    }), [color, fontWeight, font, fontSize]);\r\n\r\n    return (\r\n        <text\r\n            id={id}\r\n            x={pointX}\r\n            y={pointY}\r\n            style={fontStyle}\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </text>\r\n    )\r\n};\r\n\r\nexport default TextSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addText} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\n\r\nconst Text = ({id, color, fontSize, lineWidth, texts, addText, offsetX, offsetY, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const pointsValue = useRef([]);\r\n    const textToWrite = useRef('');\r\n    const [, setTextState] = useState('');\r\n    const [pointPosition, setPointPosition] = useState([]);\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointPosition([pointsValue.current[0]])\r\n                const e = {};\r\n                e.code = 'Escape'\r\n                handleKeyInput(e);\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointPosition([...pointsValue.current])\r\n        }\r\n        const handleKeyInput = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", handleKeyInput);\r\n                const [text, styles] = [{}, {color, fontSize, lineWidth}];\r\n                text['point'] = pointsValue.current;\r\n                text['styles'] = styles;\r\n                text['id'] = id;\r\n                text['text'] = textToWrite.current;\r\n                addText(text);\r\n                setDrawing('');\r\n            }\r\n            const setText = (e) => {\r\n                let text = '';\r\n                if (e.code === 'Backspace') text = textToWrite.current.slice(0,-1);\r\n                else text =  textToWrite.current + e.key;\r\n                textToWrite.current = text;\r\n                setTextState(text);\r\n            }\r\n            if ((e && e.code === 'Escape') || e.code === 'Enter') return finish();\r\n            else if (e && e.code) return setText(e);\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", handleKeyInput);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", handleKeyInput);\r\n        };\r\n    }, [id, setDrawing, addText, color, lineWidth, fontSize, texts.length, offsetX, sheetHeight, sheetWidth, offsetY]);\r\n\r\n    let textToDraw = null;\r\n    if (drawing === '') textToDraw = null;\r\n    else if (pointPosition.length === 1) textToDraw = (\r\n        <TextSVG\r\n            pointX = {pointPosition[0].x}\r\n            pointY = {pointPosition[0].y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n    else if (pointPosition.length === 0) textToDraw = (\r\n        <TextSVG\r\n            pointX = {cursorPosition.x}\r\n            pointY = {cursorPosition.y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n\r\n    return (\r\n        textToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedText = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        texts: state.elements.texts,\r\n        color: state.style.color,\r\n        lineWidth: state.style.lineWidth,\r\n        fontSize: state.style.fontSize,\r\n    }),\r\n    {\r\n        addText,\r\n        setDrawing,\r\n    }\r\n)(Text);\r\n\r\nexport default ConnectedText;\r\n","import {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst Pencil = ({color, lineWidth, offsetX, offsetY, sheetWidth, sheetHeight, setDrawing}) => {\r\n    let canvas = document.getElementById(\"canvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let coord = { x: 0, y: 0 };\r\n\r\n    useEffect(() => {\r\n        resize();\r\n    },[])\r\n\r\n        function reposition(event) {\r\n            coord.x = event.clientX - canvas.offsetLeft - offsetX;\r\n            coord.y = event.clientY - canvas.offsetTop + sheetHeight - offsetY;\r\n        }\r\n        function start(event) {\r\n            document.addEventListener(\"mousemove\", draw);\r\n            reposition(event);\r\n        }\r\n        function stop() {\r\n            document.removeEventListener(\"mousemove\", draw);\r\n        }\r\n        function draw(event) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            ctx.moveTo(coord.x, coord.y);\r\n            reposition(event);\r\n            ctx.lineTo(coord.x, coord.y);\r\n            ctx.stroke();\r\n        }\r\n        const finishDrawing = (e) => {\r\n            const finish = () => {\r\n                document.removeEventListener(\"mousedown\", start);\r\n                document.removeEventListener(\"mouseup\", stop);\r\n                window.removeEventListener(\"keydown\", finishDrawing);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return finish();\r\n        }\r\n        function resize() {\r\n            ctx.canvas.width = sheetWidth;\r\n            ctx.canvas.height = sheetHeight;\r\n        }\r\n        document.addEventListener(\"mousedown\", start);\r\n        document.addEventListener(\"mouseup\", stop);\r\n        window.addEventListener(\"keydown\", finishDrawing);\r\n\r\n    return null\r\n};\r\n\r\nconst ConnectedPencil = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        lines: state.elements.lines,\r\n        color: state.style.color,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(Pencil);\r\n\r\nexport default ConnectedPencil;","import styled from \"styled-components\";\r\n\r\nexport const Canvas = styled.canvas`\r\n  height: ${props => props.sheetHeight}px;\r\n  width: ${props => props.sheetWidth}px;\r\n  transform: translateY(${props => props.sheetHeight*(-1)}px);\r\n  background-color: transparent;\r\n  z-index: ${props => props.drawing === 'pencil' ? 1 : -1};\r\n  cursor: url(\"https://cdn.glitch.com/3f14db12-a1c8-462c-b3ae-ad21206e72ee%2Fpointer.png?v=1622831727631\"), auto;`;","import React from 'react';\r\n\r\nconst ImageSVG = ({id,\r\n                positionX = 0,\r\n                positionY = 0,\r\n                width= 209,\r\n                height= 88,\r\n                href= 'https://cdn.glitch.com/2cef3d17-5f0d-45a1-97f2-e93ce8b3a199%2FWSCAD.png?v=1622829749664',\r\n                onClick}) => {\r\n\r\n    return (\r\n        <image\r\n            id={id}\r\n            href={href}\r\n            x={positionX}\r\n            y={positionY}\r\n            width={width}\r\n            height={height}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ImageSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addImage} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport ImageSVG from \"../../sheetElements/image/ImageSVG\";\r\n\r\nconst Image = ({id, offsetX, offsetY, sheetWidth, sheetHeight, drawing, setDrawing, addImage}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                if (document.querySelector('input.form__field').value){\r\n                    const image = {};\r\n                    image['point'] = {x: Math.min(pointsValue.current[0].x,pointsValue.current[1].x), y:Math.min(pointsValue.current[0].y,pointsValue.current[1].y)};\r\n                    image['width'] = Math.abs(pointsValue.current[0].x - pointsValue.current[1].x)\r\n                    image['height'] = Math.abs(pointsValue.current[0].y - pointsValue.current[1].y)\r\n                    image['id'] = id;\r\n                    image['href'] = document.querySelector('input.form__field').value;\r\n                    addImage(image);\r\n                }\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            else if (!e) return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [setDrawing, offsetX, sheetHeight, sheetWidth, offsetY, id, addImage]);\r\n\r\n    let imageToDraw = null;\r\n    if (drawing === '') imageToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        imageToDraw = (\r\n            <ImageSVG\r\n                positionX = {Math.min(pointsPosition[0].x,pointsPosition[1].x)}\r\n                positionY = {Math.min(pointsPosition[0].y,pointsPosition[1].y)}\r\n                width = {Math.abs(pointsPosition[0].x - pointsPosition[1].x)}\r\n                height = {Math.abs(pointsPosition[0].y - pointsPosition[1].y)}\r\n                href={document.querySelector('input.form__field').value}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        imageToDraw = (\r\n            <ImageSVG\r\n                positionX = {Math.min(pointsPosition[0].x, cursorPosition.x)}\r\n                positionY = {Math.min(pointsPosition[0].y, cursorPosition.y)}\r\n                width = {Math.abs(cursorPosition.x - pointsPosition[0].x)}\r\n                height = {Math.abs(cursorPosition.y - pointsPosition[0].y)}\r\n                href={document.querySelector('input.form__field').value}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        imageToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedImage = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n    }),\r\n    {\r\n        setDrawing,\r\n        addImage,\r\n    }\r\n)(Image);\r\n\r\nexport default ConnectedImage;","import styled from \"styled-components\";\r\n\r\nexport const ImageInputStyled = styled.div`\r\n    position: relative;\r\n    padding: 15px 0 0;\r\n    margin-top: ${props => props.offset}px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    width: ${props => props.offset*2.5-20}px;\r\n    font-family: sans-serif;\r\n    z-index: 20;\r\n\r\n  & .form__field {\r\n    width: 100%;\r\n    border: 0;\r\n    border-bottom: 2px solid ${({theme}) => theme.font.normal};\r\n    outline: 0;\r\n    font-size: 1.3rem;\r\n    color: #fff;\r\n    padding: 7px 0;\r\n    background: transparent;\r\n    transition: border-color 0.2s;\r\n    border-image: linear-gradient(to right, ${({theme}) => theme.border.normalHover},${({theme}) => theme.border.normal});\r\n    border-image-slice: 1;\r\n\r\n    &::placeholder {\r\n      color: transparent;\r\n    }\r\n\r\n    &:placeholder-shown ~ .form__label {\r\n      font-size: 1.3rem;\r\n      cursor: text;\r\n      top: 20px;\r\n    }\r\n  }\r\n\r\n  & .form__label {\r\n    position: absolute;\r\n    top: 0;\r\n    display: block;\r\n    transition: 0.2s;\r\n    font-size: 1rem;\r\n    color: ${({theme}) => theme.border.normalHover};\r\n  }\r\n\r\n  & .form__field:focus {\r\n    ~ .form__label {\r\n      position: absolute;\r\n      top: 0;\r\n      display: block;\r\n      transition: 0.2s;\r\n      font-size: 1rem;\r\n      color: ${({theme}) => theme.border.normalHover};\r\n      font-weight:700;\r\n    }\r\n    padding-bottom: 6px;\r\n    font-weight: 700;\r\n    border-width: 3px;\r\n  }\r\n\r\n  & .form__field{\r\n    &:required,&:invalid { box-shadow:none; }\r\n  }\r\n`;","import React from 'react';\r\nimport {ImageInputStyled} from \"./ImageInputStyles\";\r\n\r\nconst ImageInput = ({offsetX}) => {\r\n    return (\r\n        <ImageInputStyled offset={offsetX*0.4} className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" placeholder=\"Img URL\"/>\r\n            <label htmlFor=\"name\" className=\"form__label\">Img URL</label>\r\n        </ImageInputStyled>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n","import React from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    BorderIndicatorElementsWrapper,\r\n    HorizontalBorderIndicatorElement, IndicatorHorizontal, IndicatorVertical,\r\n    VerticalBorderIndicatorElement\r\n} from \"./WrokspaceStyles\";\r\n\r\nconst BorderIndicator = ({sheetWidth, sheetHeight, offsetX, offsetY}) => {\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const smallerArrayNumbers = [], largerArrayNumbers = [];\r\n    let verticalBorderIndicators = [], horizontalBorderIndicators = [];\r\n\r\n    let indicatorTop = 0;\r\n    let indicatorleft = 0;\r\n    if (cursorPosition.y > sheetHeight) indicatorTop = sheetHeight -2;\r\n    else if (cursorPosition.y < 0) indicatorTop = 0;\r\n    else indicatorTop = cursorPosition.y;\r\n    if (cursorPosition.x > sheetWidth) indicatorleft = sheetWidth - 2;\r\n    else if (cursorPosition.x < 0) indicatorleft = 0;\r\n    else indicatorleft = cursorPosition.x;\r\n\r\n    for(let i = 1; i <30; i++){\r\n        if (i< 22) smallerArrayNumbers.push(i);\r\n        largerArrayNumbers.push(i);\r\n    }\r\n\r\n    // smaller vertical larger horizontal\r\n    if (sheetWidth < sheetHeight) {\r\n        verticalBorderIndicators = largerArrayNumbers.map(number => (\r\n            <VerticalBorderIndicatorElement key={number} width={15} height={sheetHeight/21}>\r\n                {number}\r\n            </VerticalBorderIndicatorElement>\r\n        ))\r\n        horizontalBorderIndicators = smallerArrayNumbers.map(number => (\r\n            <HorizontalBorderIndicatorElement key={number} width={sheetWidth/21} height={15}>\r\n                {number}\r\n            </HorizontalBorderIndicatorElement>\r\n        ))\r\n    }\r\n    // smaller horizontal larger vertical\r\n    else{\r\n        verticalBorderIndicators = smallerArrayNumbers.map(number => (\r\n            <VerticalBorderIndicatorElement key={number} width={15} height={sheetHeight/21}>\r\n                {number}\r\n            </VerticalBorderIndicatorElement>\r\n        ))\r\n        horizontalBorderIndicators = largerArrayNumbers.map(number => (\r\n            <HorizontalBorderIndicatorElement key={number} width={sheetWidth/21} height={15}>\r\n                {number}\r\n            </HorizontalBorderIndicatorElement>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BorderIndicatorElementsWrapper width={sheetWidth} height={15} offsetX={offsetX} offsetY={offsetY}>\r\n                {horizontalBorderIndicators}\r\n                <IndicatorHorizontal left={indicatorleft}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={sheetWidth} height={15} offsetX={offsetX} offsetY={offsetY+sheetHeight-15}>\r\n                {horizontalBorderIndicators}\r\n                <IndicatorHorizontal left={indicatorleft}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={15} height={sheetHeight} offsetX={offsetX} offsetY={offsetY}>\r\n                {verticalBorderIndicators}\r\n                <IndicatorVertical top={indicatorTop}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={15} height={sheetHeight} offsetX={offsetX+sheetWidth-15} offsetY={offsetY}>\r\n                {verticalBorderIndicators}\r\n                <IndicatorVertical top={indicatorTop}/>\r\n            </BorderIndicatorElementsWrapper>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst ConnectedBorderIndicator = connect(state => ({\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n    })\r\n)(BorderIndicator);\r\n\r\nexport default ConnectedBorderIndicator;\r\n","import React from 'react';\r\nimport {WorkspaceWrapper} from \"./WrokspaceStyles\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport PolyLine from \"../../drawElements/polyLine\";\r\nimport Line from \"../../drawElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport PolyLineSVG from \"../../sheetElements/polyLine\";\r\nimport Sheet from \"./Sheet\";\r\nimport {\r\n    deleteCircle,\r\n    deleteCurve, deleteImage,\r\n    deleteLine,\r\n    deleteRect,\r\n    deleteText\r\n} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\nimport Circle from \"../../drawElements/circle/Circle\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\nimport Rect from \"../../drawElements/rect/Rect\";\r\nimport Curve from \"../../drawElements/curve/Curve\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\nimport Text from \"../../drawElements/text\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\nimport Pencil from \"../../drawElements/pencil\";\r\nimport {Canvas} from \"../../drawElements/pencil/PencilStyles\";\r\nimport ImageSVG from \"../../sheetElements/image/ImageSVG\";\r\nimport Image from \"../../drawElements/image\";\r\nimport ImageInput from \"../../drawElements/image/ImageInput\";\r\nimport BorderIndicator from \"./BorderIndicator\";\r\n\r\nconst Workspace = ({drawing, drawings, indicator,\r\n                       offsetX, offsetY, sheetWidth, sheetHeight,\r\n                       deleteImage, deleteLine, deleteCircle, deleteText, deleteRect, deleteCurve}) => {\r\n    const lines = []\r\n    const polyLines = []\r\n    const circles = []\r\n    const rects = []\r\n    const curves = []\r\n    const texts = []\r\n    const images = []\r\n\r\n    const handleOnClick = (id, type) => {\r\n        const onSelect = (id) => {\r\n            console.log('select '+id)\r\n        }\r\n        const onDelete = (id, type) => {\r\n            switch (type) {\r\n                case \"circle\": deleteCircle(id); break;\r\n                case \"rect\": deleteRect(id); break;\r\n                case \"image\": deleteImage(id); break;\r\n                case \"curve\": deleteCurve(id); break;\r\n                case \"text\": deleteText(id); break;\r\n                default: deleteLine(id); break;\r\n            }\r\n        }\r\n        if (drawing === 'select') return onSelect(id);\r\n        else if (drawing === 'delete') return onDelete(id,type);\r\n        else return () => {}\r\n    }\r\n\r\n    Object.entries(drawings).forEach(element => {\r\n        if (element[0] === 'lines'){\r\n            return element[1].forEach((line) => (\r\n                lines.push(<LineSVG\r\n                    id={line.id}\r\n                    key={line.points[0].x*line.points[1].y}\r\n                    color = {line.styles.color}\r\n                    linePattern = {line.styles.pattern}\r\n                    lineWidth = {line.styles.lineWidth}\r\n                    firstPointX = {line.points[0].x}\r\n                    firstPointY = {line.points[0].y}\r\n                    secondPointX = {line.points[1].x}\r\n                    secondPointY = {line.points[1].y}\r\n                    onClick = {() => handleOnClick(line.id, 'line')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'circles'){\r\n            return element[1].forEach((circle) => (\r\n                circles.push(<CircleSVG\r\n                    id={circle.id}\r\n                    key={circle.point.x*circle.point.y}\r\n                    color = {circle.styles.color}\r\n                    fillColor = {circle.styles.fillColor}\r\n                    linePattern = {circle.styles.pattern}\r\n                    lineWidth = {circle.styles.lineWidth}\r\n                    centerX = {circle.point.x}\r\n                    centerY = {circle.point.y}\r\n                    radius = {circle.radius}\r\n                    onClick = {() => handleOnClick(circle.id, 'circle')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'rects'){\r\n            return element[1].forEach((rect) => (\r\n                rects.push(<RectSVG\r\n                    id={rect.id}\r\n                    key={rect.point.x*rect.point.y}\r\n                    color = {rect.styles.color}\r\n                    fillColor = {rect.styles.fillColor}\r\n                    linePattern = {rect.styles.pattern}\r\n                    lineWidth = {rect.styles.lineWidth}\r\n                    positionX = {rect.point.x}\r\n                    positionY = {rect.point.y}\r\n                    width ={rect.width}\r\n                    height ={rect.height}\r\n                    onClick = {() => handleOnClick(rect.id, 'rect')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'images'){\r\n            return element[1].forEach((image) => (\r\n                images.push(<ImageSVG\r\n                    id={image.id}\r\n                    key={image.point.x*image.point.y}\r\n                    positionX = {image.point.x}\r\n                    positionY = {image.point.y}\r\n                    width ={image.width}\r\n                    height ={image.height}\r\n                    href ={image.href}\r\n                    onClick = {() => handleOnClick(image.id, 'image')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'polyLines'){\r\n            return element[1].forEach((polyLine,index) => {\r\n                polyLines.push(<PolyLineSVG\r\n                    id={'polyLine__'+index}\r\n                    key={polyLine.points[0].x*polyLine.points[1].y}\r\n                    color = {polyLine.styles.color}\r\n                    linePattern = {polyLine.styles.pattern}\r\n                    lineWidth = {polyLine.styles.lineWidth}\r\n                    points={polyLine.points}\r\n                    onClick = {(id) => handleOnClick(id, 'line')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'curves'){\r\n            return element[1].forEach((curve) => {\r\n                curves.push(<CurveSVG\r\n                    id={curve.id}\r\n                    key={curve.d}\r\n                    color = {curve.styles.color}\r\n                    fillColor = {curve.styles.fillColor}\r\n                    linePattern = {curve.styles.pattern}\r\n                    lineWidth = {curve.styles.lineWidth}\r\n                    d={curve.d}\r\n                    onClick = {() => handleOnClick(curve.id, 'curve')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'texts'){\r\n            return element[1].forEach((text) => {\r\n                texts.push(<TextSVG\r\n                    id={text.id}\r\n                    key={text.text}\r\n                    color = {text.styles.color}\r\n                    fontSize = {text.styles.fontSize}\r\n                    lineWidth = {text.styles.lineWidth}\r\n                    pointX = {text.point[0].x}\r\n                    pointY = {text.point[0].y}\r\n                    text={text.text}\r\n                    onClick = {() => handleOnClick(text.id, 'text')}\r\n                />)\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <div id='sheet'>\r\n            <WorkspaceWrapper offsetX={offsetX} offsetY={offsetY} sheetWidth={sheetWidth} sheetHeight={sheetHeight}>\r\n                <TransformWrapper pan={(drawing === 'curve' || drawing === 'pencil') ? {disabled: true} : {disabled: false}}>\r\n                    <TransformComponent>\r\n                        <Sheet sheetWidth={sheetWidth} sheetHeight={sheetHeight} drawing={drawing}>\r\n                            {images}\r\n                            {rects}\r\n                            {circles}\r\n                            {texts}\r\n                            {curves}\r\n                            {polyLines}\r\n                            {lines}\r\n                            {drawing === 'image' && <Image id={'image__'+drawings.images.length}/>}\r\n                            {drawing === 'rect' && <Rect id={'rect__'+drawings.rects.length}/>}\r\n                            {drawing === 'circle' && <Circle id={'circle__'+drawings.circles.length}/>}\r\n                            {drawing === 'text' && <Text id={'text__'+drawings.texts.length}/>}\r\n                            {drawing === 'polyLine' && <PolyLine id={'line__'+drawings.lines.length}/>}\r\n                            {drawing === 'line' && <Line id={'line__'+drawings.lines.length}/>}\r\n                        </Sheet>\r\n                        {drawing === 'curve' && <Curve id={'curve__'+drawings.curves.length}/>}\r\n                        {drawing === 'pencil' && <Pencil/>}\r\n                        <Canvas id=\"canvas\" sheetHeight={sheetHeight} sheetWidth={sheetWidth} drawing={drawing}/>\r\n                    </TransformComponent>\r\n                </TransformWrapper>\r\n            </WorkspaceWrapper>\r\n            {drawing === 'image' && <ImageInput offsetX={offsetX} offsetY={offsetY}/>}\r\n        </div>\r\n        {indicator && <BorderIndicator/>}\r\n    </>\r\n    );\r\n};\r\n\r\nconst ConnectedWorkspace = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        drawings: state.elements,\r\n        offsetX: state.application.sheetOffsetX,\r\n        offsetY: state.application.sheetOffsetY,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        indicator: state.application.indicator,\r\n    }), {\r\n        deleteLine,\r\n        deleteImage,\r\n        deleteText,\r\n        deleteCircle,\r\n        deleteRect,\r\n        deleteCurve,\r\n    }\r\n)(Workspace);\r\n\r\nexport default ConnectedWorkspace;\r\n","import './App.css';\r\nimport DarkThemeProvider from \"./components/wrappers/darkThemeProvider\";\r\nimport {Provider} from 'react-redux'\r\nimport store from './data/store'\r\nimport {Wrapper} from \"./components/styleComponents/Layout\";\r\nimport Navigation from \"./components/Elements/Navigation\";\r\nimport Logo from \"./components/Elements/Logo\";\r\nimport Workspace from \"./components/Elements/Workspace\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store()}>\r\n          <DarkThemeProvider>\r\n              <Wrapper>\r\n                  <Logo/>\r\n                  <Navigation/>\r\n                  <Workspace/>\r\n              </Wrapper>\r\n          </DarkThemeProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const store = createStore(rootReducer, preloadedState);\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}