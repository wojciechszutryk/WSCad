{"version":3,"sources":["theme/themes.js","components/wrappers/darkThemeProvider.js","data/constants.js","data/reducers/drawingReducer.js","data/reducers/applicationReducer.js","data/reducers/styleReducer.js","data/reducers/index.js","components/styleComponents/Layout.js","components/Elements/Navigation/NavigationStyles.js","data/actions/applicationActions/applicationActions.js","components/styleComponents/ButtonStyles.js","components/Elements/Navigation/AppSettings.js","components/sheetElements/line/LineSVG.js","components/styleComponents/Select/SelectStyle.js","components/styleComponents/Select/Select.js","components/styleComponents/Inputs.js","components/Elements/Navigation/StyleSettings.js","data/actions/styleActions/styleActions.js","components/Elements/Navigation/DrawingOptions.js","components/Elements/Navigation/PageSettings.js","components/Elements/Navigation/Navigation.js","components/Elements/Logo/LogoStyles.js","components/Elements/Logo/Logo.js","components/Elements/Workspace/WrokspaceStyles.js","hooks/useMousePosition.js","data/actions/drawingActions/drawingActions.js","components/drawElements/polyLine/PolyLine.js","components/drawElements/line/Line.js","components/sheetElements/polyLine/PolyLineSVG.js","components/Elements/Workspace/Sheet.js","components/sheetElements/circle/CircleSVG.js","components/drawElements/circle/Circle.js","components/sheetElements/rect/RectSVG.js","components/drawElements/rect/Rect.js","components/drawElements/curve/CurveStyles.js","components/sheetElements/curve/CurveSVG.js","components/drawElements/curve/Curve.js","components/sheetElements/text/TextSVG.js","components/drawElements/text/Text.js","components/drawElements/pencil/PencilStyles.js","components/drawElements/pencil/Pencil.js","components/sheetElements/image/ImageSVG.js","components/drawElements/image/Image.js","components/drawElements/image/ImageInputStyles.js","components/drawElements/image/ImageInput.js","components/Elements/Workspace/BorderIndicator.js","components/Elements/Workspace/Workspace.js","App.js","data/store.js","reportWebVitals.js","index.js"],"names":["darkTheme","background","normal","normalHover","dark","darkHover","border","color","icon","hover","font","paper","lightTheme","DarkThemeProvider","children","darkThemeEnabled","useSelector","state","application","theme","LINE_ADD","CIRCLE_ADD","RECT_ADD","CURVE_ADD","TEXT_ADD","IMAGE_ADD","LINE_DELETE","CIRCLE_DELETE","RECT_DELETE","CURVE_DELETE","TEXT_DELETE","IMAGE_DELETE","THEME_TOGGLE","SET_SHEET_WIDTH","SET_SHEET_HEIGHT","SET_DRAWING","TOGGLE_INDICATOR","SET_FONT_SIZE","SET_COLOR","SET_PATTERN","SET_LINE_WIDTH","SET_FILL","startElements","lines","circles","rects","curves","texts","images","elements","action","type","payload","filter","line","id","circle","rect","curve","text","image","startState","drawing","indicator","sheetOffset","Math","min","window","innerWidth","sheetWidth","innerHeight","sheetHeight","fontSize","fill","pattern","lineWidth","style","rootReducer","combineReducers","Wrapper","styled","div","NavigationWrapper","section","Dragger","Minimizer","button","ButtonsWrapper","StyleInfo","setDrawing","element","ParentButton","NormalButton","SetDarkButton","SetLightButton","ConnectedAppSettings","connect","themeToggle","resetMinimized","handleThemeChange","onClick","faCloud","faSun","faMoon","LineSVG","linePattern","firstPointX","firstPointY","secondPointX","secondPointY","lineStyle","useMemo","stroke","strokeWidth","strokeDasharray","x1","y1","x2","y2","Options","OptionItem","svg","props","left","Select","options","useState","optionsVisible","setOptionsVisible","opt","map","onSelect","ParentInput","input","ColorInput","NumberInput","ConnectedStyleSettings","setFontSize","size","setColor","setFill","setPattern","setLineWidth","width","setC","setFz","setP","setLw","setF","fillFocus","setFillFocus","colorFocus","setColorFocus","patternOptions","handlePatternSelect","lineWidthOptions","handleLineWidthSelect","onChange","e","target","value","className","max","placeholder","faBorderStyle","faSlidersH","ConnectedDrawingOptions","faMousePointer","faTrash","faGripLines","faDrawPolygon","faBezierCurve","faUnderline","faSquare","faCircle","faPencilAlt","faImage","ConnectedPageSettings","toggleIndicator","faRulerCombined","dragElement","elem","pos1","pos2","pos3","pos4","dragMouseDown","event","preventDefault","opacity","clientX","clientY","document","onmouseup","closeDragElement","onmousemove","elementDrag","top","offsetTop","offsetLeft","getElementById","onmousedown","Navigation","minimized","setMinimized","useEffect","toggleMinimized","name","menu","transition","stateCopy","index","parseInt","slice","classList","toggle","setTimeout","faDraftingCompass","faCompress","faCog","faFileImage","faPalette","StyledLogo","ConnectedLogo","SheetStyles","cursorOverall","cursorHover","WorkspaceWrapper","offset","BorderIndicatorElementsWrapper","offsetY","offsetX","height","VerticalBorderIndicatorElement","HorizontalBorderIndicatorElement","IndicatorHorizontal","IndicatorVertical","useMousePosition","x","y","position","setPosition","setFromEvent","addEventListener","removeEventListener","addLine","addRect","ConnectedPolyLine","polyLines","cursorPosition","pointsValue","useRef","pointsPosition","setPointsPosition","current","push","stopDrawing","code","length","forEach","point","styles","linesToDraw","ConnectedLine","finish","lineToDraw","PolyLineSVG","points","Sheet","CircleSVG","centerX","centerY","radius","fillColor","circleStyle","cx","cy","r","ConnectedCircle","addCircle","sqrt","abs","circleToDraw","RectSVG","positionX","positionY","radiusX","radiusY","rectStyle","rx","ry","ConnectedRect","rectToDraw","StyledCurve","CurveSVG","d","curveStyle","ConnectedCurve","addCurve","curveD","container","cType","dPoint","drag","DrawSVG","l1","setAttributeNS","p1","c1","c2","l2","p2","textContent","Drag","stopPropagation","t","et","m","pageX","pageY","handleCurve","c","getElementsByTagName","i","getAttributeNS","ontouchstart","ontouchmove","ontouchend","Init","TextSVG","pointX","pointY","writing","fontWeight","fontStyle","ConnectedText","addText","textToWrite","setTextState","pointPosition","setPointPosition","handleKeyInput","escapeFunction","key","setText","textToDraw","Canvas","canvas","ConnectedPencil","ctx","getContext","coord","reposition","start","draw","stop","beginPath","lineCap","strokeStyle","moveTo","lineTo","finishDrawing","ImageSVG","href","ConnectedImage","addImage","querySelector","imageToDraw","ImageInputStyled","ImageInput","htmlFor","ConnectedBorderIndicator","smallerArrayNumbers","largerArrayNumbers","verticalBorderIndicators","horizontalBorderIndicators","indicatorTop","indicatorleft","number","ConnectedWorkspace","drawings","deleteLine","deleteImage","deleteText","deleteCircle","deleteRect","deleteCurve","handleOnClick","console","log","onDelete","Object","entries","polyLine","pan","disabled","App","store","createStore","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc4a1618.chunk.js","sourcesContent":["export const darkTheme = {\r\n    background: {\r\n        normal: 'rgb(50,56,84)',\r\n        normalHover: 'rgb(70,76,94)',\r\n        dark: 'rgb(31,40,57)',\r\n        darkHover: 'rgb(31,40,57)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(104,49,157)',\r\n        normalHover: 'rgb(144,89,197)',\r\n        dark: 'rgb(72, 61, 139)',\r\n        darkHover: 'rgb(118,57,177)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(104,49,157)',\r\n        dark: 'rgb(89,41,131)',\r\n    },\r\n    icon: {\r\n        normal: 'rgb(42,11,57)',\r\n        hover: 'rgb(0,0,0)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(222,168,255)',\r\n        dark: 'rgb(68,30,95)',\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(165,150,255)'\r\n    }\r\n};\r\n\r\nexport const lightTheme = {\r\n    background: {\r\n        normal: 'rgb(166, 166, 166)',\r\n        normalHover: 'rgb(140, 140, 140)',\r\n        dark: 'rgb(100, 100, 100)',\r\n        darkHover: 'rgb(140, 140, 140)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        normalHover: 'rgb(185, 53, 44)',\r\n        dark: 'rgb(215, 83, 54)',\r\n        darkHover: 'rgb(135, 23, 14)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        dark: 'rgb(235, 93, 64)',\r\n    },\r\n    icon: {\r\n        normal: 'rgb(74,67,67)',\r\n        hover: 'rgb(41,37,37)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(74,67,67)',\r\n        dark: 'rgb(103,35,22)',\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(255,171,156)',\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {darkTheme, lightTheme} from \"../../theme/themes\";\r\n\r\nconst DarkThemeProvider = ({ children }) => {\r\n    const darkThemeEnabled = useSelector((state) => state.application.darkTheme);\r\n    return (\r\n        <ThemeProvider theme={darkThemeEnabled ? darkTheme : lightTheme}>\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default DarkThemeProvider;","export const LINE_ADD = \"LINE_ADD\";\r\nexport const CIRCLE_ADD = \"CIRCLE_ADD\";\r\nexport const RECT_ADD = \"RECT_ADD\";\r\nexport const CURVE_ADD = \"CURVE_ADD\";\r\nexport const TEXT_ADD = \"TEXT_ADD\";\r\nexport const IMAGE_ADD = \"IMAGE_ADD\";\r\nexport const LINE_DELETE = \"LINE_DELETE\";\r\nexport const CIRCLE_DELETE = \"CIRCLE_DELETE\";\r\nexport const RECT_DELETE = \"RECT_DELETE\";\r\nexport const CURVE_DELETE = \"CURVE_DELETE\";\r\nexport const TEXT_DELETE = \"TEXT_DELETE\";\r\nexport const IMAGE_DELETE = \"IMAGE_DELETE\";\r\n\r\nexport const THEME_TOGGLE = \"THEME_TOGGLE\";\r\nexport const SET_SHEET_WIDTH = \"SET_SHEET_WIDTH\";\r\nexport const SET_SHEET_HEIGHT = \"SET_SHEET_HEIGHT\";\r\nexport const SET_DRAWING = \"SET_DRAWING\";\r\nexport const TOGGLE_INDICATOR = \"TOGGLE_INDICATOR\";\r\n\r\nexport const SET_FONT_SIZE = \"SET_FONT_SIZE\";\r\nexport const SET_COLOR = \"SET_COLOR\";\r\nexport const SET_PATTERN = \"SET_PATTERN\";\r\nexport const SET_LINE_WIDTH = \"SET_LINE_WIDTH\";\r\nexport const SET_FILL = \"SET_FILL\";","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE,\r\n    CURVE_ADD,\r\n    CURVE_DELETE, IMAGE_ADD, IMAGE_DELETE,\r\n    LINE_ADD,\r\n    LINE_DELETE,\r\n    RECT_ADD,\r\n    RECT_DELETE, TEXT_ADD, TEXT_DELETE\r\n} from \"../constants\";\r\n\r\nconst startElements = {\r\n    lines: [],\r\n    circles: [],\r\n    rects: [],\r\n    curves: [],\r\n    texts: [],\r\n    images: [],\r\n}\r\n\r\nconst elements = (state= startElements, action) => {\r\n    switch (action.type) {\r\n        case LINE_ADD:\r\n            return {\r\n                ...state,\r\n                lines: [\r\n                    action.payload,\r\n                    ...state.lines,\r\n                ]\r\n            }\r\n        case CIRCLE_ADD:\r\n            return {\r\n                ...state,\r\n                circles: [\r\n                    action.payload,\r\n                    ...state.circles,\r\n                ]\r\n            }\r\n        case RECT_ADD:\r\n            return {\r\n                ...state,\r\n                rects: [\r\n                    action.payload,\r\n                    ...state.rects,\r\n                ]\r\n            }\r\n        case CURVE_ADD:\r\n            return {\r\n                ...state,\r\n                curves: [\r\n                    action.payload,\r\n                    ...state.curves,\r\n                ]\r\n            }\r\n        case TEXT_ADD:\r\n            return {\r\n                ...state,\r\n                texts: [\r\n                    action.payload,\r\n                    ...state.texts,\r\n                ]\r\n            }\r\n        case IMAGE_ADD:\r\n            return {\r\n                ...state,\r\n                images: [\r\n                    action.payload,\r\n                    ...state.images,\r\n                ]\r\n            }\r\n        case LINE_DELETE:\r\n            return {\r\n                ...state,\r\n                lines: state.lines.filter(line => line.id !== action.payload),\r\n            }\r\n        case CIRCLE_DELETE:\r\n            return {\r\n                ...state,\r\n                circles: state.circles.filter(circle => circle.id !== action.payload),\r\n            }\r\n        case RECT_DELETE:\r\n            return {\r\n                ...state,\r\n                rects: state.rects.filter(rect => rect.id !== action.payload),\r\n            }\r\n        case CURVE_DELETE:\r\n            return {\r\n                ...state,\r\n                curves: state.curves.filter(curve => curve.id !== action.payload),\r\n            }\r\n        case TEXT_DELETE:\r\n            return {\r\n                ...state,\r\n                texts: state.texts.filter(text => text.id !== action.payload),\r\n            }\r\n        case IMAGE_DELETE:\r\n            return {\r\n                ...state,\r\n                images: state.images.filter(image => image.id !== action.payload),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default elements;","import {SET_DRAWING, SET_SHEET_HEIGHT, SET_SHEET_WIDTH, THEME_TOGGLE, TOGGLE_INDICATOR} from \"../constants\";\r\n\r\nconst startState = {\r\n    drawing: '',\r\n    darkTheme: true,\r\n    indicator: true,\r\n    sheetOffset: Math.min(window.innerWidth*0.2, 200),\r\n    sheetWidth: (window.innerHeight-20)/1.4142857,\r\n    sheetHeight: (window.innerHeight-20),\r\n}\r\n\r\nconst application = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_DRAWING:\r\n            return {\r\n                ...state,\r\n                drawing: action.payload,\r\n            }\r\n\r\n        case THEME_TOGGLE:\r\n            return {\r\n                ...state,\r\n                darkTheme: !state.darkTheme\r\n            }\r\n\r\n        case SET_SHEET_WIDTH:\r\n            return {\r\n                ...state,\r\n                sheetWidth: action.payload,\r\n            }\r\n\r\n        case SET_SHEET_HEIGHT:\r\n            return {\r\n                ...state,\r\n                sheetHeight: action.payload,\r\n            }\r\n\r\n        case TOGGLE_INDICATOR:\r\n            return {\r\n                ...state,\r\n                indicator: !state.indicator,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default application;","import {SET_COLOR, SET_FILL, SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN} from \"../constants\";\r\n\r\nconst startState = {\r\n    fontSize: 16,\r\n    color: '#000000',\r\n    fill: 'transparent',\r\n    pattern: '',\r\n    lineWidth: 1,\r\n}\r\n\r\nconst style = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_FONT_SIZE:\r\n            return {\r\n                ...state,\r\n                fontSize: action.payload,\r\n            }\r\n        case SET_COLOR:\r\n            return {\r\n                ...state,\r\n                color: action.payload,\r\n            }\r\n        case SET_FILL:\r\n            return {\r\n                ...state,\r\n                fill: action.payload,\r\n            }\r\n        case SET_PATTERN:\r\n            return {\r\n                ...state,\r\n                pattern: action.payload,\r\n            }\r\n        case SET_LINE_WIDTH:\r\n            return {\r\n                ...state,\r\n                lineWidth: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default style;","import {combineReducers} from 'redux';\r\nimport elements from './drawingReducer';\r\nimport application from \"./applicationReducer\";\r\nimport style from \"./styleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    elements,\r\n    application,\r\n    style,\r\n});\r\n\r\nexport default rootReducer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const NavigationWrapper = styled.section`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: calc(100% - 260px);\r\n  width: 210px;\r\n  height: 84px;\r\n  background-color: ${({theme}) => theme.background.dark};\r\n  border: 3px solid ${({theme}) => theme.border.normal};\r\n  transition: 0s;\r\n  z-index: 10;\r\n  &:nth-child(2){\r\n    top: calc(100% - 200px);\r\n    left: calc(100% - 150px);\r\n    width: 100px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(3){\r\n    top: calc(100% - 350px);\r\n    left: calc(100% - 250px);\r\n    width: 200px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(4){\r\n    top: calc(100% - 500px);\r\n    left: calc(100% - 260px);\r\n    width: 210px;\r\n    height: 50px;\r\n  }\r\n  \r\n  &.minimized{\r\n    top: calc(100% - 30px) !important;\r\n    left: calc(100% - 150px) !important;\r\n    width: 50px;\r\n    height: 30px;\r\n    border-top-left-radius: 40px;\r\n    border-top-right-radius: 40px;\r\n    border-bottom: none;\r\n    cursor: pointer;\r\n    \r\n    &:nth-child(2){\r\n      left: calc(100% - 80px) !important;\r\n    }\r\n\r\n    &:nth-child(3){\r\n      left: calc(100% - 220px) !important;\r\n    }\r\n\r\n    &:nth-child(4){\r\n      left: calc(100% - 290px) !important;\r\n    }\r\n\r\n    &:hover{\r\n      transform: translate(-5px,-5px);\r\n      background-color: ${({theme}) => theme.background.darkHover};\r\n      width: 60px;\r\n      height: 35px;\r\n      border-width: 4px;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n    }\r\n    & *{\r\n      display: none;\r\n    }\r\n    & button:first-child {\r\n      display: block;\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n      background-color: transparent;\r\n      font-size: 20px;\r\n      transition: .1s;\r\n      color: ${({theme}) => theme.color.normal};\r\n      &:hover{\r\n        background-color: ${({theme}) => theme.background.darkHover};\r\n        color: ${({theme}) => theme.color.dark};\r\n        font-size: 23px;\r\n      }\r\n      & svg{\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        & path{\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Dragger = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 20px;\r\n  cursor: all-scroll;\r\n  background-color: ${({theme}) => theme.color.normal};\r\n  opacity: 1;\r\n  transition: opacity .1s;\r\n`;\r\n\r\nexport const Minimizer = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 20px;\r\n  width: 20px;\r\n  z-index: 10;\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.border.normal};\r\n  color: ${({theme}) => theme.icon.normal};\r\n  opacity: 1;\r\n  transition: .1s;\r\n  &:hover{\r\n    background-color: ${({theme}) => theme.border.darkHover};\r\n    color: ${({theme}) => theme.icon.hover};\r\n    font-size: 0.1rem;\r\n  }\r\n  & svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    & path {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 8px 5px;\r\n`;\r\n\r\nexport const StyleInfo = styled.div`\r\n  position: absolute;\r\n  top: -50px;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n  color: ${({theme}) => theme.font.normal};\r\n  display: inline-block;\r\n  width: 84px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  text-align: center;\r\n  line-height: 34px;\r\n  transition: .1s;\r\n  font-family: roboto, sans-serif;\r\n  font-size: 12px;\r\n  &.firstStyle{\r\n    top: -90px;\r\n    left: -30px;\r\n  }\r\n  &.secondStyle{\r\n    left: -30px;\r\n    cursor: pointer;\r\n    background-color: ${({theme}) => theme.background.normalHover};\r\n  }\r\n  &.thirdStyle{\r\n    top: -90px;\r\n    left: 120px;\r\n  }\r\n  &.fourthStyle{\r\n    left: 120px;\r\n    cursor: pointer;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.background.normalHover};\r\n    }\r\n  }\r\n`;","import {SET_DRAWING, SET_SHEET_HEIGHT, SET_SHEET_WIDTH, THEME_TOGGLE, TOGGLE_INDICATOR} from \"../../constants\";\r\n\r\nexport const setDrawing = element => {\r\n    return{\r\n        type: SET_DRAWING,\r\n        payload: element\r\n    }\r\n};\r\n\r\nexport const themeToggle = () => {\r\n    return{\r\n        type: THEME_TOGGLE,\r\n    }\r\n};\r\n\r\nexport const setSheetWidth = width => {\r\n    return{\r\n        type: SET_SHEET_WIDTH,\r\n        payload: width\r\n    }\r\n};\r\n\r\nexport const setSheetHeight = height => {\r\n    return{\r\n        type: SET_SHEET_HEIGHT,\r\n        payload: height\r\n    }\r\n};\r\n\r\nexport const toggleIndicator = () => {\r\n    return{\r\n        type: TOGGLE_INDICATOR,\r\n    }\r\n};","import styled from 'styled-components';\r\n\r\nconst ParentButton = styled.button`\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\n\r\nexport const NormalButton = styled.button`\r\n  background-color: transparent;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 34px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transition: .1s;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n\r\n  &:hover svg.innerIcon{\r\n    color: ${({theme}) => theme.border.normalHover};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  \r\n  &.selected{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n    & svg.innerIcon{\r\n      color: ${({theme}) => theme.border.normalHover};\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SetDarkButton = styled(ParentButton)`\r\n    background-color: transparent;\r\n    color: ${({theme}) => theme.color.normal};\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 34px;\r\n    margin-right: 3px;\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    border-radius: 20%;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    & svg:first-child{\r\n        position: absolute;\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        position: absolute;\r\n        left: 5px;\r\n        top: 5px;\r\n        transition: left .1s, font-size .15s;\r\n        font-size: 20px;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(78, 96, 110)\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(232, 228, 153);\r\n        left: 8px;\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const SetLightButton = styled(SetDarkButton)`\r\n    background-color: transparent;\r\n    & svg:first-child{\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        transition: left .1s, transform .2s;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(171, 212, 245);\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(247, 244, 143);\r\n        transform-origin: center;\r\n        transform: rotate(60deg);\r\n        font-size: 20px;\r\n    }\r\n`;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCloud} from '@fortawesome/free-solid-svg-icons'\r\nimport {connect} from \"react-redux\";\r\nimport {themeToggle} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport {SetDarkButton, SetLightButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {faMoon, faSun} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\n\r\nconst AppSettings = ({darkTheme, themeToggle, resetMinimized}) => {\r\n    const handleThemeChange = () => {\r\n        themeToggle();\r\n        resetMinimized([false, false, false, false]);\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            {darkTheme ?\r\n                <SetLightButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faSun} /></SetLightButton> :\r\n                <SetDarkButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faMoon} /></SetDarkButton>\r\n            }\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedAppSettings = connect(state => ({\r\n        darkTheme: state.application.darkTheme,}),\r\n    {\r\n        themeToggle,\r\n    }\r\n)(AppSettings);\r\n\r\nexport default ConnectedAppSettings;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst LineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                firstPointX = 0,\r\n                firstPointY = 0,\r\n                secondPointX = 0,\r\n                secondPointY = 0,\r\n                onClick}) => {\r\n\r\n    const lineStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n    }), [color, lineWidth, linePattern]);\r\n\r\n    return (\r\n        <line\r\n            id={id}\r\n            x1={firstPointX}\r\n            y1={firstPointY}\r\n            x2={secondPointX}\r\n            y2={secondPointY}\r\n            style={lineStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default LineSVG;\r\n","import styled from 'styled-components';\r\n\r\nexport const Options = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  left: 0;\r\n`;\r\n\r\nexport const OptionItem = styled.svg`\r\n    position: fixed;\r\n    width: 100px;\r\n    height: 30px;\r\n    background-color: ${({theme}) => theme.paper.normal};\r\n    //transform: translateX(-35px);\r\n    transform: ${props => props.left ? 'translateX(-70px)' : 'translateX(0)'};\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    z-index: 1;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.paper.hover};\r\n    }\r\n    &:first-child{\r\n      transform: ${props => props.left ? 'translate(-70px, 0)' : 'translate(0, 0)'};\r\n    }\r\n    &:nth-child(2){\r\n      transform: ${props => props.left ? 'translate(-70px, 30px)' : 'translate(0, 30px)'};\r\n    }\r\n    &:nth-child(3){\r\n      transform: ${props => props.left ? 'translate(-70px, 60px)' : 'translate(0, 60px)'};\r\n    }\r\n    &:nth-child(4){\r\n      transform: ${props => props.left ? 'translate(-70px, 90px)' : 'translate(0, 90px)'};\r\n    }\r\n    & line{\r\n      transform: translate(15px, 15px);\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport {OptionItem, Options} from \"./SelectStyle\";\r\nimport {NormalButton} from \"../ButtonStyles\";\r\n\r\nconst Select = ({options, left=false, children}) => {\r\n    const [optionsVisible, setOptionsVisible] = useState(false);\r\n    const toggleOptions = () => {\r\n        setOptionsVisible(!optionsVisible);\r\n    }\r\n    const opt = options.map(opt => (\r\n        <OptionItem onClick={opt.onSelect} left={left} key={opt.onSelect}>\r\n            <svg>\r\n                {opt.line}\r\n            </svg>\r\n        </OptionItem>\r\n    ));\r\n    return (\r\n        <>\r\n            <NormalButton onClick={toggleOptions}>\r\n                {children}\r\n                {optionsVisible ?\r\n                    <Options>\r\n                        {opt}\r\n                    </Options>\r\n                    : null}\r\n            </NormalButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\nconst ParentInput = styled.input`\r\n  background-color: transparent;\r\n  padding: 0;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 0 3px 0 0;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n`;\r\n\r\nexport const ColorInput = styled(ParentInput)`\r\n  position: relative;\r\n`;\r\n\r\nexport const NumberInput = styled(ParentInput)`\r\n  text-align: center;\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setColor,\r\n    setFill,\r\n    setFontSize,\r\n    setLineWidth,\r\n    setPattern\r\n} from \"../../../data/actions/styleActions/styleActions\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport Select from \"../../styleComponents/Select/Select\";\r\nimport {ColorInput, NumberInput} from \"../../styleComponents/Inputs\";\r\nimport {ButtonsWrapper, StyleInfo} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBorderStyle, faSlidersH} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StyleSettings = ({color, fontSize, pattern, lineWidth, fill,\r\n                       setFontSize, setColor, setPattern, setLineWidth, setFill}) => {\r\n\r\n    const [, setC] = useState(color);\r\n    const [, setFz] = useState(fontSize);\r\n    const [, setP] = useState(pattern);\r\n    const [, setLw] = useState(lineWidth);\r\n    const [, setF] = useState(fill);\r\n    const [fillFocus, setFillFocus] = useState(false);\r\n    const [colorFocus, setColorFocus] = useState(false);\r\n\r\n    const patternOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'5'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect(\"5\") },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'10'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('10') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'20'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('20') },\r\n    ]\r\n\r\n    const lineWidthOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={1} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(1) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={2} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(2) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={5} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(5) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={10} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(10) },\r\n    ]\r\n    const handlePatternSelect = (pattern) => {\r\n        setP(pattern)\r\n        setPattern(pattern)\r\n    }\r\n    const handleLineWidthSelect = (pattern) => {\r\n        setLw(pattern)\r\n        setLineWidth(pattern)\r\n    }\r\n    const handleColorChange = (e) => {\r\n        setC(e.target.value)\r\n        setColor(e.target.value)\r\n        setColorFocus(false)\r\n    }\r\n    const handleFillChange = (e) => {\r\n        setF(e.target.value)\r\n        setFill(e.target.value)\r\n        setFillFocus(false)\r\n    }\r\n    const handleFontSizeChange = (e) => {\r\n        setFz(e.target.value)\r\n        setFontSize(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            <ColorInput type=\"color\" onChange={handleColorChange} value={color} onClick={() => {setColorFocus(!colorFocus)}}/>\r\n                {colorFocus ? <StyleInfo className={'firstStyle'} onClick={() => {setColorFocus(false)}}>Line Color</StyleInfo> : null}\r\n                {colorFocus ? <StyleInfo className={'secondStyle'} onClick={() => {setColor('transparent'); setColorFocus(false)}}>Transparent</StyleInfo> : null}\r\n            <NumberInput type=\"number\" min={0} max={72} placeholder={'T'} onChange={handleFontSizeChange}/>\r\n            <Select options={patternOptions} left={true}>\r\n                <FontAwesomeIcon icon={faBorderStyle} className={'innerIcon'}/>\r\n            </Select>\r\n            <Select options={lineWidthOptions}>\r\n                <FontAwesomeIcon icon={faSlidersH} className={'innerIcon'}/>\r\n            </Select>\r\n            <ColorInput type=\"color\" onChange={handleFillChange} value={fill} onClick={() => {setFillFocus(!fillFocus)}}/>\r\n                {fillFocus ? <StyleInfo className={'thirdStyle'} onClick={() => {setFillFocus(false)}}>Fill Color</StyleInfo> : null}\r\n                {fillFocus ? <StyleInfo className={'fourthStyle'} onClick={() => {setFill('transparent'); setFillFocus(false)}}>Transparent</StyleInfo> : null}\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedStyleSettings = connect(state => ({\r\n        color: state.style.color,\r\n        fill: state.style.fill,\r\n        fontSize: state.style.fontSize,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        setFontSize,\r\n        setColor,\r\n        setFill,\r\n        setPattern,\r\n        setLineWidth\r\n    }\r\n)(StyleSettings);\r\n\r\nexport default ConnectedStyleSettings;\r\n","import {\r\n    SET_COLOR, SET_FILL,\r\n    SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN\r\n\r\n} from '../../constants';\r\n\r\nexport const setFontSize = size => {\r\n    return{\r\n        type: SET_FONT_SIZE,\r\n        payload: size\r\n    }\r\n};\r\n\r\nexport const setColor = color => {\r\n    return{\r\n        type: SET_COLOR,\r\n        payload: color\r\n    }\r\n};\r\n\r\nexport const setFill = fill => {\r\n    return{\r\n        type: SET_FILL,\r\n        payload: fill\r\n    }\r\n};\r\n\r\nexport const setPattern = pattern => {\r\n    return{\r\n        type: SET_PATTERN,\r\n        payload: pattern\r\n    }\r\n};\r\n\r\nexport const setLineWidth = width => {\r\n    return{\r\n        type: SET_LINE_WIDTH,\r\n        payload: width\r\n    }\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faGripLines,\r\n    faTrash,\r\n    faImage,\r\n    faPencilAlt,\r\n    faDrawPolygon,\r\n    faBezierCurve,\r\n    faSquare,\r\n    faCircle,\r\n    faMousePointer,\r\n    faUnderline\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {NormalButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst DrawingOptions = ({setDrawing, drawing}) => {\r\n    return (\r\n        <ButtonsWrapper>\r\n            <NormalButton className={drawing === 'select' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faMousePointer} onClick={() => setDrawing('select')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'delete' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faTrash} onClick={() => setDrawing('delete')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'line' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faGripLines} onClick={() => setDrawing('line')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'polyLine' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faDrawPolygon} onClick={() => setDrawing('polyLine')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'curve' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faBezierCurve} onClick={() => setDrawing('curve')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'text' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faUnderline} onClick={() => setDrawing('text')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'rect' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faSquare} onClick={() => setDrawing('rect')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'circle' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faCircle} onClick={() => setDrawing('circle')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'pencil' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faPencilAlt} onClick={() => setDrawing('pencil')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'image' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faImage} onClick={() => setDrawing('image')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedDrawingOptions = connect(state => ({\r\n        drawing: state.application.drawing,\r\n    }),\r\n    {\r\n\r\n        setDrawing,\r\n    }\r\n)(DrawingOptions);\r\n\r\nexport default ConnectedDrawingOptions;","import React from 'react';\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\nimport {NormalButton, SetDarkButton, SetLightButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faRulerCombined} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleIndicator} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst PageSettings = ({toggleIndicator, indicator}) => {\r\n    return (\r\n        <ButtonsWrapper>\r\n            <NormalButton className={indicator ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faRulerCombined} onClick={() => toggleIndicator()} className={'innerIcon'}/>\r\n            </NormalButton>\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedPageSettings = connect(state => ({\r\n        indicator: state.application.indicator,\r\n    }),\r\n    {\r\n        toggleIndicator,\r\n    }\r\n)(PageSettings);\r\n\r\nexport default ConnectedPageSettings;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Dragger, Minimizer, NavigationWrapper} from \"./NavigationStyles\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faDraftingCompass, faCompress, faCog, faPalette} from '@fortawesome/free-solid-svg-icons'\r\nimport AppSettings from \"./AppSettings\";\r\nimport {faFileImage} from \"@fortawesome/free-regular-svg-icons\";\r\nimport StyleSettings from \"./StyleSettings\";\r\nimport DrawingOptions from \"./DrawingOptions\";\r\nimport PageSettings from \"./PageSettings\";\r\n\r\nfunction dragElement(elem) {\r\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n    if (document.getElementById(elem.id + \"Dragger\")) document.getElementById(elem.id + \"Dragger\").onmousedown = dragMouseDown;\r\n    else elem.onmousedown = dragMouseDown;\r\n\r\n    function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        elem.style.opacity = '0.7'\r\n\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n\r\n        document.onmousemove = elementDrag;\r\n    }\r\n\r\n    function elementDrag(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n\r\n        elem.style.top = (elem.offsetTop - pos2) + \"px\";\r\n        elem.style.left = (elem.offsetLeft - pos1) + \"px\";\r\n    }\r\n\r\n    function closeDragElement() {\r\n        elem.style.opacity = '1'\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n    }\r\n}\r\n\r\nconst Navigation = () => {\r\n    const [minimized, setMinimized] = useState([false, false, false, false]);\r\n\r\n    useEffect(() => {\r\n        dragElement(document.getElementById(\"navigation1\"));\r\n        dragElement(document.getElementById(\"navigation2\"));\r\n        dragElement(document.getElementById(\"navigation3\"));\r\n        dragElement(document.getElementById(\"navigation4\"));\r\n    },[])\r\n\r\n    const toggleMinimized = (name) => {\r\n        const menu = document.getElementById(name);\r\n        menu.style.transition = '.5s';\r\n        const stateCopy = [...minimized];\r\n        const index = parseInt(name.slice(-1)) - 1;\r\n        stateCopy[index] = !minimized[index];\r\n        setMinimized(stateCopy);\r\n        menu.classList.toggle('minimized');\r\n        setTimeout(function(){ menu.style.transition = '0s'; }, 500);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            {/*Drawing*/}\r\n            <NavigationWrapper id={\"navigation1\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation1\")}>\r\n                    {minimized[0] ?\r\n                        <FontAwesomeIcon icon={faDraftingCompass} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation1Dragger\"/>\r\n                <DrawingOptions/>\r\n            </NavigationWrapper>\r\n            {/*AppSettings*/}\r\n            <NavigationWrapper id={\"navigation2\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation2\")}>\r\n                    {minimized[1] ?\r\n                        <FontAwesomeIcon icon={faCog} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation2Dragger\"/>\r\n                <AppSettings resetMinimized={setMinimized}/>\r\n            </NavigationWrapper>\r\n            {/*PageSettings*/}\r\n            <NavigationWrapper id={\"navigation3\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation3\")}>\r\n                    {minimized[2] ?\r\n                        <FontAwesomeIcon icon={faFileImage} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation3Dragger\"/>\r\n                <PageSettings resetMinimized={setMinimized}/>\r\n            </NavigationWrapper>\r\n            {/*Styles*/}\r\n            <NavigationWrapper id={\"navigation4\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation4\")}>\r\n                    {minimized[3] ?\r\n                        <FontAwesomeIcon icon={faPalette} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation4Dragger\"/>\r\n                <StyleSettings/>\r\n            </NavigationWrapper>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLogo = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 15px;\r\n  opacity: 0.5;\r\n  font-size: ${props => (props.width)/3}px;\r\n  width: ${props => props.width}px;\r\n  & span:first-child{\r\n    color: ${({theme}) => theme.color.normal};\r\n    font-family: 'Trebuchet MS' , Roboto, sans-serif;\r\n    font-weight: 500;\r\n  }\r\n  & span:nth-child(2){\r\n    color: ${({theme}) => theme.color.dark};\r\n    font-family: 'Brush Script MT', serif;\r\n  }\r\n`;","import React from 'react';\r\nimport {StyledLogo} from \"./LogoStyles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Logo = ({width}) => {\r\n    return (\r\n        <StyledLogo width={width}>\r\n            <span>WS</span>\r\n            <span>Cad</span>\r\n        </StyledLogo>\r\n    );\r\n};\r\n\r\nconst ConnectedLogo = connect(state => ({\r\n        width: state.application.sheetOffset,\r\n    }),null\r\n)(Logo);\r\n\r\nexport default ConnectedLogo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SheetStyles = styled.div`\r\n  height: ${props => props.sheetHeight}px;\r\n  width: ${props => props.sheetWidth}px;\r\n  background-color: transparent;\r\n  cursor: ${props => props.cursorOverall};\r\n  & svg{\r\n    & *:hover{\r\n      cursor: ${props => props.cursorHover};\r\n      opacity: ${props => props.cursorHover !== 'default' ? 0.6 : 1};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  position: absolute;\r\n  width: ${props => Math.max(props.sheetWidth,props.sheetWidth)}px;\r\n  background-color: ${({theme}) => theme.paper.normal};\r\n  top: 10px;\r\n  bottom: 10px;\r\n  left: ${props => props.offset}px;\r\n`;\r\n\r\nexport const BorderIndicatorElementsWrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  font-size: 12px;\r\n  top: ${props => props.offsetY}px;\r\n  left: ${props => props.offsetX}px;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  text-align: center;\r\n  background-color: ${({theme}) => theme.paper.hover};\r\n  color: ${({theme}) => theme.font.dark} !important;\r\n  &:first-child{\r\n    line-height: 12px;\r\n    text-align: right;\r\n    z-index: 1;\r\n  }\r\n  &:nth-child(2){\r\n    line-height: 12px;\r\n    top: ${props => props.offsetY}px;\r\n    text-align: right;\r\n    z-index: 3;\r\n  }\r\n  &:nth-child(3){\r\n    flex-direction: column;\r\n    z-index: 2;\r\n  }\r\n  &:nth-child(4){\r\n    flex-direction: column;\r\n    left: ${props => props.offsetX}px;\r\n    z-index: 4;\r\n  }\r\n  \r\n`;\r\n\r\nexport const VerticalBorderIndicatorElement = styled.div`\r\n  box-sizing: border-box;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  border-top: 1px solid black;\r\n  font-family: sans-serif;\r\n  &:last-child, &:first-child{\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const HorizontalBorderIndicatorElement = styled(VerticalBorderIndicatorElement)`\r\n  border-top: none;\r\n  border-right: 1px solid black;\r\n  &:nth-child(21), &:nth-child(29){\r\n    z-index: 9;\r\n    border: none;\r\n  }\r\n  &:first-child{\r\n    border-right: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const IndicatorHorizontal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => props.left}px;\r\n  width: 2px;\r\n  height: 15px;\r\n  background-color: red;\r\n  z-index: 7;\r\n`;\r\n\r\nexport const IndicatorVertical = styled(IndicatorHorizontal)`\r\n  top: ${props => props.top}px;\r\n  left: 0;\r\n  width: 15px;\r\n  height: 2px;\r\n`;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMousePosition = (offsetX,offsetY) => {\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => setPosition({ x: e.clientX-offsetX, y: e.clientY-offsetY });\r\n        window.addEventListener(\"mousemove\", setFromEvent);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", setFromEvent);\r\n        };\r\n    }, [offsetX, offsetY]);\r\n\r\n    return position;\r\n};","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE, CURVE_ADD, CURVE_DELETE, IMAGE_ADD, IMAGE_DELETE,\r\n    LINE_ADD, LINE_DELETE, RECT_ADD, RECT_DELETE, TEXT_ADD, TEXT_DELETE,\r\n} from '../../constants';\r\n\r\nexport const addLine = line => {\r\n    return{\r\n        type: LINE_ADD,\r\n        payload: line\r\n    }\r\n};\r\n\r\nexport const addCircle = circle => {\r\n    return{\r\n        type: CIRCLE_ADD,\r\n        payload: circle\r\n    }\r\n};\r\n\r\nexport const addRect = rect => {\r\n    return{\r\n        type: RECT_ADD,\r\n        payload: rect\r\n    }\r\n};\r\n\r\nexport const addCurve = curve => {\r\n    return{\r\n        type: CURVE_ADD,\r\n        payload: curve\r\n    }\r\n};\r\n\r\nexport const addText = text => {\r\n    return{\r\n        type: TEXT_ADD,\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const addImage = image => {\r\n    return{\r\n        type: IMAGE_ADD,\r\n        payload: image\r\n    }\r\n};\r\n\r\nexport const deleteLine = id => {\r\n    return{\r\n        type: LINE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCircle = id => {\r\n    return{\r\n        type: CIRCLE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteRect = id => {\r\n    return{\r\n        type: RECT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCurve = id => {\r\n    return{\r\n        type: CURVE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteText = id => {\r\n    return{\r\n        type: TEXT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteImage = id => {\r\n    return{\r\n        type: IMAGE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst PolyLine = ({id, color, pattern, lineWidth, addLine, offset, sheetWidth, sheetHeight, setDrawing, polyLines}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                if(pointsValue.current.length > 1){\r\n                    pointsValue.current.forEach((point, index) => {\r\n                        if (pointsValue.current[index+1]){\r\n                            const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                            line['points'] = [pointsValue.current[index],pointsValue.current[index+1]];\r\n                            line['styles'] = styles;\r\n                            line['id'] = 'line__'+(parseInt(id.slice(6))+index);\r\n                            addLine(line);\r\n                        }\r\n                    });\r\n                }\r\n                setDrawing('');\r\n            }\r\n            if (e.code === 'Escape') return clean();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            setDrawing('');\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    const linesToDraw = pointsPosition.map((point, index) => {\r\n        if (pointsValue.current.length === 1 || index === pointsPosition.length - 1) {\r\n            return (\r\n                <LineSVG\r\n                    key={index}\r\n                    firstPointX={point.x}\r\n                    firstPointY={point.y}\r\n                    secondPointX={cursorPosition.x}\r\n                    secondPointY={cursorPosition.y}\r\n                    color={color}\r\n                    linePattern={pattern}\r\n                    lineWidth={lineWidth}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <LineSVG\r\n                key={index}\r\n                firstPointX={point.x}\r\n                firstPointY={point.y}\r\n                secondPointX={pointsPosition[index + 1].x}\r\n                secondPointY={pointsPosition[index + 1].y}\r\n                color={color}\r\n                linePattern={pattern}\r\n                lineWidth={lineWidth}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        pointsValue.current.length > 0\r\n            ?\r\n                linesToDraw\r\n            :\r\n                null\r\n    );\r\n};\r\n\r\nconst ConnectedPolyLine = connect(state => ({\r\n    polyLines: state.elements.polyLines,\r\n    offset: state.application.sheetOffset,\r\n    sheetWidth: state.application.sheetWidth,\r\n    sheetHeight: state.application.sheetHeight,\r\n    color: state.style.color,\r\n    pattern: state.style.pattern,\r\n    lineWidth: state.style.lineWidth,\r\n}),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(PolyLine);\r\n\r\nexport default ConnectedPolyLine;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst Line = ({id, color, pattern, lineWidth, lines, addLine, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                line['points'] = pointsValue.current;\r\n                line['styles'] = styles;\r\n                line['id'] = id;\r\n                addLine(line);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, lines.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let lineToDraw = null;\r\n    if (drawing === '') lineToDraw = null;\r\n    else if (pointsPosition.length === 2) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {pointsPosition[1].x}\r\n            secondPointY = {pointsPosition[1].y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n    else if (pointsPosition.length === 1) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {cursorPosition.x}\r\n            secondPointY = {cursorPosition.y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n\r\n    return (\r\n        lineToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedLine = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        lines: state.elements.lines,\r\n        color: state.style.color,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(Line);\r\n\r\nexport default ConnectedLine;\r\n","import React from 'react';\r\nimport LineSVG from \"../line\";\r\n\r\nconst PolyLineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                points,\r\n                onClick}) => {\r\n\r\n    const polyLineToDraw = points.map((point, index) => {\r\n        if (points[index+1]){\r\n            return(\r\n                <LineSVG\r\n                    key={index}\r\n                    id={id+'__'+index}\r\n                    firstPointX = {point.x}\r\n                    firstPointY = {point.y}\r\n                    secondPointX = {points[index+1].x}\r\n                    secondPointY = {points[index+1].y}\r\n                    color= {color}\r\n                    linePattern = {linePattern}\r\n                    lineWidth = {lineWidth}\r\n                    onClick = {() => onClick(id+'__'+index)}\r\n                />\r\n            )\r\n        }\r\n        return null;\r\n    })\r\n\r\n    return (\r\n        polyLineToDraw\r\n    )\r\n};\r\n\r\nexport default PolyLineSVG;\r\n","import React from 'react';\r\nimport {SheetStyles} from \"./WrokspaceStyles\";\r\n\r\nconst Sheet = ({sheetWidth, sheetHeight, drawing, children}) => {\r\n    let cursorOverall = 'default';\r\n    let cursorHover = 'default';\r\n    switch (drawing){\r\n        case 'select':\r\n            cursorHover = 'pointer'\r\n            break;\r\n        case 'text':\r\n            cursorOverall = 'text'\r\n            break;\r\n        case 'delete':\r\n            cursorHover = 'not-allowed'\r\n            break;\r\n        case '':\r\n            cursorOverall = 'default'\r\n            break;\r\n        default:\r\n            cursorOverall = 'crosshair'\r\n            cursorHover = 'crosshair'\r\n    }\r\n    return (\r\n        <SheetStyles\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}\r\n            cursorHover={cursorHover}\r\n            cursorOverall={cursorOverall}>\r\n            <svg\r\n                width={sheetWidth}\r\n                height={sheetHeight}\r\n                style={{position: 'fixed'}}>\r\n                {children}\r\n            </svg>\r\n        </SheetStyles>\r\n    );\r\n};\r\n\r\nexport default Sheet;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst CircleSVG = ({id,\r\n                       color= 'red',\r\n                       linePattern = null,\r\n                       lineWidth = 1,\r\n                       centerX = 0,\r\n                       centerY = 0,\r\n                       radius = 1,\r\n                       fillColor = 'transparent',\r\n                       onClick}) => {\r\n\r\n    const circleStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern]);\r\n\r\n    return (\r\n        <circle\r\n            id={id}\r\n            cx={centerX}\r\n            cy={centerY}\r\n            r={radius}\r\n            style={circleStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default CircleSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addCircle, addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\n\r\nconst Circle = ({id, color, pattern, lineWidth, fillColor, circles, addCircle, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [circle, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                circle['point'] = pointsValue.current[0];\r\n                circle['radius'] = Math.sqrt(Math.abs((pointsValue.current[0].x-pointsValue.current[1].x)**2)+Math.abs((pointsValue.current[0].y-pointsValue.current[1].y)**2))\r\n                circle['styles'] = styles;\r\n                circle['id'] = id;\r\n                addCircle(circle);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addCircle, color, fillColor, lineWidth, circles.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let circleToDraw = null;\r\n    if (drawing === '') circleToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((pointsPosition[1].x-pointsPosition[0].x)**2)+Math.abs((pointsPosition[1].y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((cursorPosition.x-pointsPosition[0].x)**2)+Math.abs((cursorPosition.y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        circleToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedCircle = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        circles: state.elements.circles,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCircle,\r\n        setDrawing,\r\n    }\r\n)(Circle);\r\n\r\nexport default ConnectedCircle;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst RectSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                positionX = 0,\r\n                positionY = 0,\r\n                radiusX= 0,\r\n                radiusY = 0,\r\n                width= 1,\r\n                height= 1,\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const rectStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <rect\r\n            id={id}\r\n            x={positionX}\r\n            y={positionY}\r\n            rx={radiusX}\r\n            ry={radiusY}\r\n            width={width}\r\n            height={height}\r\n            style={rectStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default RectSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addRect} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\n\r\nconst Rect = ({id, color, pattern, lineWidth, fillColor, rects, addRect, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [rect, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                rect['point'] = {x: Math.min(pointsValue.current[0].x,pointsValue.current[1].x), y:Math.min(pointsValue.current[0].y,pointsValue.current[1].y)};\r\n                rect['width'] = Math.abs(pointsValue.current[0].x - pointsValue.current[1].x)\r\n                rect['height'] = Math.abs(pointsValue.current[0].y - pointsValue.current[1].y)\r\n                rect['styles'] = styles;\r\n                rect['id'] = id;\r\n                addRect(rect);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addRect, color, fillColor, lineWidth, rects.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let rectToDraw = null;\r\n    if (drawing === '') rectToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x,pointsPosition[1].x)}\r\n                positionY = {Math.min(pointsPosition[0].y,pointsPosition[1].y)}\r\n                width = {Math.abs(pointsPosition[0].x - pointsPosition[1].x)}\r\n                height = {Math.abs(pointsPosition[0].y - pointsPosition[1].y)}\r\n                color = {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x, cursorPosition.x)}\r\n                positionY = {Math.min(pointsPosition[0].y, cursorPosition.y)}\r\n                width = {Math.abs(cursorPosition.x - pointsPosition[0].x)}\r\n                height = {Math.abs(cursorPosition.y - pointsPosition[0].y)}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        rectToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedRect = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        rects: state.elements.rects,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addRect,\r\n        setDrawing,\r\n    }\r\n)(Rect);\r\n\r\nexport default ConnectedRect;","import styled from \"styled-components\";\r\nimport {SheetStyles} from \"../../Elements/Workspace/WrokspaceStyles\";\r\n\r\nexport const StyledCurve = styled(SheetStyles)`\r\n    height: ${props => props.sheetHeight}px;\r\n    width: ${props => props.sheetWidth}px;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    transform: translateY(${props => (props.sheetHeight)*(-1)}px);\r\n    background-color: transparent;\r\n    \r\n    & #container{\r\n      width: 100%;\r\n      height: 100%;\r\n      background: transparent;\r\n      margin: 0;\r\n      text-align: center;\r\n    }\r\n\r\n    \r\n    #code{\r\n      display: block;\r\n      width: auto;\r\n      font: bold 3vw monospace;\r\n      margin: 0;\r\n      padding: 0;\r\n      color: #1E1935;\r\n      background: rgba(221,221,221,0.35);\r\n    }\r\n    \r\n    &::selection{\r\n      background: #EF2D56;\r\n      color: transparent;\r\n    }\r\n\r\n    & svg, g{\r\n      width: ${props => props.sheetWidth}px;\r\n      height: ${props => props.sheetHeight}px;\r\n    }\r\n    \r\n    & path{\r\n      stroke-width: 8;\r\n      stroke: #1E1935;\r\n      stroke-linecap: round;\r\n      fill: none;\r\n    }\r\n\r\n    \r\n    & path.fill{\r\n      fill: #1E1935;\r\n    }\r\n\r\n    \r\n    & circle{\r\n      stroke-width: 2;\r\n      stroke: #EF2D56;\r\n      fill: #fff;\r\n    }\r\n\r\n    \r\n    & circle:hover{\r\n      fill: #EF2D56;\r\n      cursor: move;\r\n    }\r\n\r\n    \r\n    & line{\r\n      stroke-width: 1;\r\n      stroke: #999;\r\n      stroke-linecap: round;\r\n      stroke-dasharray: 5,3;\r\n    }\r\n`;","import React, {useMemo} from 'react';\r\n\r\nconst CurveSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                d=\"M100,250 C100,100 400,100 400,250\",\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const curveStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <path\r\n            id={id}\r\n            style={curveStyle}\r\n            d={d}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CurveSVG;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport {StyledCurve} from \"./CurveStyles\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCurve} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\n\r\nconst Curve = ({id, color, pattern, lineWidth, fillColor, curves, addCurve, sheetWidth, sheetHeight, setDrawing}) => {\r\n    const curveD = useRef('M100,250 C100,100 400,100 400,250');\r\n\r\n    useEffect(() => {\r\n        let container, svg, cType, code, point = {}, line = {}, fill = false, drag = null, dPoint;\r\n\r\n        function Init() {\r\n            const c = svg.getElementsByTagName(\"circle\");\r\n            for (let i = 0; i < c.length; i++) {\r\n                point[c[i].getAttributeNS(null,\"id\")] = {\r\n                    x: parseInt(c[i].getAttributeNS(null,\"cx\"),10),\r\n                    y: parseInt(c[i].getAttributeNS(null,\"cy\"),10)\r\n                };\r\n            }\r\n\r\n            line.l1 = svg.getElementById(\"l1\");\r\n            line.l2 = svg.getElementById(\"l2\");\r\n            line.curve = svg.getElementById(\"curve\");\r\n            code = document.getElementById(\"code\");\r\n            svg.onmousedown = svg.onmousemove = svg.onmouseup = Drag;\r\n            svg.ontouchstart = svg.ontouchmove = svg.ontouchend = Drag;\r\n            DrawSVG();\r\n        }\r\n\r\n        function DrawSVG() {\r\n            line.l1.setAttributeNS(null, \"x1\", point.p1.x);\r\n            line.l1.setAttributeNS(null, \"y1\", point.p1.y);\r\n            line.l1.setAttributeNS(null, \"x2\", point.c1.x);\r\n            line.l1.setAttributeNS(null, \"y2\", point.c1.y);\r\n\r\n            const c2 = (point.c2 ? \"c2\" : \"c1\");\r\n            line.l2.setAttributeNS(null, \"x1\", point.p2.x);\r\n            line.l2.setAttributeNS(null, \"y1\", point.p2.y);\r\n            line.l2.setAttributeNS(null, \"x2\", point[c2].x);\r\n            line.l2.setAttributeNS(null, \"y2\", point[c2].y);\r\n\r\n            const d =\r\n                \"M\"+point.p1.x+\",\"+point.p1.y+\" \"+cType+\r\n                point.c1.x+\",\"+point.c1.y+\" \"+\r\n                (point.c2 ? point.c2.x+\",\"+point.c2.y+\" \" : \"\")+\r\n                point.p2.x+\",\"+point.p2.y+\r\n                (fill ? \" Z\" : \"\");\r\n            line.curve.setAttributeNS(null, \"d\", d);\r\n            curveD.current = d;\r\n\r\n            if (code) {\r\n                code.textContent = '<path d=\"'+d+'\" />';\r\n            }\r\n        }\r\n\r\n        function Drag(e) {\r\n\r\n            e.stopPropagation();\r\n            let t = e.target, id = t.id, et = e.type, m = MousePos(e);\r\n\r\n            if (!drag && et === \"mousedown\" && id === \"curve\") {\r\n                fill = !fill;\r\n                t.setAttributeNS(null, \"class\", (fill ? \"fill\" : \"\"));\r\n                DrawSVG();\r\n            }\r\n\r\n            if (!drag && typeof(point[id]) != \"undefined\" && (et === \"mousedown\" || et === \"touchstart\")) {\r\n                drag = t;\r\n                dPoint = m;\r\n            }\r\n\r\n            if (drag && (et === \"mousemove\" || et === \"touchmove\")) {\r\n                id = drag.id;\r\n                point[id].x += m.x - dPoint.x;\r\n                point[id].y += m.y - dPoint.y;\r\n                dPoint = m;\r\n                drag.setAttributeNS(null, \"cx\", point[id].x);\r\n                drag.setAttributeNS(null, \"cy\", point[id].y);\r\n                DrawSVG();\r\n            }\r\n\r\n            if (drag && (et === \"mouseup\" || et === \"touchend\")) {\r\n                drag = null;\r\n            }\r\n\r\n        }\r\n\r\n        function MousePos(event) {\r\n            return {\r\n                x: Math.max(0, event.pageX),\r\n                y: Math.max(0, event.pageY)\r\n            }\r\n        }\r\n\r\n        function handleCurve(){\r\n            container = document.getElementById(\"container\");\r\n            if (container) {\r\n                cType = container.className;\r\n                svg = document.getElementById(\"svg\");\r\n                Init();\r\n            }\r\n        }\r\n\r\n        const stopDrawing = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                window.removeEventListener(\"mousemove\", handleCurve);\r\n                const [curve, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                curve['d'] = curveD.current;\r\n                curve['styles'] = styles;\r\n                curve['id'] = id;\r\n                addCurve(curve);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return finish();\r\n        }\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n        document.addEventListener('mousemove', handleCurve);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            document.removeEventListener(\"mousemove\", handleCurve);\r\n        };\r\n    }, [id, setDrawing, addCurve, color, fillColor, lineWidth, curves.length]);\r\n\r\n    return (\r\n        <StyledCurve\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}>\r\n            <div id=\"container\" className=\"C\">\r\n                <svg id=\"svg\">\r\n                    <CurveSVG id=\"curve\"\r\n                              color= {color}\r\n                              linePattern = {pattern}\r\n                              lineWidth = {lineWidth}\r\n                              fillColor = {fillColor}\r\n                              d=\"M100,250 C100,100 400,100 400,250\"/>\r\n                    <g id=\"main\">\r\n                        <circle id=\"p1\" cx=\"100\" cy=\"250\" r=\"16\"/>\r\n                        <circle id=\"p2\" cx=\"400\" cy=\"250\" r=\"16\"/>\r\n\r\n                        <circle id=\"c1\" cx=\"100\" cy=\"100\" r=\"8\"/>\r\n                        <circle id=\"c2\" cx=\"400\" cy=\"100\" r=\"8\"/>\r\n\r\n                        <line id=\"l1\" x1=\"100\" y1=\"250\" x2=\"100\" y2=\"100\"/>\r\n                        <line id=\"l2\" x1=\"400\" y1=\"250\" x2=\"400\" y2=\"100\"/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </StyledCurve>\r\n    )\r\n};\r\n\r\nconst ConnectedCurve = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        curves: state.elements.curves,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCurve,\r\n        setDrawing,\r\n    }\r\n)(Curve);\r\n\r\nexport default ConnectedCurve;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst TextSVG = ({id,\r\n                color= 'red',\r\n                lineWidth = 2,\r\n                pointX = 0,\r\n                fontSize = 13,\r\n                pointY = 0,\r\n                font = 'Courier New',\r\n                text = 'text',\r\n                writing = false,\r\n                onClick}) => {\r\n\r\n    let fontWeight = '';\r\n    switch (lineWidth) {\r\n        case 1: fontWeight = 'italic'; break;\r\n        case 2: fontWeight = 'lighter'; break;\r\n        case 10: fontWeight = 'bold'; break;\r\n        default: fontWeight = 'normal'; break;\r\n    }\r\n\r\n    const fontStyle = useMemo(() => ({\r\n        font: fontWeight + ' ' + fontSize + 'px ' + font,\r\n        fill: color\r\n    }), [color, fontWeight, font, fontSize]);\r\n\r\n    return (\r\n        <text\r\n            id={id}\r\n            x={pointX}\r\n            y={pointY}\r\n            style={fontStyle}\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </text>\r\n    )\r\n};\r\n\r\nexport default TextSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addText} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\n\r\nconst Text = ({id, color, fontSize, lineWidth, texts, addText, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const pointsValue = useRef([]);\r\n    const textToWrite = useRef('');\r\n    const [textState, setTextState] = useState('');\r\n    const [pointPosition, setPointPosition] = useState([]);\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointPosition([pointsValue.current[0]])\r\n                const e = {};\r\n                e.code = 'Escape'\r\n                handleKeyInput(e);\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointPosition([...pointsValue.current])\r\n        }\r\n        const handleKeyInput = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", handleKeyInput);\r\n                const [text, styles] = [{}, {color, fontSize, lineWidth}];\r\n                text['point'] = pointsValue.current;\r\n                text['styles'] = styles;\r\n                text['id'] = id;\r\n                text['text'] = textToWrite.current;\r\n                addText(text);\r\n                setDrawing('');\r\n            }\r\n            const setText = (e) => {\r\n                let text = '';\r\n                if (e.code === 'Backspace') text = textToWrite.current.slice(0,-1);\r\n                else text =  textToWrite.current + e.key;\r\n                textToWrite.current = text;\r\n                setTextState(text);\r\n            }\r\n            if (e && e.code === 'Escape' || e.code === 'Enter') return finish();\r\n            else if (e && e.code) return setText(e);\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", handleKeyInput);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", handleKeyInput);\r\n        };\r\n    }, [id, setDrawing, addText, color, lineWidth, fontSize, texts.length, offsetX, sheetHeight, sheetWidth]);\r\n\r\n    let textToDraw = null;\r\n    if (drawing === '') textToDraw = null;\r\n    else if (pointPosition.length === 1) textToDraw = (\r\n        <TextSVG\r\n            pointX = {pointPosition[0].x}\r\n            pointY = {pointPosition[0].y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n    else if (pointPosition.length === 0) textToDraw = (\r\n        <TextSVG\r\n            pointX = {cursorPosition.x}\r\n            pointY = {cursorPosition.y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n\r\n    return (\r\n        textToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedText = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        texts: state.elements.texts,\r\n        color: state.style.color,\r\n        lineWidth: state.style.lineWidth,\r\n        fontSize: state.style.fontSize,\r\n    }),\r\n    {\r\n        addText,\r\n        setDrawing,\r\n    }\r\n)(Text);\r\n\r\nexport default ConnectedText;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Canvas = styled.canvas`\r\n  height: ${props => props.sheetHeight}px;\r\n  width: ${props => props.sheetWidth}px;\r\n  transform: translateY(${props => props.sheetHeight*(-1)}px);\r\n  background-color: transparent;\r\n  z-index: ${props => props.drawing === 'pencil' ? 1 : -1};\r\n  cursor: url(\"https://cdn.glitch.com/3f14db12-a1c8-462c-b3ae-ad21206e72ee%2Fpointer.png?v=1622831727631\"), auto;`;","import React, {useEffect, useRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport {Canvas} from \"./PencilStyles\";\r\n\r\nconst Pencil = ({color, lineWidth, offset, sheetWidth, sheetHeight, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    let canvas = document.getElementById(\"canvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let coord = { x: 0, y: 0 };\r\n\r\n    useEffect(() => {\r\n        resize();\r\n    },[])\r\n\r\n        function reposition(event) {\r\n            coord.x = event.clientX - canvas.offsetLeft - offsetX;\r\n            coord.y = event.clientY - canvas.offsetTop + sheetHeight - offsetY;\r\n        }\r\n        function start(event) {\r\n            document.addEventListener(\"mousemove\", draw);\r\n            reposition(event);\r\n        }\r\n        function stop() {\r\n            document.removeEventListener(\"mousemove\", draw);\r\n        }\r\n        function draw(event) {\r\n            ctx.beginPath();\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.lineCap = \"round\";\r\n            ctx.strokeStyle = color;\r\n            ctx.moveTo(coord.x, coord.y);\r\n            reposition(event);\r\n            ctx.lineTo(coord.x, coord.y);\r\n            ctx.stroke();\r\n        }\r\n        const finishDrawing = (e) => {\r\n            const finish = () => {\r\n                document.removeEventListener(\"mousedown\", start);\r\n                document.removeEventListener(\"mouseup\", stop);\r\n                window.removeEventListener(\"keydown\", finishDrawing);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return finish();\r\n        }\r\n        function resize() {\r\n            ctx.canvas.width = sheetWidth;\r\n            ctx.canvas.height = sheetHeight;\r\n        }\r\n        document.addEventListener(\"mousedown\", start);\r\n        document.addEventListener(\"mouseup\", stop);\r\n        window.addEventListener(\"keydown\", finishDrawing);\r\n\r\n    return null\r\n};\r\n\r\nconst ConnectedPencil = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        lines: state.elements.lines,\r\n        color: state.style.color,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(Pencil);\r\n\r\nexport default ConnectedPencil;","import React from 'react';\r\n\r\nconst ImageSVG = ({id,\r\n                positionX = 0,\r\n                positionY = 0,\r\n                width= 209,\r\n                height= 88,\r\n                href= 'https://cdn.glitch.com/2cef3d17-5f0d-45a1-97f2-e93ce8b3a199%2FWSCAD.png?v=1622829749664',\r\n                onClick}) => {\r\n\r\n    return (\r\n        <image\r\n            id={id}\r\n            href={href}\r\n            x={positionX}\r\n            y={positionY}\r\n            width={width}\r\n            height={height}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default ImageSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addImage, addRect} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport ImageSVG from \"../../sheetElements/image/ImageSVG\";\r\n\r\nconst Image = ({id, offset, sheetWidth, sheetHeight, drawing, setDrawing, addImage}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                if (document.querySelector('input.form__field').value){\r\n                    const image = {};\r\n                    image['point'] = {x: Math.min(pointsValue.current[0].x,pointsValue.current[1].x), y:Math.min(pointsValue.current[0].y,pointsValue.current[1].y)};\r\n                    image['width'] = Math.abs(pointsValue.current[0].x - pointsValue.current[1].x)\r\n                    image['height'] = Math.abs(pointsValue.current[0].y - pointsValue.current[1].y)\r\n                    image['id'] = id;\r\n                    image['href'] = document.querySelector('input.form__field').value;\r\n                    addImage(image);\r\n                }\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            else if (!e) return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [setDrawing, addRect, offsetX, sheetHeight, sheetWidth]);\r\n\r\n    let imageToDraw = null;\r\n    if (drawing === '') imageToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        imageToDraw = (\r\n            <ImageSVG\r\n                positionX = {Math.min(pointsPosition[0].x,pointsPosition[1].x)}\r\n                positionY = {Math.min(pointsPosition[0].y,pointsPosition[1].y)}\r\n                width = {Math.abs(pointsPosition[0].x - pointsPosition[1].x)}\r\n                height = {Math.abs(pointsPosition[0].y - pointsPosition[1].y)}\r\n                href={document.querySelector('input.form__field').value}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        imageToDraw = (\r\n            <ImageSVG\r\n                positionX = {Math.min(pointsPosition[0].x, cursorPosition.x)}\r\n                positionY = {Math.min(pointsPosition[0].y, cursorPosition.y)}\r\n                width = {Math.abs(cursorPosition.x - pointsPosition[0].x)}\r\n                height = {Math.abs(cursorPosition.y - pointsPosition[0].y)}\r\n                href={document.querySelector('input.form__field').value}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        imageToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedImage = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n    }),\r\n    {\r\n        setDrawing,\r\n        addImage,\r\n    }\r\n)(Image);\r\n\r\nexport default ConnectedImage;","import styled from \"styled-components\";\r\n\r\nexport const ImageInputStyled = styled.div`\r\n    position: relative;\r\n    padding: 15px 0 0;\r\n    margin-top: ${props => props.offset/2}px;\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n    width: ${props => props.offset-20}px;\r\n    font-family: sans-serif;\r\n\r\n  & .form__field {\r\n    width: 100%;\r\n    border: 0;\r\n    border-bottom: 2px solid ${({theme}) => theme.font.normal};\r\n    outline: 0;\r\n    font-size: 1.3rem;\r\n    color: #fff;\r\n    padding: 7px 0;\r\n    background: transparent;\r\n    transition: border-color 0.2s;\r\n    border-image: linear-gradient(to right, ${({theme}) => theme.border.normalHover},${({theme}) => theme.border.normal});\r\n    border-image-slice: 1;\r\n\r\n    &::placeholder {\r\n      color: transparent;\r\n    }\r\n\r\n    &:placeholder-shown ~ .form__label {\r\n      font-size: 1.3rem;\r\n      cursor: text;\r\n      top: 20px;\r\n    }\r\n  }\r\n\r\n  & .form__label {\r\n    position: absolute;\r\n    top: 0;\r\n    display: block;\r\n    transition: 0.2s;\r\n    font-size: 1rem;\r\n    color: ${({theme}) => theme.border.normalHover};\r\n  }\r\n\r\n  & .form__field:focus {\r\n    ~ .form__label {\r\n      position: absolute;\r\n      top: 0;\r\n      display: block;\r\n      transition: 0.2s;\r\n      font-size: 1rem;\r\n      color: ${({theme}) => theme.border.normalHover};\r\n      font-weight:700;\r\n    }\r\n    padding-bottom: 6px;\r\n    font-weight: 700;\r\n    border-width: 3px;\r\n  }\r\n\r\n  & .form__field{\r\n    &:required,&:invalid { box-shadow:none; }\r\n  }\r\n`;","import React from 'react';\r\nimport {ImageInputStyled} from \"./ImageInputStyles\";\r\n\r\nconst ImageInput = ({offset}) => {\r\n    return (\r\n        <ImageInputStyled offset={offset} className=\"form__group field\">\r\n            <input type=\"input\" className=\"form__field\" placeholder=\"Img URL\"/>\r\n            <label htmlFor=\"name\" className=\"form__label\">Img URL</label>\r\n        </ImageInputStyled>\r\n    );\r\n};\r\n\r\nexport default ImageInput;\r\n","import React from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    BorderIndicatorElementsWrapper,\r\n    HorizontalBorderIndicatorElement, IndicatorHorizontal, IndicatorVertical,\r\n    VerticalBorderIndicatorElement\r\n} from \"./WrokspaceStyles\";\r\n\r\nconst BorderIndicator = ({sheetWidth, sheetHeight, offset}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const smallerArrayNumbers = [], largerArrayNumbers = [];\r\n    let verticalBorderIndicators = [], horizontalBorderIndicators = [];\r\n\r\n    let indicatorTop = 0;\r\n    let indicatorleft = 0;\r\n    if (cursorPosition.y > sheetHeight) indicatorTop = sheetHeight -2;\r\n    else if (cursorPosition.y < 0) indicatorTop = 0;\r\n    else indicatorTop = cursorPosition.y;\r\n    if (cursorPosition.x > sheetWidth) indicatorleft = sheetWidth - 2;\r\n    else if (cursorPosition.x < 0) indicatorleft = 0;\r\n    else indicatorleft = cursorPosition.x;\r\n\r\n    for(let i = 1; i <30; i++){\r\n        if (i< 22) smallerArrayNumbers.push(i);\r\n        largerArrayNumbers.push(i);\r\n    }\r\n\r\n    // smaller vertical larger horizontal\r\n    if (sheetWidth < sheetHeight) {\r\n        verticalBorderIndicators = largerArrayNumbers.map(number => (\r\n            <VerticalBorderIndicatorElement key={number} width={15} height={sheetHeight/21}>\r\n                {number}\r\n            </VerticalBorderIndicatorElement>\r\n        ))\r\n        horizontalBorderIndicators = smallerArrayNumbers.map(number => (\r\n            <HorizontalBorderIndicatorElement key={number} width={sheetWidth/21} height={15}>\r\n                {number}\r\n            </HorizontalBorderIndicatorElement>\r\n        ))\r\n    }\r\n    // smaller horizontal larger vertical\r\n    else{\r\n        verticalBorderIndicators = smallerArrayNumbers.map(number => (\r\n            <HorizontalBorderIndicatorElement key={number} width={15} height={sheetHeight/29}>\r\n                {number}\r\n            </HorizontalBorderIndicatorElement>\r\n        ))\r\n        horizontalBorderIndicators = largerArrayNumbers.map(number => (\r\n            <VerticalBorderIndicatorElement key={number} width={sheetWidth/21} height={15}>\r\n                {number}\r\n            </VerticalBorderIndicatorElement>\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BorderIndicatorElementsWrapper width={sheetWidth} height={15} offsetX={offsetX} offsetY={offsetY}>\r\n                {horizontalBorderIndicators}\r\n                <IndicatorHorizontal left={indicatorleft}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={sheetWidth} height={15} offsetX={offsetX} offsetY={offsetY+sheetHeight-15}>\r\n                {horizontalBorderIndicators}\r\n                <IndicatorHorizontal left={indicatorleft}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={15} height={sheetHeight} offsetX={offsetX} offsetY={offsetY}>\r\n                {verticalBorderIndicators}\r\n                <IndicatorVertical top={indicatorTop}/>\r\n            </BorderIndicatorElementsWrapper>\r\n            <BorderIndicatorElementsWrapper width={15} height={sheetHeight} offsetX={offsetX+sheetWidth-15} offsetY={offsetY}>\r\n                {verticalBorderIndicators}\r\n                <IndicatorVertical top={indicatorTop}/>\r\n            </BorderIndicatorElementsWrapper>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst ConnectedBorderIndicator = connect(state => ({\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n    })\r\n)(BorderIndicator);\r\n\r\nexport default ConnectedBorderIndicator;\r\n","import React from 'react';\r\nimport {WorkspaceWrapper} from \"./WrokspaceStyles\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport PolyLine from \"../../drawElements/polyLine\";\r\nimport Line from \"../../drawElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport PolyLineSVG from \"../../sheetElements/polyLine\";\r\nimport Sheet from \"./Sheet\";\r\nimport {\r\n    deleteCircle,\r\n    deleteCurve, deleteImage,\r\n    deleteLine,\r\n    deleteRect,\r\n    deleteText\r\n} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\nimport Circle from \"../../drawElements/circle/Circle\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\nimport Rect from \"../../drawElements/rect/Rect\";\r\nimport Curve from \"../../drawElements/curve/Curve\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\nimport Text from \"../../drawElements/text\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\nimport Pencil from \"../../drawElements/pencil\";\r\nimport {Canvas} from \"../../drawElements/pencil/PencilStyles\";\r\nimport ImageSVG from \"../../sheetElements/image/ImageSVG\";\r\nimport Image from \"../../drawElements/image\";\r\nimport ImageInput from \"../../drawElements/image/ImageInput\";\r\nimport BorderIndicator from \"./BorderIndicator\";\r\n\r\nconst Workspace = ({drawing, drawings, indicator,\r\n                       offset, sheetWidth, sheetHeight,\r\n                       deleteImage, deleteLine, deleteCircle, deleteText, deleteRect, deleteCurve}) => {\r\n    const lines = []\r\n    const polyLines = []\r\n    const circles = []\r\n    const rects = []\r\n    const curves = []\r\n    const texts = []\r\n    const images = []\r\n\r\n    const handleOnClick = (id, type) => {\r\n        const onSelect = (id) => {\r\n            console.log('select '+id)\r\n        }\r\n        const onDelete = (id, type) => {\r\n            switch (type) {\r\n                case \"circle\": deleteCircle(id); break;\r\n                case \"rect\": deleteRect(id); break;\r\n                case \"image\": deleteImage(id); break;\r\n                case \"curve\": deleteCurve(id); break;\r\n                case \"text\": deleteText(id); break;\r\n                default: deleteLine(id); break;\r\n            }\r\n        }\r\n        if (drawing === 'select') return onSelect(id);\r\n        else if (drawing === 'delete') return onDelete(id,type);\r\n        else return () => {}\r\n    }\r\n\r\n    Object.entries(drawings).forEach(element => {\r\n        if (element[0] === 'lines'){\r\n            return element[1].forEach((line) => (\r\n                lines.push(<LineSVG\r\n                    id={line.id}\r\n                    key={line.points[0].x*line.points[1].y}\r\n                    color = {line.styles.color}\r\n                    linePattern = {line.styles.pattern}\r\n                    lineWidth = {line.styles.lineWidth}\r\n                    firstPointX = {line.points[0].x}\r\n                    firstPointY = {line.points[0].y}\r\n                    secondPointX = {line.points[1].x}\r\n                    secondPointY = {line.points[1].y}\r\n                    onClick = {() => handleOnClick(line.id, 'line')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'circles'){\r\n            return element[1].forEach((circle) => (\r\n                circles.push(<CircleSVG\r\n                    id={circle.id}\r\n                    key={circle.point.x*circle.point.y}\r\n                    color = {circle.styles.color}\r\n                    fillColor = {circle.styles.fillColor}\r\n                    linePattern = {circle.styles.pattern}\r\n                    lineWidth = {circle.styles.lineWidth}\r\n                    centerX = {circle.point.x}\r\n                    centerY = {circle.point.y}\r\n                    radius = {circle.radius}\r\n                    onClick = {() => handleOnClick(circle.id, 'circle')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'rects'){\r\n            return element[1].forEach((rect) => (\r\n                rects.push(<RectSVG\r\n                    id={rect.id}\r\n                    key={rect.point.x*rect.point.y}\r\n                    color = {rect.styles.color}\r\n                    fillColor = {rect.styles.fillColor}\r\n                    linePattern = {rect.styles.pattern}\r\n                    lineWidth = {rect.styles.lineWidth}\r\n                    positionX = {rect.point.x}\r\n                    positionY = {rect.point.y}\r\n                    width ={rect.width}\r\n                    height ={rect.height}\r\n                    onClick = {() => handleOnClick(rect.id, 'rect')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'images'){\r\n            return element[1].forEach((image) => (\r\n                images.push(<ImageSVG\r\n                    id={image.id}\r\n                    key={image.point.x*image.point.y}\r\n                    positionX = {image.point.x}\r\n                    positionY = {image.point.y}\r\n                    width ={image.width}\r\n                    height ={image.height}\r\n                    href ={image.href}\r\n                    onClick = {() => handleOnClick(image.id, 'image')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'polyLines'){\r\n            return element[1].forEach((polyLine,index) => {\r\n                polyLines.push(<PolyLineSVG\r\n                    id={'polyLine__'+index}\r\n                    key={polyLine.points[0].x*polyLine.points[1].y}\r\n                    color = {polyLine.styles.color}\r\n                    linePattern = {polyLine.styles.pattern}\r\n                    lineWidth = {polyLine.styles.lineWidth}\r\n                    points={polyLine.points}\r\n                    onClick = {(id) => handleOnClick(id, 'line')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'curves'){\r\n            return element[1].forEach((curve) => {\r\n                curves.push(<CurveSVG\r\n                    id={curve.id}\r\n                    key={curve.d}\r\n                    color = {curve.styles.color}\r\n                    fillColor = {curve.styles.fillColor}\r\n                    linePattern = {curve.styles.pattern}\r\n                    lineWidth = {curve.styles.lineWidth}\r\n                    d={curve.d}\r\n                    onClick = {() => handleOnClick(curve.id, 'curve')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'texts'){\r\n            return element[1].forEach((text) => {\r\n                texts.push(<TextSVG\r\n                    id={text.id}\r\n                    key={text.text}\r\n                    color = {text.styles.color}\r\n                    fontSize = {text.styles.fontSize}\r\n                    lineWidth = {text.styles.lineWidth}\r\n                    pointX = {text.point[0].x}\r\n                    pointY = {text.point[0].y}\r\n                    text={text.text}\r\n                    onClick = {() => handleOnClick(text.id, 'text')}\r\n                />)\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <WorkspaceWrapper offset={offset+30} sheetWidth={sheetWidth} sheetHeight={sheetHeight}>\r\n            <TransformWrapper pan={(drawing === 'curve' || drawing === 'pencil') ? {disabled: true} : {disabled: false}}>\r\n                <TransformComponent>\r\n                    <Sheet sheetWidth={sheetWidth} sheetHeight={sheetHeight} drawing={drawing}>\r\n                        {images}\r\n                        {rects}\r\n                        {circles}\r\n                        {texts}\r\n                        {curves}\r\n                        {polyLines}\r\n                        {lines}\r\n                        {drawing === 'image' && <Image id={'image__'+drawings.images.length}/>}\r\n                        {drawing === 'rect' && <Rect id={'rect__'+drawings.rects.length}/>}\r\n                        {drawing === 'circle' && <Circle id={'circle__'+drawings.circles.length}/>}\r\n                        {drawing === 'text' && <Text id={'text__'+drawings.texts.length}/>}\r\n                        {drawing === 'polyLine' && <PolyLine id={'line__'+drawings.lines.length}/>}\r\n                        {drawing === 'line' && <Line id={'line__'+drawings.lines.length}/>}\r\n                    </Sheet>\r\n                    {drawing === 'curve' && <Curve id={'curve__'+drawings.curves.length}/>}\r\n                    {drawing === 'pencil' && <Pencil/>}\r\n                    <Canvas id=\"canvas\" sheetHeight={sheetHeight} sheetWidth={sheetWidth} drawing={drawing}/>\r\n                </TransformComponent>\r\n            </TransformWrapper>\r\n        </WorkspaceWrapper>\r\n        {drawing === 'image' && <ImageInput offset={offset+30}/>}\r\n        {indicator && <BorderIndicator/>}\r\n        </>\r\n    );\r\n};\r\n\r\nconst ConnectedWorkspace = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        drawings: state.elements,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        indicator: state.application.indicator,\r\n    }), {\r\n        deleteLine,\r\n        deleteImage,\r\n        deleteText,\r\n        deleteCircle,\r\n        deleteRect,\r\n        deleteCurve,\r\n    }\r\n)(Workspace);\r\n\r\nexport default ConnectedWorkspace;\r\n","import './App.css';\r\nimport DarkThemeProvider from \"./components/wrappers/darkThemeProvider\";\r\nimport {Provider} from 'react-redux'\r\nimport store from './data/store'\r\nimport {Wrapper} from \"./components/styleComponents/Layout\";\r\nimport Navigation from \"./components/Elements/Navigation\";\r\nimport Logo from \"./components/Elements/Logo\";\r\nimport Workspace from \"./components/Elements/Workspace\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store()}>\r\n          <DarkThemeProvider>\r\n              <Wrapper>\r\n                  <Logo/>\r\n                  <Workspace/>\r\n                  <Navigation/>\r\n              </Wrapper>\r\n          </DarkThemeProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const store = createStore(rootReducer, preloadedState);\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}