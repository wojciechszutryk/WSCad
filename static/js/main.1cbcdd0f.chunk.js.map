{"version":3,"sources":["theme/themes.js","components/wrappers/darkThemeProvider.js","data/constants.js","data/reducers/drawingReducer.js","data/reducers/applicationReducer.js","data/reducers/styleReducer.js","data/reducers/index.js","components/styleComponents/Layout.js","components/Elements/Navigation/NavigationStyles.js","data/actions/applicationActions/applicationActions.js","components/styleComponents/ButtonStyles.js","components/Elements/Navigation/AppSettings.js","components/sheetElements/line/LineSVG.js","components/styleComponents/Select/SelectStyle.js","components/styleComponents/Select/Select.js","components/styleComponents/Inputs.js","components/Elements/Navigation/StyleSettings.js","data/actions/styleActions/styleActions.js","components/Elements/Navigation/DrawingOptions.js","components/Elements/Navigation/Navigation.js","components/Elements/Logo/LogoStyles.js","components/Elements/Logo/Logo.js","components/Elements/Workspace/WrokspaceStyles.js","hooks/useMousePosition.js","data/actions/drawingActions/drawingActions.js","components/drawElements/polyLine/PolyLine.js","components/drawElements/line/Line.js","components/sheetElements/polyLine/PolyLineSVG.js","components/Elements/Workspace/Sheet.js","components/sheetElements/circle/CircleSVG.js","components/drawElements/circle/Circle.js","components/sheetElements/rect/RectSVG.js","components/drawElements/rect/Rect.js","components/drawElements/curve/CurveStyles.js","components/sheetElements/curve/CurveSVG.js","components/drawElements/curve/Curve.js","components/sheetElements/text/TextSVG.js","components/drawElements/text/Text.js","components/Elements/Workspace/Workspace.js","App.js","data/store.js","reportWebVitals.js","index.js"],"names":["darkTheme","background","normal","normalHover","dark","darkHover","border","color","icon","hover","font","paper","lightTheme","DarkThemeProvider","children","darkThemeEnabled","useSelector","state","application","theme","LINE_ADD","CIRCLE_ADD","RECT_ADD","CURVE_ADD","TEXT_ADD","LINE_DELETE","CIRCLE_DELETE","RECT_DELETE","CURVE_DELETE","TEXT_DELETE","THEME_TOGGLE","SET_SHEET_WIDTH","SET_SHEET_HEIGHT","SET_DRAWING","SET_FONT_SIZE","SET_COLOR","SET_PATTERN","SET_LINE_WIDTH","SET_FILL","startElements","lines","circles","rects","curves","texts","elements","action","type","payload","filter","line","id","circle","rect","curve","text","startState","drawing","sheetOffset","Math","min","window","innerWidth","sheetWidth","innerHeight","sheetHeight","fontSize","fill","pattern","lineWidth","style","rootReducer","combineReducers","Wrapper","styled","div","NavigationWrapper","section","Dragger","Minimizer","button","ButtonsWrapper","StyleInfo","setDrawing","element","ParentButton","NormalButton","SetDarkButton","SetLightButton","ConnectedAppSettings","connect","themeToggle","resetMinimized","handleThemeChange","onClick","faCloud","faSun","faMoon","LineSVG","linePattern","firstPointX","firstPointY","secondPointX","secondPointY","lineStyle","useMemo","stroke","strokeWidth","strokeDasharray","x1","y1","x2","y2","Options","OptionItem","svg","props","left","Select","options","useState","optionsVisible","setOptionsVisible","opt","map","onSelect","ParentInput","input","ColorInput","NumberInput","ConnectedStyleSettings","setFontSize","size","setColor","setFill","setPattern","setLineWidth","width","setC","setFz","setP","setLw","setF","fillFocus","setFillFocus","colorFocus","setColorFocus","patternOptions","handlePatternSelect","lineWidthOptions","handleLineWidthSelect","onChange","e","target","value","className","max","placeholder","faBorderStyle","faSlidersH","ConnectedDrawingOptions","faMousePointer","faTrash","faGripLines","faDrawPolygon","faBezierCurve","faUnderline","faSquare","faCircle","faPencilAlt","faImage","dragElement","elem","pos1","pos2","pos3","pos4","dragMouseDown","event","preventDefault","opacity","clientX","clientY","document","onmouseup","closeDragElement","onmousemove","elementDrag","top","offsetTop","offsetLeft","getElementById","onmousedown","Navigation","minimized","setMinimized","useEffect","toggleMinimized","name","menu","transition","stateCopy","index","parseInt","slice","classList","toggle","setTimeout","faDraftingCompass","faCompress","faCog","faFileImage","faPalette","StyledLogo","ConnectedLogo","SheetStyles","cursorOverall","cursorHover","WorkspaceWrapper","offset","useMousePosition","offsetX","offsetY","x","y","position","setPosition","setFromEvent","addEventListener","removeEventListener","addLine","ConnectedPolyLine","polyLines","cursorPosition","pointsValue","useRef","pointsPosition","setPointsPosition","current","push","stopDrawing","code","length","forEach","point","styles","linesToDraw","ConnectedLine","finish","lineToDraw","PolyLineSVG","points","Sheet","height","CircleSVG","centerX","centerY","radius","fillColor","circleStyle","cx","cy","r","ConnectedCircle","addCircle","sqrt","abs","circleToDraw","RectSVG","positionX","positionY","radiusX","radiusY","rectStyle","rx","ry","ConnectedRect","addRect","rectToDraw","StyledCurve","CurveSVG","d","curveStyle","ConnectedCurve","addCurve","curveD","container","cType","dPoint","drag","DrawSVG","l1","setAttributeNS","p1","c1","c2","l2","p2","textContent","Drag","stopPropagation","t","et","m","pageX","pageY","handleCurve","c","getElementsByTagName","i","getAttributeNS","ontouchstart","ontouchmove","ontouchend","Init","TextSVG","pointX","pointY","writing","fontWeight","fontStyle","ConnectedText","addText","textToWrite","setTextState","pointPosition","setPointPosition","handleKeyInput","escapeFunction","key","setText","textToDraw","ConnectedWorkspace","drawings","deleteLine","deleteText","deleteCircle","deleteRect","deleteCurve","handleOnClick","console","log","onDelete","Object","entries","polyLine","pan","disabled","App","store","createStore","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1cbcdd0f.chunk.js","sourcesContent":["export const darkTheme = {\r\n    background: {\r\n        normal: 'rgb(50,56,84)',\r\n        normalHover: 'rgb(70,76,94)',\r\n        dark: 'rgb(31,40,57)',\r\n        darkHover: 'rgb(31,40,57)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(104,49,157)',\r\n        normalHover: 'rgb(144,89,197)',\r\n        dark: 'rgb(72, 61, 139)',\r\n        darkHover: 'rgb(118,57,177)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(104,49,157)',\r\n        dark: 'rgb(89,41,131)'\r\n    },\r\n    icon: {\r\n        normal: 'rgb(42,11,57)',\r\n        hover: 'rgb(0,0,0)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(222,168,255)'\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(222,168,255)'\r\n    }\r\n};\r\n\r\nexport const lightTheme = {\r\n    background: {\r\n        normal: 'rgb(166, 166, 166)',\r\n        normalHover: 'rgb(140, 140, 140)',\r\n        dark: 'rgb(100, 100, 100)',\r\n        darkHover: 'rgb(140, 140, 140)',\r\n    },\r\n    border: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        normalHover: 'rgb(185, 53, 44)',\r\n        dark: 'rgb(215, 83, 54)',\r\n        darkHover: 'rgb(135, 23, 14)'\r\n    },\r\n    color: {\r\n        normal: 'rgb(252, 110, 81)',\r\n        dark: 'rgb(235, 93, 64)'\r\n    },\r\n    icon: {\r\n        normal: 'rgb(74,67,67)',\r\n        hover: 'rgb(41,37,37)'\r\n    },\r\n    font: {\r\n        normal: 'rgb(74,67,67)'\r\n    },\r\n    paper: {\r\n        normal: 'rgb(255,255,255)',\r\n        hover: 'rgb(255,171,156)',\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {darkTheme, lightTheme} from \"../../theme/themes\";\r\n\r\nconst DarkThemeProvider = ({ children }) => {\r\n    const darkThemeEnabled = useSelector((state) => state.application.darkTheme);\r\n    return (\r\n        <ThemeProvider theme={darkThemeEnabled ? darkTheme : lightTheme}>\r\n            {children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default DarkThemeProvider;","export const LINE_ADD = \"LINE_ADD\";\r\nexport const CIRCLE_ADD = \"CIRCLE_ADD\";\r\nexport const RECT_ADD = \"RECT_ADD\";\r\nexport const CURVE_ADD = \"CURVE_ADD\";\r\nexport const TEXT_ADD = \"TEXT_ADD\";\r\nexport const LINE_DELETE = \"LINE_DELETE\";\r\nexport const CIRCLE_DELETE = \"CIRCLE_DELETE\";\r\nexport const RECT_DELETE = \"RECT_DELETE\";\r\nexport const CURVE_DELETE = \"CURVE_DELETE\";\r\nexport const TEXT_DELETE = \"TEXT_DELETE\";\r\n\r\nexport const THEME_TOGGLE = \"THEME_TOGGLE\";\r\nexport const SET_SHEET_WIDTH = \"SET_SHEET_WIDTH\";\r\nexport const SET_SHEET_HEIGHT = \"SET_SHEET_HEIGHT\";\r\nexport const SET_DRAWING = \"SET_DRAWING\";\r\n\r\nexport const SET_FONT_SIZE = \"SET_FONT_SIZE\";\r\nexport const SET_COLOR = \"SET_COLOR\";\r\nexport const SET_PATTERN = \"SET_PATTERN\";\r\nexport const SET_LINE_WIDTH = \"SET_LINE_WIDTH\";\r\nexport const SET_FILL = \"SET_FILL\";","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE,\r\n    CURVE_ADD,\r\n    CURVE_DELETE,\r\n    LINE_ADD,\r\n    LINE_DELETE,\r\n    RECT_ADD,\r\n    RECT_DELETE, TEXT_ADD, TEXT_DELETE\r\n} from \"../constants\";\r\n\r\nconst startElements = {\r\n    lines: [],\r\n    circles: [],\r\n    rects: [],\r\n    curves: [],\r\n    texts: [],\r\n}\r\n\r\nconst elements = (state= startElements, action) => {\r\n    switch (action.type) {\r\n        case LINE_ADD:\r\n            return {\r\n                ...state,\r\n                lines: [\r\n                    action.payload,\r\n                    ...state.lines,\r\n                ]\r\n            }\r\n        case CIRCLE_ADD:\r\n            return {\r\n                ...state,\r\n                circles: [\r\n                    action.payload,\r\n                    ...state.circles,\r\n                ]\r\n            }\r\n        case RECT_ADD:\r\n            return {\r\n                ...state,\r\n                rects: [\r\n                    action.payload,\r\n                    ...state.rects,\r\n                ]\r\n            }\r\n        case CURVE_ADD:\r\n            return {\r\n                ...state,\r\n                curves: [\r\n                    action.payload,\r\n                    ...state.curves,\r\n                ]\r\n            }\r\n        case TEXT_ADD:\r\n            return {\r\n                ...state,\r\n                texts: [\r\n                    action.payload,\r\n                    ...state.texts,\r\n                ]\r\n            }\r\n        case LINE_DELETE:\r\n            return {\r\n                ...state,\r\n                lines: state.lines.filter(line => line.id !== action.payload),\r\n            }\r\n        case CIRCLE_DELETE:\r\n            return {\r\n                ...state,\r\n                circles: state.circles.filter(circle => circle.id !== action.payload),\r\n            }\r\n        case RECT_DELETE:\r\n            return {\r\n                ...state,\r\n                rects: state.rects.filter(rect => rect.id !== action.payload),\r\n            }\r\n        case CURVE_DELETE:\r\n            return {\r\n                ...state,\r\n                curves: state.curves.filter(curve => curve.id !== action.payload),\r\n            }\r\n        case TEXT_DELETE:\r\n            return {\r\n                ...state,\r\n                texts: state.texts.filter(text => text.id !== action.payload),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default elements;","import {SET_DRAWING, SET_SHEET_HEIGHT, SET_SHEET_WIDTH, THEME_TOGGLE} from \"../constants\";\r\n\r\nconst startState = {\r\n    drawing: '',\r\n    darkTheme: true,\r\n    sheetOffset: Math.min(window.innerWidth*0.2, 200),\r\n    sheetWidth: (window.innerHeight-20)/1.4142857,\r\n    sheetHeight: (window.innerHeight-20),\r\n}\r\n\r\nconst application = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_DRAWING:\r\n            return {\r\n                ...state,\r\n                drawing: action.payload,\r\n            }\r\n\r\n        case THEME_TOGGLE:\r\n            return {\r\n                ...state,\r\n                darkTheme: !state.darkTheme\r\n            }\r\n\r\n        case SET_SHEET_WIDTH:\r\n            return {\r\n                ...state,\r\n                sheetWidth: action.payload,\r\n            }\r\n\r\n        case SET_SHEET_HEIGHT:\r\n            return {\r\n                ...state,\r\n                sheetHeight: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default application;","import {SET_COLOR, SET_FILL, SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN} from \"../constants\";\r\n\r\nconst startState = {\r\n    fontSize: 16,\r\n    color: '#000000',\r\n    fill: 'transparent',\r\n    pattern: '',\r\n    lineWidth: 1,\r\n}\r\n\r\nconst style = (state= startState, action) => {\r\n    switch (action.type) {\r\n        case SET_FONT_SIZE:\r\n            return {\r\n                ...state,\r\n                fontSize: action.payload,\r\n            }\r\n        case SET_COLOR:\r\n            return {\r\n                ...state,\r\n                color: action.payload,\r\n            }\r\n        case SET_FILL:\r\n            return {\r\n                ...state,\r\n                fill: action.payload,\r\n            }\r\n        case SET_PATTERN:\r\n            return {\r\n                ...state,\r\n                pattern: action.payload,\r\n            }\r\n        case SET_LINE_WIDTH:\r\n            return {\r\n                ...state,\r\n                lineWidth: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default style;","import {combineReducers} from 'redux';\r\nimport elements from './drawingReducer';\r\nimport application from \"./applicationReducer\";\r\nimport style from \"./styleReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    elements,\r\n    application,\r\n    style,\r\n});\r\n\r\nexport default rootReducer;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-width: 100vw;\r\n  height: 100vh;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const NavigationWrapper = styled.section`\r\n  position: absolute;\r\n  top: 50px;\r\n  left: calc(100% - 260px);\r\n  width: 210px;\r\n  height: 84px;\r\n  background-color: ${({theme}) => theme.background.dark};\r\n  border: 3px solid ${({theme}) => theme.border.normal};\r\n  transition: 0s;\r\n  \r\n  &:nth-child(2){\r\n    top: calc(100% - 200px);\r\n    left: calc(100% - 150px);\r\n    width: 100px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(3){\r\n    top: calc(100% - 350px);\r\n    left: calc(100% - 250px);\r\n    width: 200px;\r\n    height: 50px;\r\n  }\r\n\r\n  &:nth-child(4){\r\n    top: calc(100% - 500px);\r\n    left: calc(100% - 260px);\r\n    width: 210px;\r\n    height: 50px;\r\n  }\r\n  \r\n  &.minimized{\r\n    top: calc(100% - 30px) !important;\r\n    left: calc(100% - 150px) !important;\r\n    width: 50px;\r\n    height: 30px;\r\n    border-top-left-radius: 40px;\r\n    border-top-right-radius: 40px;\r\n    border-bottom: none;\r\n    cursor: pointer;\r\n    \r\n    &:nth-child(2){\r\n      left: calc(100% - 80px) !important;\r\n    }\r\n\r\n    &:nth-child(3){\r\n      left: calc(100% - 220px) !important;\r\n    }\r\n\r\n    &:nth-child(4){\r\n      left: calc(100% - 290px) !important;\r\n    }\r\n\r\n    &:hover{\r\n      transform: translate(-5px,-5px);\r\n      background-color: ${({theme}) => theme.background.darkHover};\r\n      width: 60px;\r\n      height: 35px;\r\n      border-width: 4px;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n    }\r\n    & *{\r\n      display: none;\r\n    }\r\n    & button:first-child {\r\n      display: block;\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-top-left-radius: 40px;\r\n      border-top-right-radius: 40px;\r\n      background-color: transparent;\r\n      font-size: 20px;\r\n      transition: .1s;\r\n      color: ${({theme}) => theme.color.normal};\r\n      &:hover{\r\n        background-color: ${({theme}) => theme.background.darkHover};\r\n        color: ${({theme}) => theme.color.dark};\r\n        font-size: 23px;\r\n      }\r\n      & svg{\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        & path{\r\n          display: block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Dragger = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 20px;\r\n  cursor: all-scroll;\r\n  background-color: ${({theme}) => theme.color.normal};\r\n  opacity: 1;\r\n  transition: opacity .1s;\r\n`;\r\n\r\nexport const Minimizer = styled.button`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 20px;\r\n  width: 20px;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.border.normal};\r\n  color: ${({theme}) => theme.icon.normal};\r\n  opacity: 1;\r\n  transition: .1s;\r\n  &:hover{\r\n    background-color: ${({theme}) => theme.border.darkHover};\r\n    color: ${({theme}) => theme.icon.hover};\r\n    font-size: 0.1rem;\r\n  }\r\n  & svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    & path {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 8px 5px;\r\n`;\r\n\r\nexport const StyleInfo = styled.div`\r\n  position: absolute;\r\n  top: -50px;\r\n  background-color: ${({theme}) => theme.background.normal};\r\n  color: ${({theme}) => theme.font.normal};\r\n  display: inline-block;\r\n  width: 84px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  text-align: center;\r\n  line-height: 34px;\r\n  transition: .1s;\r\n  font-family: roboto, sans-serif;\r\n  font-size: 12px;\r\n  &.firstStyle{\r\n    top: -90px;\r\n    left: -30px;\r\n  }\r\n  &.secondStyle{\r\n    left: -30px;\r\n    cursor: pointer;\r\n    background-color: ${({theme}) => theme.background.normalHover};\r\n  }\r\n  &.thirdStyle{\r\n    top: -90px;\r\n    left: 120px;\r\n  }\r\n  &.fourthStyle{\r\n    left: 120px;\r\n    cursor: pointer;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.background.normalHover};\r\n    }\r\n  }\r\n`;","import {SET_DRAWING, SET_SHEET_HEIGHT, SET_SHEET_WIDTH, THEME_TOGGLE} from \"../../constants\";\r\n\r\nexport const setDrawing = element => {\r\n    return{\r\n        type: SET_DRAWING,\r\n        payload: element\r\n    }\r\n};\r\n\r\nexport const themeToggle = () => {\r\n    return{\r\n        type: THEME_TOGGLE,\r\n    }\r\n};\r\n\r\nexport const setSheetWidth = width => {\r\n    return{\r\n        type: SET_SHEET_WIDTH,\r\n        payload: width\r\n    }\r\n};\r\n\r\nexport const setSheetHeight = height => {\r\n    return{\r\n        type: SET_SHEET_HEIGHT,\r\n        payload: height\r\n    }\r\n};","import styled from 'styled-components';\r\n\r\nconst ParentButton = styled.button`\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n`;\r\n\r\nexport const NormalButton = styled.button`\r\n  background-color: transparent;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 34px;\r\n  height: 34px;\r\n  margin-right: 3px;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transition: .1s;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n\r\n  &:hover svg.innerIcon{\r\n    color: ${({theme}) => theme.border.normalHover};\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  \r\n  &.selected{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n    & svg.innerIcon{\r\n      color: ${({theme}) => theme.border.normalHover};\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SetDarkButton = styled(ParentButton)`\r\n    background-color: transparent;\r\n    color: ${({theme}) => theme.color.normal};\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 34px;\r\n    height: 34px;\r\n    margin-right: 3px;\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    border-radius: 20%;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    & svg:first-child{\r\n        position: absolute;\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        position: absolute;\r\n        left: 5px;\r\n        top: 5px;\r\n        transition: left .1s, font-size .15s;\r\n        font-size: 20px;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(78, 96, 110)\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(232, 228, 153);\r\n        left: 8px;\r\n        font-size: 30px;\r\n    }\r\n`;\r\n\r\nexport const SetLightButton = styled(SetDarkButton)`\r\n    background-color: transparent;\r\n    & svg:first-child{\r\n        top: 40%;\r\n        left: -20px;\r\n        transition: left .1s;\r\n        z-index: 1;\r\n    }\r\n    & svg:nth-child(2){\r\n        transition: left .1s, transform .2s;\r\n    }\r\n    &:hover{\r\n        background-color: rgb(171, 212, 245);\r\n    }\r\n    &:hover svg:first-child{\r\n        color: white;\r\n        left: 2px;\r\n    }\r\n    &:hover svg:nth-child(2){\r\n        color: rgb(247, 244, 143);\r\n        transform-origin: center;\r\n        transform: rotate(60deg);\r\n        font-size: 20px;\r\n    }\r\n`;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCloud} from '@fortawesome/free-solid-svg-icons'\r\nimport {connect} from \"react-redux\";\r\nimport {themeToggle} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport {SetDarkButton, SetLightButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {faMoon, faSun} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\n\r\nconst AppSettings = ({darkTheme, themeToggle, resetMinimized}) => {\r\n    const handleThemeChange = () => {\r\n        themeToggle();\r\n        resetMinimized([false, false, false, false]);\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            {darkTheme ?\r\n                <SetLightButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faSun} /></SetLightButton> :\r\n                <SetDarkButton onClick={handleThemeChange}><FontAwesomeIcon icon={faCloud} /><FontAwesomeIcon icon={faMoon} /></SetDarkButton>\r\n            }\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedAppSettings = connect(state => ({\r\n        darkTheme: state.application.darkTheme,}),\r\n    {\r\n        themeToggle,\r\n    }\r\n)(AppSettings);\r\n\r\nexport default ConnectedAppSettings;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst LineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                firstPointX = 0,\r\n                firstPointY = 0,\r\n                secondPointX = 0,\r\n                secondPointY = 0,\r\n                onClick}) => {\r\n\r\n    const lineStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n    }), [color, lineWidth, linePattern]);\r\n\r\n    return (\r\n        <line\r\n            id={id}\r\n            x1={firstPointX}\r\n            y1={firstPointY}\r\n            x2={secondPointX}\r\n            y2={secondPointY}\r\n            style={lineStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default LineSVG;\r\n","import styled from 'styled-components';\r\n\r\nexport const Options = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  left: 0;\r\n`;\r\n\r\nexport const OptionItem = styled.svg`\r\n    position: fixed;\r\n    width: 100px;\r\n    height: 30px;\r\n    background-color: ${({theme}) => theme.paper.normal};\r\n    //transform: translateX(-35px);\r\n    transform: ${props => props.left ? 'translateX(-70px)' : 'translateX(0)'};\r\n    border: 2px solid ${({theme}) => theme.border.normal};\r\n    z-index: 1;\r\n    &:hover{\r\n      background-color: ${({theme}) => theme.paper.hover};\r\n    }\r\n    &:first-child{\r\n      transform: ${props => props.left ? 'translate(-70px, 0)' : 'translate(0, 0)'};\r\n    }\r\n    &:nth-child(2){\r\n      transform: ${props => props.left ? 'translate(-70px, 30px)' : 'translate(0, 30px)'};\r\n    }\r\n    &:nth-child(3){\r\n      transform: ${props => props.left ? 'translate(-70px, 60px)' : 'translate(0, 60px)'};\r\n    }\r\n    &:nth-child(4){\r\n      transform: ${props => props.left ? 'translate(-70px, 90px)' : 'translate(0, 90px)'};\r\n    }\r\n    & line{\r\n      transform: translate(15px, 15px);\r\n    }\r\n`;","import React, {useState} from 'react';\r\nimport {OptionItem, Options} from \"./SelectStyle\";\r\nimport {NormalButton} from \"../ButtonStyles\";\r\n\r\nconst Select = ({options, left=false, children}) => {\r\n    const [optionsVisible, setOptionsVisible] = useState(false);\r\n    const toggleOptions = () => {\r\n        setOptionsVisible(!optionsVisible);\r\n    }\r\n    const opt = options.map(opt => (\r\n        <OptionItem onClick={opt.onSelect} left={left} key={opt.onSelect}>\r\n            <svg>\r\n                {opt.line}\r\n            </svg>\r\n        </OptionItem>\r\n    ));\r\n    return (\r\n        <>\r\n            <NormalButton onClick={toggleOptions}>\r\n                {children}\r\n                {optionsVisible ?\r\n                    <Options>\r\n                        {opt}\r\n                    </Options>\r\n                    : null}\r\n            </NormalButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\nconst ParentInput = styled.input`\r\n  background-color: transparent;\r\n  padding: 0;\r\n  color: ${({theme}) => theme.color.normal};\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 0 3px 0 0;\r\n  border: 2px solid ${({theme}) => theme.border.normal};\r\n  border-radius: 20%;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:hover{\r\n    border: 2px solid ${({theme}) => theme.border.normalHover};\r\n  }\r\n`;\r\n\r\nexport const ColorInput = styled(ParentInput)`\r\n  position: relative;\r\n`;\r\n\r\nexport const NumberInput = styled(ParentInput)`\r\n  text-align: center;\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;","import React, {useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setColor,\r\n    setFill,\r\n    setFontSize,\r\n    setLineWidth,\r\n    setPattern\r\n} from \"../../../data/actions/styleActions/styleActions\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport Select from \"../../styleComponents/Select/Select\";\r\nimport {ColorInput, NumberInput} from \"../../styleComponents/Inputs\";\r\nimport {ButtonsWrapper, StyleInfo} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBorderStyle, faSlidersH} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst StyleSettings = ({color, fontSize, pattern, lineWidth, fill,\r\n                       setFontSize, setColor, setPattern, setLineWidth, setFill}) => {\r\n\r\n    const [, setC] = useState(color);\r\n    const [, setFz] = useState(fontSize);\r\n    const [, setP] = useState(pattern);\r\n    const [, setLw] = useState(lineWidth);\r\n    const [, setF] = useState(fill);\r\n    const [fillFocus, setFillFocus] = useState(false);\r\n    const [colorFocus, setColorFocus] = useState(false);\r\n\r\n    const patternOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'5'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect(\"5\") },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'10'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('10') },\r\n        { line: <LineSVG\r\n                color={color} linePattern={'20'} lineWidth={lineWidth} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handlePatternSelect('20') },\r\n    ]\r\n\r\n    const lineWidthOptions = [\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={1} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(1) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={2} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(2) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={5} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(5) },\r\n        { line: <LineSVG\r\n                color={color} linePattern={''} lineWidth={10} firstPointX={0} firstPointY={0} secondPointX={70} secondPointY={0}\r\n            />, onSelect: () => handleLineWidthSelect(10) },\r\n    ]\r\n    const handlePatternSelect = (pattern) => {\r\n        setP(pattern)\r\n        setPattern(pattern)\r\n    }\r\n    const handleLineWidthSelect = (pattern) => {\r\n        setLw(pattern)\r\n        setLineWidth(pattern)\r\n    }\r\n    const handleColorChange = (e) => {\r\n        setC(e.target.value)\r\n        setColor(e.target.value)\r\n        setColorFocus(false)\r\n    }\r\n    const handleFillChange = (e) => {\r\n        setF(e.target.value)\r\n        setFill(e.target.value)\r\n        setFillFocus(false)\r\n    }\r\n    const handleFontSizeChange = (e) => {\r\n        setFz(e.target.value)\r\n        setFontSize(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <ButtonsWrapper>\r\n            <ColorInput type=\"color\" onChange={handleColorChange} value={color} onClick={() => {setColorFocus(!colorFocus)}}/>\r\n                {colorFocus ? <StyleInfo className={'firstStyle'} onClick={() => {setColorFocus(false)}}>Line Color</StyleInfo> : null}\r\n                {colorFocus ? <StyleInfo className={'secondStyle'} onClick={() => {setColor('transparent'); setColorFocus(false)}}>Transparent</StyleInfo> : null}\r\n            <NumberInput type=\"number\" min={0} max={72} placeholder={'T'} onChange={handleFontSizeChange}/>\r\n            <Select options={patternOptions} left={true}>\r\n                <FontAwesomeIcon icon={faBorderStyle} className={'innerIcon'}/>\r\n            </Select>\r\n            <Select options={lineWidthOptions}>\r\n                <FontAwesomeIcon icon={faSlidersH} className={'innerIcon'}/>\r\n            </Select>\r\n            <ColorInput type=\"color\" onChange={handleFillChange} value={fill} onClick={() => {setFillFocus(!fillFocus)}}/>\r\n                {fillFocus ? <StyleInfo className={'thirdStyle'} onClick={() => {setFillFocus(false)}}>Fill Color</StyleInfo> : null}\r\n                {fillFocus ? <StyleInfo className={'fourthStyle'} onClick={() => {setFill('transparent'); setFillFocus(false)}}>Transparent</StyleInfo> : null}\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedStyleSettings = connect(state => ({\r\n        color: state.style.color,\r\n        fill: state.style.fill,\r\n        fontSize: state.style.fontSize,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        setFontSize,\r\n        setColor,\r\n        setFill,\r\n        setPattern,\r\n        setLineWidth\r\n    }\r\n)(StyleSettings);\r\n\r\nexport default ConnectedStyleSettings;\r\n","import {\r\n    SET_COLOR, SET_FILL,\r\n    SET_FONT_SIZE, SET_LINE_WIDTH, SET_PATTERN\r\n\r\n} from '../../constants';\r\n\r\nexport const setFontSize = size => {\r\n    return{\r\n        type: SET_FONT_SIZE,\r\n        payload: size\r\n    }\r\n};\r\n\r\nexport const setColor = color => {\r\n    return{\r\n        type: SET_COLOR,\r\n        payload: color\r\n    }\r\n};\r\n\r\nexport const setFill = fill => {\r\n    return{\r\n        type: SET_FILL,\r\n        payload: fill\r\n    }\r\n};\r\n\r\nexport const setPattern = pattern => {\r\n    return{\r\n        type: SET_PATTERN,\r\n        payload: pattern\r\n    }\r\n};\r\n\r\nexport const setLineWidth = width => {\r\n    return{\r\n        type: SET_LINE_WIDTH,\r\n        payload: width\r\n    }\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ButtonsWrapper} from \"./NavigationStyles\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faGripLines,\r\n    faTrash,\r\n    faImage,\r\n    faPencilAlt,\r\n    faDrawPolygon,\r\n    faBezierCurve,\r\n    faSquare,\r\n    faCircle,\r\n    faMousePointer,\r\n    faUnderline\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {NormalButton} from \"../../styleComponents/ButtonStyles\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst DrawingOptions = ({setDrawing, drawing}) => {\r\n    return (\r\n        <ButtonsWrapper>\r\n            <NormalButton className={drawing === 'select' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faMousePointer} onClick={() => setDrawing('select')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'delete' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faTrash} onClick={() => setDrawing('delete')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'line' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faGripLines} onClick={() => setDrawing('line')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'polyLine' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faDrawPolygon} onClick={() => setDrawing('polyLine')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'curve' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faBezierCurve} onClick={() => setDrawing('curve')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'text' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faUnderline} onClick={() => setDrawing('text')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'rect' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faSquare} onClick={() => setDrawing('rect')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'circle' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faCircle} onClick={() => setDrawing('circle')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'pencil' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faPencilAlt} onClick={() => setDrawing('pencil')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n            <NormalButton className={drawing === 'image' ? 'selected' : null}>\r\n                <FontAwesomeIcon icon={faImage} onClick={() => setDrawing('image')} className={'innerIcon'}/>\r\n            </NormalButton>\r\n        </ButtonsWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedDrawingOptions = connect(state => ({\r\n        drawing: state.application.drawing,\r\n    }),\r\n    {\r\n\r\n        setDrawing,\r\n    }\r\n)(DrawingOptions);\r\n\r\nexport default ConnectedDrawingOptions;","import React, {useEffect, useState} from 'react';\r\nimport {Dragger, Minimizer, NavigationWrapper} from \"./NavigationStyles\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faDraftingCompass, faCompress, faCog, faPalette} from '@fortawesome/free-solid-svg-icons'\r\nimport AppSettings from \"./AppSettings\";\r\nimport {faFileImage} from \"@fortawesome/free-regular-svg-icons\";\r\nimport StyleSettings from \"./StyleSettings\";\r\nimport DrawingOptions from \"./DrawingOptions\";\r\n\r\nfunction dragElement(elem) {\r\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\r\n    if (document.getElementById(elem.id + \"Dragger\")) document.getElementById(elem.id + \"Dragger\").onmousedown = dragMouseDown;\r\n    else elem.onmousedown = dragMouseDown;\r\n\r\n    function dragMouseDown(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        elem.style.opacity = '0.7'\r\n\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n\r\n        document.onmousemove = elementDrag;\r\n    }\r\n\r\n    function elementDrag(e) {\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n\r\n        elem.style.top = (elem.offsetTop - pos2) + \"px\";\r\n        elem.style.left = (elem.offsetLeft - pos1) + \"px\";\r\n    }\r\n\r\n    function closeDragElement() {\r\n        elem.style.opacity = '1'\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n    }\r\n}\r\n\r\nconst Navigation = () => {\r\n    const [minimized, setMinimized] = useState([false, false, false, false]);\r\n\r\n    useEffect(() => {\r\n        dragElement(document.getElementById(\"navigation1\"));\r\n        dragElement(document.getElementById(\"navigation2\"));\r\n        dragElement(document.getElementById(\"navigation3\"));\r\n        dragElement(document.getElementById(\"navigation4\"));\r\n    },[])\r\n\r\n    const toggleMinimized = (name) => {\r\n        const menu = document.getElementById(name);\r\n        menu.style.transition = '.5s';\r\n        const stateCopy = [...minimized];\r\n        const index = parseInt(name.slice(-1)) - 1;\r\n        stateCopy[index] = !minimized[index];\r\n        setMinimized(stateCopy);\r\n        menu.classList.toggle('minimized');\r\n        setTimeout(function(){ menu.style.transition = '0s'; }, 500);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            {/*Drawing*/}\r\n            <NavigationWrapper id={\"navigation1\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation1\")}>\r\n                    {minimized[0] ?\r\n                        <FontAwesomeIcon icon={faDraftingCompass} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation1Dragger\"/>\r\n                <DrawingOptions/>\r\n            </NavigationWrapper>\r\n            {/*AppSettings*/}\r\n            <NavigationWrapper id={\"navigation2\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation2\")}>\r\n                    {minimized[1] ?\r\n                        <FontAwesomeIcon icon={faCog} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation2Dragger\"/>\r\n                <AppSettings resetMinimized={setMinimized}/>\r\n            </NavigationWrapper>\r\n            {/*PageSettings*/}\r\n            <NavigationWrapper id={\"navigation3\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation3\")}>\r\n                    {minimized[2] ?\r\n                        <FontAwesomeIcon icon={faFileImage} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation3Dragger\"/>\r\n                <AppSettings resetMinimized={setMinimized}/>\r\n            </NavigationWrapper>\r\n            {/*Styles*/}\r\n            <NavigationWrapper id={\"navigation4\"}>\r\n                <Minimizer onClick={() => toggleMinimized(\"navigation4\")}>\r\n                    {minimized[3] ?\r\n                        <FontAwesomeIcon icon={faPalette} />:\r\n                        <FontAwesomeIcon icon={faCompress} />}\r\n                </Minimizer>\r\n                <Dragger id=\"navigation4Dragger\"/>\r\n                <StyleSettings/>\r\n            </NavigationWrapper>\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLogo = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 15px;\r\n  opacity: 0.5;\r\n  font-size: ${props => (props.width)/3}px;\r\n  width: ${props => props.width}px;\r\n  & span:first-child{\r\n    color: ${({theme}) => theme.color.normal};\r\n    font-family: 'Trebuchet MS' , Roboto, sans-serif;\r\n    font-weight: 500;\r\n  }\r\n  & span:nth-child(2){\r\n    color: ${({theme}) => theme.color.dark};\r\n    font-family: 'Brush Script MT', serif;\r\n  }\r\n`;","import React from 'react';\r\nimport {StyledLogo} from \"./LogoStyles\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Logo = ({width}) => {\r\n    return (\r\n        <StyledLogo width={width}>\r\n            <span>WS</span>\r\n            <span>Cad</span>\r\n        </StyledLogo>\r\n    );\r\n};\r\n\r\nconst ConnectedLogo = connect(state => ({\r\n        width: state.application.sheetOffset,\r\n    }),null\r\n)(Logo);\r\n\r\nexport default ConnectedLogo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SheetStyles = styled.div`\r\n  height: ${props => props.sheetHeight}px;\r\n  width: ${props => props.sheetWidth}px;\r\n  background-color: ${({theme}) => theme.paper.normal};\r\n  cursor: ${props => props.cursorOverall};\r\n  & svg{\r\n    & *:hover{\r\n      cursor: ${props => props.cursorHover};\r\n      opacity: ${props => props.cursorHover !== 'default' ? 0.6 : 1};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  position: absolute;\r\n  width: ${props => Math.max(props.sheetWidth,props.sheetWidth)}px;\r\n  top: 10px;\r\n  bottom: 10px;\r\n  left: ${props => props.offset}px;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useMousePosition = (offsetX,offsetY) => {\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => setPosition({ x: e.clientX-offsetX, y: e.clientY-offsetY });\r\n        window.addEventListener(\"mousemove\", setFromEvent);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", setFromEvent);\r\n        };\r\n    }, [offsetX, offsetY]);\r\n\r\n    return position;\r\n};","import {\r\n    CIRCLE_ADD,\r\n    CIRCLE_DELETE, CURVE_ADD, CURVE_DELETE,\r\n    LINE_ADD, LINE_DELETE, RECT_ADD, RECT_DELETE, TEXT_ADD, TEXT_DELETE,\r\n} from '../../constants';\r\n\r\nexport const addLine = line => {\r\n    return{\r\n        type: LINE_ADD,\r\n        payload: line\r\n    }\r\n};\r\n\r\nexport const addCircle = circle => {\r\n    return{\r\n        type: CIRCLE_ADD,\r\n        payload: circle\r\n    }\r\n};\r\n\r\nexport const addRect = rect => {\r\n    return{\r\n        type: RECT_ADD,\r\n        payload: rect\r\n    }\r\n};\r\n\r\nexport const addCurve = curve => {\r\n    return{\r\n        type: CURVE_ADD,\r\n        payload: curve\r\n    }\r\n};\r\n\r\nexport const addText = text => {\r\n    return{\r\n        type: TEXT_ADD,\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const deleteLine = id => {\r\n    return{\r\n        type: LINE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCircle = id => {\r\n    return{\r\n        type: CIRCLE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteRect = id => {\r\n    return{\r\n        type: RECT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteCurve = id => {\r\n    return{\r\n        type: CURVE_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n\r\nexport const deleteText = id => {\r\n    return{\r\n        type: TEXT_DELETE,\r\n        payload: id\r\n    }\r\n};\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst PolyLine = ({id, color, pattern, lineWidth, addLine, offset, sheetWidth, sheetHeight, setDrawing, polyLines}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                if(pointsValue.current.length > 1){\r\n                    pointsValue.current.forEach((point, index) => {\r\n                        if (pointsValue.current[index+1]){\r\n                            const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                            line['points'] = [pointsValue.current[index],pointsValue.current[index+1]];\r\n                            line['styles'] = styles;\r\n                            line['id'] = 'line__'+(parseInt(id.slice(6))+index);\r\n                            addLine(line);\r\n                        }\r\n                    });\r\n                }\r\n                setDrawing('');\r\n            }\r\n            if (e.code === 'Escape') return clean();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            setDrawing('');\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    const linesToDraw = pointsPosition.map((point, index) => {\r\n        if (pointsValue.current.length === 1 || index === pointsPosition.length - 1) {\r\n            return (\r\n                <LineSVG\r\n                    key={index}\r\n                    firstPointX={point.x}\r\n                    firstPointY={point.y}\r\n                    secondPointX={cursorPosition.x}\r\n                    secondPointY={cursorPosition.y}\r\n                    color={color}\r\n                    linePattern={pattern}\r\n                    lineWidth={lineWidth}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <LineSVG\r\n                key={index}\r\n                firstPointX={point.x}\r\n                firstPointY={point.y}\r\n                secondPointX={pointsPosition[index + 1].x}\r\n                secondPointY={pointsPosition[index + 1].y}\r\n                color={color}\r\n                linePattern={pattern}\r\n                lineWidth={lineWidth}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        pointsValue.current.length > 0\r\n            ?\r\n                linesToDraw\r\n            :\r\n                null\r\n    );\r\n};\r\n\r\nconst ConnectedPolyLine = connect(state => ({\r\n    polyLines: state.elements.polyLines,\r\n    offset: state.application.sheetOffset,\r\n    sheetWidth: state.application.sheetWidth,\r\n    sheetHeight: state.application.sheetHeight,\r\n    color: state.style.color,\r\n    pattern: state.style.pattern,\r\n    lineWidth: state.style.lineWidth,\r\n}),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(PolyLine);\r\n\r\nexport default ConnectedPolyLine;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport {addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\n\r\nconst Line = ({id, color, pattern, lineWidth, lines, addLine, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [line, styles] = [{}, {color, pattern, lineWidth}];\r\n                line['points'] = pointsValue.current;\r\n                line['styles'] = styles;\r\n                line['id'] = id;\r\n                addLine(line);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addLine, color, lineWidth, lines.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let lineToDraw = null;\r\n    if (drawing === '') lineToDraw = null;\r\n    else if (pointsPosition.length === 2) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {pointsPosition[1].x}\r\n            secondPointY = {pointsPosition[1].y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n    else if (pointsPosition.length === 1) lineToDraw = (\r\n        <LineSVG\r\n            firstPointX = {pointsPosition[0].x}\r\n            firstPointY = {pointsPosition[0].y}\r\n            secondPointX = {cursorPosition.x}\r\n            secondPointY = {cursorPosition.y}\r\n            color= {color}\r\n            linePattern = {pattern}\r\n            lineWidth = {lineWidth}\r\n        />)\r\n\r\n    return (\r\n        lineToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedLine = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        lines: state.elements.lines,\r\n        color: state.style.color,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addLine,\r\n        setDrawing,\r\n    }\r\n)(Line);\r\n\r\nexport default ConnectedLine;\r\n","import React from 'react';\r\nimport LineSVG from \"../line\";\r\n\r\nconst PolyLineSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                points,\r\n                onClick}) => {\r\n\r\n    const polyLineToDraw = points.map((point, index) => {\r\n        if (points[index+1]){\r\n            return(\r\n                <LineSVG\r\n                    key={index}\r\n                    id={id+'__'+index}\r\n                    firstPointX = {point.x}\r\n                    firstPointY = {point.y}\r\n                    secondPointX = {points[index+1].x}\r\n                    secondPointY = {points[index+1].y}\r\n                    color= {color}\r\n                    linePattern = {linePattern}\r\n                    lineWidth = {lineWidth}\r\n                    onClick = {() => onClick(id+'__'+index)}\r\n                />\r\n            )\r\n        }\r\n        return null;\r\n    })\r\n\r\n    return (\r\n        polyLineToDraw\r\n    )\r\n};\r\n\r\nexport default PolyLineSVG;\r\n","import React from 'react';\r\nimport {SheetStyles} from \"./WrokspaceStyles\";\r\n\r\nconst Sheet = ({sheetWidth, sheetHeight, drawing, children}) => {\r\n    let cursorOverall = 'default';\r\n    let cursorHover = 'default';\r\n    switch (drawing){\r\n        case 'select':\r\n            cursorHover = 'pointer'\r\n            break;\r\n        case 'text':\r\n            cursorOverall = 'text'\r\n            break;\r\n        case 'delete':\r\n            cursorHover = 'not-allowed'\r\n            break;\r\n        case '':\r\n            cursorOverall = 'default'\r\n            break;\r\n        default:\r\n            cursorOverall = 'crosshair'\r\n            cursorHover = 'crosshair'\r\n    }\r\n    return (\r\n        <SheetStyles\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}\r\n            cursorHover={cursorHover}\r\n            cursorOverall={cursorOverall}>\r\n            <svg\r\n                width={sheetWidth}\r\n                height={sheetHeight}\r\n                style={{position: 'fixed'}}>\r\n                {children}\r\n            </svg>\r\n        </SheetStyles>\r\n    );\r\n};\r\n\r\nexport default Sheet;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst CircleSVG = ({id,\r\n                       color= 'red',\r\n                       linePattern = null,\r\n                       lineWidth = 1,\r\n                       centerX = 0,\r\n                       centerY = 0,\r\n                       radius = 1,\r\n                       fillColor = 'transparent',\r\n                       onClick}) => {\r\n\r\n    const circleStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern]);\r\n\r\n    return (\r\n        <circle\r\n            id={id}\r\n            cx={centerX}\r\n            cy={centerY}\r\n            r={radius}\r\n            style={circleStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default CircleSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addCircle, addLine} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\n\r\nconst Circle = ({id, color, pattern, lineWidth, fillColor, circles, addCircle, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [circle, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                circle['point'] = pointsValue.current[0];\r\n                circle['radius'] = Math.sqrt(Math.abs((pointsValue.current[0].x-pointsValue.current[1].x)**2)+Math.abs((pointsValue.current[0].y-pointsValue.current[1].y)**2))\r\n                circle['styles'] = styles;\r\n                circle['id'] = id;\r\n                addCircle(circle);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addCircle, color, fillColor, lineWidth, circles.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let circleToDraw = null;\r\n    if (drawing === '') circleToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((pointsPosition[1].x-pointsPosition[0].x)**2)+Math.abs((pointsPosition[1].y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        circleToDraw = (\r\n            <CircleSVG\r\n                centerX = {pointsPosition[0].x}\r\n                centerY = {pointsPosition[0].y}\r\n                radius = {Math.sqrt(Math.abs((cursorPosition.x-pointsPosition[0].x)**2)+Math.abs((cursorPosition.y-pointsPosition[0].y)**2))}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        circleToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedCircle = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        circles: state.elements.circles,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCircle,\r\n        setDrawing,\r\n    }\r\n)(Circle);\r\n\r\nexport default ConnectedCircle;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst RectSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                positionX = 0,\r\n                positionY = 0,\r\n                radiusX= 0,\r\n                radiusY = 0,\r\n                width= 1,\r\n                height= 1,\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const rectStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <rect\r\n            id={id}\r\n            x={positionX}\r\n            y={positionY}\r\n            rx={radiusX}\r\n            ry={radiusY}\r\n            width={width}\r\n            height={height}\r\n            style={rectStyle}\r\n            onClick={onClick}\r\n        />\r\n    )\r\n};\r\n\r\nexport default RectSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addRect} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\n\r\nconst Rect = ({id, color, pattern, lineWidth, fillColor, rects, addRect, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n    const pointsValue = useRef([]);\r\n    const [pointsPosition, setPointsPosition] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointsPosition([...pointsValue.current])\r\n                stopDrawing()\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointsPosition([...pointsValue.current])\r\n        }\r\n        const stopDrawing = (e) => {\r\n            const clean = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                setDrawing('');\r\n            }\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                const [rect, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                rect['point'] = {x: Math.min(pointsValue.current[0].x,pointsValue.current[1].x), y:Math.min(pointsValue.current[0].y,pointsValue.current[1].y)};\r\n                rect['width'] = Math.abs(pointsValue.current[0].x - pointsValue.current[1].x)\r\n                rect['height'] = Math.abs(pointsValue.current[0].y - pointsValue.current[1].y)\r\n                rect['styles'] = styles;\r\n                rect['id'] = id;\r\n                addRect(rect);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return clean();\r\n            return finish();\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n        };\r\n    }, [id, setDrawing, addRect, color, fillColor, lineWidth, rects.length, offsetX, pattern, sheetHeight, sheetWidth]);\r\n\r\n    let rectToDraw = null;\r\n    if (drawing === '') rectToDraw = null;\r\n    else if (pointsPosition.length === 2) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x,pointsPosition[1].x)}\r\n                positionY = {Math.min(pointsPosition[0].y,pointsPosition[1].y)}\r\n                width = {Math.abs(pointsPosition[0].x - pointsPosition[1].x)}\r\n                height = {Math.abs(pointsPosition[0].y - pointsPosition[1].y)}\r\n                color = {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n    else if (pointsPosition.length === 1) {\r\n        rectToDraw = (\r\n            <RectSVG\r\n                positionX = {Math.min(pointsPosition[0].x, cursorPosition.x)}\r\n                positionY = {Math.min(pointsPosition[0].y, cursorPosition.y)}\r\n                width = {Math.abs(cursorPosition.x - pointsPosition[0].x)}\r\n                height = {Math.abs(cursorPosition.y - pointsPosition[0].y)}\r\n                color= {color}\r\n                linePattern = {pattern}\r\n                lineWidth = {lineWidth}\r\n                fillColor = {fillColor}\r\n            />)\r\n    }\r\n\r\n    return (\r\n        rectToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedRect = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        rects: state.elements.rects,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addRect,\r\n        setDrawing,\r\n    }\r\n)(Rect);\r\n\r\nexport default ConnectedRect;","import styled from \"styled-components\";\r\nimport {SheetStyles} from \"../../Elements/Workspace/WrokspaceStyles\";\r\n\r\nexport const StyledCurve = styled(SheetStyles)`\r\n    height: ${props => props.sheetHeight}px;\r\n    width: ${props => props.sheetWidth}px;\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n    transform: translateY(${props => (props.sheetHeight)*(-1)}px);\r\n    background-color: transparent;\r\n    \r\n    & #container{\r\n      width: 100%;\r\n      height: 100%;\r\n      background: transparent;\r\n      margin: 0;\r\n      text-align: center;\r\n    }\r\n\r\n    \r\n    #code{\r\n      display: block;\r\n      width: auto;\r\n      font: bold 3vw monospace;\r\n      margin: 0;\r\n      padding: 0;\r\n      color: #1E1935;\r\n      background: rgba(221,221,221,0.35);\r\n    }\r\n    \r\n    &::selection{\r\n      background: #EF2D56;\r\n      color: transparent;\r\n    }\r\n\r\n    & svg, g{\r\n      width: ${props => props.sheetWidth}px;\r\n      height: ${props => props.sheetHeight}px;\r\n    }\r\n    \r\n    & path{\r\n      stroke-width: 8;\r\n      stroke: #1E1935;\r\n      stroke-linecap: round;\r\n      fill: none;\r\n    }\r\n\r\n    \r\n    & path.fill{\r\n      fill: #1E1935;\r\n    }\r\n\r\n    \r\n    & circle{\r\n      stroke-width: 2;\r\n      stroke: #EF2D56;\r\n      fill: #fff;\r\n    }\r\n\r\n    \r\n    & circle:hover{\r\n      fill: #EF2D56;\r\n      cursor: move;\r\n    }\r\n\r\n    \r\n    & line{\r\n      stroke-width: 1;\r\n      stroke: #999;\r\n      stroke-linecap: round;\r\n      stroke-dasharray: 5,3;\r\n    }\r\n`;","import React, {useMemo} from 'react';\r\n\r\nconst CurveSVG = ({id,\r\n                color= 'red',\r\n                linePattern = null,\r\n                lineWidth = 1,\r\n                d=\"M100,250 C100,100 400,100 400,250\",\r\n                fillColor = 'transparent',\r\n                onClick}) => {\r\n\r\n    const curveStyle = useMemo(() => ({\r\n        stroke: color,\r\n        strokeWidth: lineWidth,\r\n        strokeDasharray: linePattern,\r\n        fill: fillColor,\r\n    }), [color, lineWidth, linePattern, fillColor]);\r\n\r\n    return (\r\n        <path\r\n            id={id}\r\n            style={curveStyle}\r\n            d={d}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CurveSVG;\r\n","import React, {useEffect, useRef} from 'react';\r\nimport {StyledCurve} from \"./CurveStyles\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCurve} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\n\r\nconst Curve = ({id, color, pattern, lineWidth, fillColor, curves, addCurve, sheetWidth, sheetHeight, setDrawing}) => {\r\n    const curveD = useRef('M100,250 C100,100 400,100 400,250');\r\n\r\n    useEffect(() => {\r\n        let container, svg, cType, code, point = {}, line = {}, fill = false, drag = null, dPoint;\r\n\r\n        function Init() {\r\n            const c = svg.getElementsByTagName(\"circle\");\r\n            for (let i = 0; i < c.length; i++) {\r\n                point[c[i].getAttributeNS(null,\"id\")] = {\r\n                    x: parseInt(c[i].getAttributeNS(null,\"cx\"),10),\r\n                    y: parseInt(c[i].getAttributeNS(null,\"cy\"),10)\r\n                };\r\n            }\r\n\r\n            line.l1 = svg.getElementById(\"l1\");\r\n            line.l2 = svg.getElementById(\"l2\");\r\n            line.curve = svg.getElementById(\"curve\");\r\n            code = document.getElementById(\"code\");\r\n            svg.onmousedown = svg.onmousemove = svg.onmouseup = Drag;\r\n            svg.ontouchstart = svg.ontouchmove = svg.ontouchend = Drag;\r\n            DrawSVG();\r\n        }\r\n\r\n        function DrawSVG() {\r\n            line.l1.setAttributeNS(null, \"x1\", point.p1.x);\r\n            line.l1.setAttributeNS(null, \"y1\", point.p1.y);\r\n            line.l1.setAttributeNS(null, \"x2\", point.c1.x);\r\n            line.l1.setAttributeNS(null, \"y2\", point.c1.y);\r\n\r\n            const c2 = (point.c2 ? \"c2\" : \"c1\");\r\n            line.l2.setAttributeNS(null, \"x1\", point.p2.x);\r\n            line.l2.setAttributeNS(null, \"y1\", point.p2.y);\r\n            line.l2.setAttributeNS(null, \"x2\", point[c2].x);\r\n            line.l2.setAttributeNS(null, \"y2\", point[c2].y);\r\n\r\n            const d =\r\n                \"M\"+point.p1.x+\",\"+point.p1.y+\" \"+cType+\r\n                point.c1.x+\",\"+point.c1.y+\" \"+\r\n                (point.c2 ? point.c2.x+\",\"+point.c2.y+\" \" : \"\")+\r\n                point.p2.x+\",\"+point.p2.y+\r\n                (fill ? \" Z\" : \"\");\r\n            line.curve.setAttributeNS(null, \"d\", d);\r\n            curveD.current = d;\r\n\r\n            if (code) {\r\n                code.textContent = '<path d=\"'+d+'\" />';\r\n            }\r\n        }\r\n\r\n        function Drag(e) {\r\n\r\n            e.stopPropagation();\r\n            let t = e.target, id = t.id, et = e.type, m = MousePos(e);\r\n\r\n            if (!drag && et === \"mousedown\" && id === \"curve\") {\r\n                fill = !fill;\r\n                t.setAttributeNS(null, \"class\", (fill ? \"fill\" : \"\"));\r\n                DrawSVG();\r\n            }\r\n\r\n            if (!drag && typeof(point[id]) != \"undefined\" && (et === \"mousedown\" || et === \"touchstart\")) {\r\n                drag = t;\r\n                dPoint = m;\r\n            }\r\n\r\n            if (drag && (et === \"mousemove\" || et === \"touchmove\")) {\r\n                id = drag.id;\r\n                point[id].x += m.x - dPoint.x;\r\n                point[id].y += m.y - dPoint.y;\r\n                dPoint = m;\r\n                drag.setAttributeNS(null, \"cx\", point[id].x);\r\n                drag.setAttributeNS(null, \"cy\", point[id].y);\r\n                DrawSVG();\r\n            }\r\n\r\n            if (drag && (et === \"mouseup\" || et === \"touchend\")) {\r\n                drag = null;\r\n            }\r\n\r\n        }\r\n\r\n        function MousePos(event) {\r\n            return {\r\n                x: Math.max(0, event.pageX),\r\n                y: Math.max(0, event.pageY)\r\n            }\r\n        }\r\n\r\n        function handleCurve(){\r\n            container = document.getElementById(\"container\");\r\n            if (container) {\r\n                cType = container.className;\r\n                svg = document.getElementById(\"svg\");\r\n                Init();\r\n            }\r\n        }\r\n\r\n        const stopDrawing = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"keydown\", stopDrawing);\r\n                window.removeEventListener(\"mousemove\", handleCurve);\r\n                const [curve, styles] = [{}, {color, pattern, fillColor, lineWidth}];\r\n                curve['d'] = curveD.current;\r\n                curve['styles'] = styles;\r\n                curve['id'] = id;\r\n                addCurve(curve);\r\n                setDrawing('');\r\n            }\r\n            if (e && e.code === 'Escape') return finish();\r\n        }\r\n        window.addEventListener(\"keydown\", stopDrawing);\r\n        document.addEventListener('mousemove', handleCurve);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"keydown\", stopDrawing);\r\n            document.removeEventListener(\"mousemove\", handleCurve);\r\n        };\r\n    }, [id, setDrawing, addCurve, color, fillColor, lineWidth, curves.length]);\r\n\r\n    return (\r\n        <StyledCurve\r\n            sheetWidth={sheetWidth}\r\n            sheetHeight={sheetHeight}>\r\n            <div id=\"container\" className=\"C\">\r\n                <svg id=\"svg\">\r\n                    <CurveSVG id=\"curve\"\r\n                              color= {color}\r\n                              linePattern = {pattern}\r\n                              lineWidth = {lineWidth}\r\n                              fillColor = {fillColor}\r\n                              d=\"M100,250 C100,100 400,100 400,250\"/>\r\n                    <g id=\"main\">\r\n                        <circle id=\"p1\" cx=\"100\" cy=\"250\" r=\"16\"/>\r\n                        <circle id=\"p2\" cx=\"400\" cy=\"250\" r=\"16\"/>\r\n\r\n                        <circle id=\"c1\" cx=\"100\" cy=\"100\" r=\"8\"/>\r\n                        <circle id=\"c2\" cx=\"400\" cy=\"100\" r=\"8\"/>\r\n\r\n                        <line id=\"l1\" x1=\"100\" y1=\"250\" x2=\"100\" y2=\"100\"/>\r\n                        <line id=\"l2\" x1=\"400\" y1=\"250\" x2=\"400\" y2=\"100\"/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </StyledCurve>\r\n    )\r\n};\r\n\r\nconst ConnectedCurve = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        curves: state.elements.curves,\r\n        color: state.style.color,\r\n        fillColor: state.style.fill,\r\n        pattern: state.style.pattern,\r\n        lineWidth: state.style.lineWidth,\r\n    }),\r\n    {\r\n        addCurve,\r\n        setDrawing,\r\n    }\r\n)(Curve);\r\n\r\nexport default ConnectedCurve;\r\n","import React, {useMemo} from 'react';\r\n\r\nconst TextSVG = ({id,\r\n                color= 'red',\r\n                lineWidth = 2,\r\n                pointX = 0,\r\n                fontSize = 13,\r\n                pointY = 0,\r\n                font = 'Courier New',\r\n                text = 'text',\r\n                writing = false,\r\n                onClick}) => {\r\n\r\n    let fontWeight = '';\r\n    switch (lineWidth) {\r\n        case 1: fontWeight = 'italic'; break;\r\n        case 2: fontWeight = 'lighter'; break;\r\n        case 10: fontWeight = 'bold'; break;\r\n        default: fontWeight = 'normal'; break;\r\n    }\r\n\r\n    const fontStyle = useMemo(() => ({\r\n        font: fontWeight + ' ' + fontSize + 'px ' + font,\r\n        fill: color\r\n    }), [color, fontWeight, font, fontSize]);\r\n\r\n    return (\r\n        <text\r\n            id={id}\r\n            x={pointX}\r\n            y={pointY}\r\n            style={fontStyle}\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </text>\r\n    )\r\n};\r\n\r\nexport default TextSVG;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useMousePosition} from \"../../../hooks/useMousePosition\";\r\nimport {addText} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {setDrawing} from \"../../../data/actions/applicationActions/applicationActions\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\n\r\nconst Text = ({id, color, fontSize, lineWidth, texts, addText, offset, sheetWidth, sheetHeight, drawing, setDrawing}) => {\r\n    const offsetX = offset+30;\r\n    const offsetY = 10;\r\n    const pointsValue = useRef([]);\r\n    const textToWrite = useRef('');\r\n    const [textState, setTextState] = useState('');\r\n    const [pointPosition, setPointPosition] = useState([]);\r\n    const cursorPosition = useMousePosition(offsetX,offsetY);\r\n\r\n    useEffect(() => {\r\n        const setFromEvent = (e) => {\r\n            if (e.clientX < offsetX + sheetWidth && e.clientX > offsetX &&\r\n                e.clientY < offsetY + sheetHeight && e.clientY > offsetY) pointsValue.current.push({x: e.clientX-offsetX, y: e.clientY-offsetY});\r\n            const escapeFunction = () => {\r\n                setPointPosition([pointsValue.current[0]])\r\n                const e = {};\r\n                e.code = 'Escape'\r\n                handleKeyInput(e);\r\n            }\r\n            if (pointsValue.current.length === 2) return escapeFunction();\r\n            return setPointPosition([...pointsValue.current])\r\n        }\r\n        const handleKeyInput = (e) => {\r\n            const finish = () => {\r\n                window.removeEventListener(\"click\", setFromEvent);\r\n                window.removeEventListener(\"keydown\", handleKeyInput);\r\n                const [text, styles] = [{}, {color, fontSize, lineWidth}];\r\n                text['point'] = pointsValue.current;\r\n                text['styles'] = styles;\r\n                text['id'] = id;\r\n                text['text'] = textToWrite.current;\r\n                addText(text);\r\n                setDrawing('');\r\n            }\r\n            const setText = (e) => {\r\n                let text = '';\r\n                if (e.code === 'Backspace') text = textToWrite.current.slice(0,-1);\r\n                else text =  textToWrite.current + e.key;\r\n                textToWrite.current = text;\r\n                setTextState(text);\r\n            }\r\n            if (e && e.code === 'Escape' || e.code === 'Enter') return finish();\r\n            else if (e && e.code) return setText(e);\r\n        }\r\n        window.addEventListener(\"click\", setFromEvent);\r\n        window.addEventListener(\"keydown\", handleKeyInput);\r\n\r\n        return () => {\r\n            setDrawing('');\r\n            window.removeEventListener(\"click\", setFromEvent);\r\n            window.removeEventListener(\"keydown\", handleKeyInput);\r\n        };\r\n    }, [id, setDrawing, addText, color, lineWidth, fontSize, texts.length, offsetX, sheetHeight, sheetWidth]);\r\n\r\n    let textToDraw = null;\r\n    if (drawing === '') textToDraw = null;\r\n    else if (pointPosition.length === 1) textToDraw = (\r\n        <TextSVG\r\n            pointX = {pointPosition[0].x}\r\n            pointY = {pointPosition[0].y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n    else if (pointPosition.length === 0) textToDraw = (\r\n        <TextSVG\r\n            pointX = {cursorPosition.x}\r\n            pointY = {cursorPosition.y}\r\n            fontSize = {fontSize}\r\n            text = {textToWrite.current}\r\n            color= {color}\r\n            lineWidth = {lineWidth}\r\n            writing = {true}\r\n        />)\r\n\r\n    return (\r\n        textToDraw\r\n    )\r\n};\r\n\r\nconst ConnectedText = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n        texts: state.elements.texts,\r\n        color: state.style.color,\r\n        lineWidth: state.style.lineWidth,\r\n        fontSize: state.style.fontSize,\r\n    }),\r\n    {\r\n        addText,\r\n        setDrawing,\r\n    }\r\n)(Text);\r\n\r\nexport default ConnectedText;\r\n","import React from 'react';\r\nimport {WorkspaceWrapper} from \"./WrokspaceStyles\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport PolyLine from \"../../drawElements/polyLine\";\r\nimport Line from \"../../drawElements/line\";\r\nimport {connect} from \"react-redux\";\r\nimport LineSVG from \"../../sheetElements/line\";\r\nimport PolyLineSVG from \"../../sheetElements/polyLine\";\r\nimport Sheet from \"./Sheet\";\r\nimport {\r\n    deleteCircle,\r\n    deleteCurve,\r\n    deleteLine,\r\n    deleteRect,\r\n    deleteText\r\n} from \"../../../data/actions/drawingActions/drawingActions\";\r\nimport CircleSVG from \"../../sheetElements/circle\";\r\nimport Circle from \"../../drawElements/circle/Circle\";\r\nimport RectSVG from \"../../sheetElements/rect\";\r\nimport Rect from \"../../drawElements/rect/Rect\";\r\nimport Curve from \"../../drawElements/curve/Curve\";\r\nimport CurveSVG from \"../../sheetElements/curve\";\r\nimport Text from \"../../drawElements/text\";\r\nimport TextSVG from \"../../sheetElements/text\";\r\n\r\nconst Workspace = ({drawing, drawings, offset, sheetWidth, sheetHeight, deleteLine, deleteCircle, deleteText, deleteRect, deleteCurve}) => {\r\n    const lines = []\r\n    const polyLines = []\r\n    const circles = []\r\n    const rects = []\r\n    const curves = []\r\n    const texts = []\r\n\r\n    const handleOnClick = (id, type) => {\r\n        const onSelect = (id) => {\r\n            console.log('select '+id)\r\n        }\r\n        const onDelete = (id, type) => {\r\n            switch (type) {\r\n                case \"circle\": deleteCircle(id); break;\r\n                case \"rect\": deleteRect(id); break;\r\n                case \"curve\": deleteCurve(id); break;\r\n                case \"text\": deleteText(id); break;\r\n                default: deleteLine(id); break;\r\n            }\r\n        }\r\n        if (drawing === 'select') return onSelect(id);\r\n        else if (drawing === 'delete') return onDelete(id,type);\r\n        else return () => {}\r\n    }\r\n\r\n    Object.entries(drawings).forEach(element => {\r\n        if (element[0] === 'lines'){\r\n            return element[1].forEach((line) => (\r\n                lines.push(<LineSVG\r\n                    id={line.id}\r\n                    key={line.points[0].x*line.points[1].y}\r\n                    color = {line.styles.color}\r\n                    linePattern = {line.styles.pattern}\r\n                    lineWidth = {line.styles.lineWidth}\r\n                    firstPointX = {line.points[0].x}\r\n                    firstPointY = {line.points[0].y}\r\n                    secondPointX = {line.points[1].x}\r\n                    secondPointY = {line.points[1].y}\r\n                    onClick = {() => handleOnClick(line.id, 'line')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'circles'){\r\n            return element[1].forEach((circle) => (\r\n                circles.push(<CircleSVG\r\n                    id={circle.id}\r\n                    key={circle.point.x*circle.point.y}\r\n                    color = {circle.styles.color}\r\n                    fillColor = {circle.styles.fillColor}\r\n                    linePattern = {circle.styles.pattern}\r\n                    lineWidth = {circle.styles.lineWidth}\r\n                    centerX = {circle.point.x}\r\n                    centerY = {circle.point.y}\r\n                    radius = {circle.radius}\r\n                    onClick = {() => handleOnClick(circle.id, 'circle')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'rects'){\r\n            return element[1].forEach((rect) => (\r\n                rects.push(<RectSVG\r\n                    id={rect.id}\r\n                    key={rect.point.x*rect.point.y}\r\n                    color = {rect.styles.color}\r\n                    fillColor = {rect.styles.fillColor}\r\n                    linePattern = {rect.styles.pattern}\r\n                    lineWidth = {rect.styles.lineWidth}\r\n                    positionX = {rect.point.x}\r\n                    positionY = {rect.point.y}\r\n                    width ={rect.width}\r\n                    height ={rect.height}\r\n                    onClick = {() => handleOnClick(rect.id, 'rect')}\r\n                />)\r\n            ))\r\n        }\r\n        if (element[0] === 'polyLines'){\r\n            return element[1].forEach((polyLine,index) => {\r\n                polyLines.push(<PolyLineSVG\r\n                    id={'polyLine__'+index}\r\n                    key={polyLine.points[0].x*polyLine.points[1].y}\r\n                    color = {polyLine.styles.color}\r\n                    linePattern = {polyLine.styles.pattern}\r\n                    lineWidth = {polyLine.styles.lineWidth}\r\n                    points={polyLine.points}\r\n                    onClick = {(id) => handleOnClick(id, 'line')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'curves'){\r\n            return element[1].forEach((curve,index) => {\r\n                curves.push(<CurveSVG\r\n                    id={curve.id}\r\n                    key={curve.d}\r\n                    color = {curve.styles.color}\r\n                    fillColor = {curve.styles.fillColor}\r\n                    linePattern = {curve.styles.pattern}\r\n                    lineWidth = {curve.styles.lineWidth}\r\n                    d={curve.d}\r\n                    onClick = {() => handleOnClick(curve.id, 'curve')}\r\n                />)\r\n            })\r\n        }\r\n        if (element[0] === 'texts'){\r\n            return element[1].forEach((text,index) => {\r\n                texts.push(<TextSVG\r\n                    id={text.id}\r\n                    key={text.text}\r\n                    color = {text.styles.color}\r\n                    fontSize = {text.styles.fontSize}\r\n                    lineWidth = {text.styles.lineWidth}\r\n                    pointX = {text.point[0].x}\r\n                    pointY = {text.point[0].y}\r\n                    text={text.text}\r\n                    onClick = {() => handleOnClick(text.id, 'text')}\r\n                />)\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <WorkspaceWrapper offset={offset+30} sheetWidth={sheetWidth} sheetHeight={sheetHeight}>\r\n            <TransformWrapper pan={drawing === 'curve' ? {disabled: true} : {disabled: false}}>\r\n                <TransformComponent>\r\n                    <Sheet sheetWidth={sheetWidth} sheetHeight={sheetHeight} drawing={drawing}>\r\n                        {rects}\r\n                        {circles}\r\n                        {texts}\r\n                        {curves}\r\n                        {polyLines}\r\n                        {lines}\r\n                        {drawing === 'rect' && <Rect id={'rect__'+drawings.rects.length}/>}\r\n                        {drawing === 'circle' && <Circle id={'circle__'+drawings.circles.length}/>}\r\n                        {drawing === 'text' && <Text id={'text__'+drawings.texts.length}/>}\r\n                        {drawing === 'polyLine' && <PolyLine id={'line__'+drawings.lines.length}/>}\r\n                        {drawing === 'line' && <Line id={'line__'+drawings.lines.length}/>}\r\n                    </Sheet>\r\n                    {drawing === 'curve' && <Curve id={'curve__'+drawings.curves.length}/>}\r\n                </TransformComponent>\r\n            </TransformWrapper>\r\n        </WorkspaceWrapper>\r\n    );\r\n};\r\n\r\nconst ConnectedWorkspace = connect(state => ({\r\n        drawing: state.application.drawing,\r\n        drawings: state.elements,\r\n        offset: state.application.sheetOffset,\r\n        sheetWidth: state.application.sheetWidth,\r\n        sheetHeight: state.application.sheetHeight,\r\n    }), {\r\n        deleteLine,\r\n        deleteText,\r\n        deleteCircle,\r\n        deleteRect,\r\n        deleteCurve,\r\n    }\r\n)(Workspace);\r\n\r\nexport default ConnectedWorkspace;\r\n","import './App.css';\r\nimport DarkThemeProvider from \"./components/wrappers/darkThemeProvider\";\r\nimport {Provider} from 'react-redux'\r\nimport store from './data/store'\r\nimport {Wrapper} from \"./components/styleComponents/Layout\";\r\nimport Navigation from \"./components/Elements/Navigation\";\r\nimport Logo from \"./components/Elements/Logo\";\r\nimport Workspace from \"./components/Elements/Workspace\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store()}>\r\n          <DarkThemeProvider>\r\n              <Wrapper>\r\n                  <Logo/>\r\n                  <Workspace/>\r\n                  <Navigation/>\r\n              </Wrapper>\r\n          </DarkThemeProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {createStore} from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default function configureStore(preloadedState) {\r\n    const store = createStore(rootReducer, preloadedState);\r\n\r\n    if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}